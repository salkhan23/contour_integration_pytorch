# -------------------------------------------------------------------------------------------------
#  Similar to fig_exp_1_results_v3, but contains more results.
# -------------------------------------------------------------------------------------------------
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rcParams.update({
    'font.size': 18, 'lines.linewidth': 3,
    'lines.markersize': 10,
    'lines.markeredgewidth': 3
})

INVALID_RESULTS = -1000

# -------------------------------------------------------------------------------------------------
# Simulation Results
# -------------------------------------------------------------------------------------------------

# Control -----------------------------------------------------------------------------------------
# ./results/new_model_resnet_based/New - Most Recent/
# ContourIntegrationResnet50_ControlMatchParametersLayer_run_3_20200926_115550
control_run_1 = {
    'train_acc': 0.7102,
    'validation_acc': 0.7278,
    'no_optimal_stimulus_neurons': np.array([
        1, 2, 3, 4, 6, 8, 10, 11, 12, 13,
        14, 15, 16, 18, 19, 20, 22, 24, 26, 27,
        28, 29, 30, 32, 33, 35, 37, 38, 39, 40,
        42, 43, 46, 49, 50, 51, 52, 53, 54, 55,
        56, 59, 61, 62, 63]),
    'c_len_iou_vs_len_test': np.array([0.9779, 0.2256, 0.7876, 0.8269, 0.8543]),
    'c_len_iou_vs_len_validation': np.array(
        [0.9125751909939936, 0.5633319002196003, 0.6359540986544744, 0.6461498774885854, 0.6245467955159484]),
    'c_len_noise_resp': np.array([
        0.006, 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0.026, 0.003, 0., 0., 0.012, 0., 0.,
        0.]),
    'c_len_mean_gains': np.array([[0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [1., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0., 0., 119.221, 0., 0.],
                                  [0., 97.951, 2474.735, 22707.725, 28839.859],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0., 0., 4520.544, 27297.609, 41955.802],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.997, 2.053, 34.504, 116.687, 146.263],
                                  [0.997, 0., 0., 0., 0.],
                                  [0., 0., 0., 0., 0.],
                                  [0., 0., 0., 0., 0.],
                                  [0.994, 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.997, 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 329.335, 390.545, 452.949],
                                  [0., 0., 0., 0., 0.],
                                  [1., 0., 0., 0., 0.],
                                  [0., 0., 0., 0., 0.],
                                  [1., 0.041, 0.005, 0.008, 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.997, 11.583, 35.729, 50.515, 52.496],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 21092.258, 91617.438, 135849.864, 151823.399],
                                  [1., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0.989, 0., 0., 0., 0.],
                                  [0., 0., 0., 508.819, 349.813],
                                  [0.991, 6.93, 258.905, 567.678, 615.3],
                                  [1., 6.231, 11.821, 11.808, 11.96],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 40.539, 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.998, 0., 0., 0., 0.421],
                                  [1., 2.369, 2.763, 2.964, 2.555],
                                  [0.997, 24.595, 49.278, 56.124, 54.233],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0., 92266.001, 144025.048, 144842.233, 145882.847],
                                  [0.995, 63.859, 33.953, 27.4, 33.936],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0., 0., 0., 0., 0.]]),
    'spacing_noise_resp': np.array([
        0.0055, 0.0000, 0.0000, 0.0000, 0.0064, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0021, 0.0075, 0.0134, 0.0000, 0.0000, 0.0109, 0.0000, 0.0000, 0.0008, ]),
    'spacing_mean_gains': np.array([[0., 0., 129.06, 2266.563, 12114.942, 8376.547, 10639.908, 14056.522],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 2.711, 854.611, 2795.237, 11127.781, 19439.47],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 0.014, 0.473, 0.84, 1.135],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 51.066, 7603.281, 15199.988, 16381.136, 16421.671, 16229.799],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 172.82, 84.072, 1005.179, 828.726, 3863.609, 2479.5, 4399.1],
                                    [0., 219.989, 735.939, 136.868, 0., 228.714, 351.515, 702.767],
                                    [23543.913, 13973.611, 26367.655, 24664.919, 22202.16, 21537.948, 18461.512,
                                     18315.308],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 0., 0., 51.506, 624.105],
                                    [4755.502, 4747.011, 424.036, 444.363, 267.846, 1797., 2162.316, 3274.97],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [64.85, 58.529, 69.816, 69.727, 84.789, 72.728, 58.1, 66.33],
                                    [0., 0., 0., 0., 0., 0.007, 0.368, 0.614],
                                    [0., 0., 0., 0., 5.17, 8156.47, 6569.177, 8535.594],
                                    [0., 0., 0., 0., 98.573, 88.214, 626.85, 458.207],
                                    [0., 0., 0., 0., 0.07, 2.622, 30.701, 73.382],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0.087, 0.239, 0.357, 1.813, 1.493],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [676.762, 686.618, 3262.874, 12344.955, 21957.582, 44642.67, 50079.095, 57250.654],
                                    [0., 0., 0., 12.614, 0., 0., 0., 0.],
                                    [0., 0.024, 0.087, 0.055, 0.298, 0.345, 0.606, 1.01],
                                    [0., 0., 0., 0., 0., 0., 255.508, 45.069],
                                    [0.001, 0., 0., 0.035, 0.116, 0.329, 0.276, 0.217],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [59.241, 25.687, 50.871, 38.159, 54.625, 41.636, 45.238, 58.559],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [137617.525, 57740.042, 42577.487, 1571.138, 2868.924, 3661.127, 894.278, 2530.574],
                                    [0., 0., 0., 0., 0.087, 0.345, 0.345, 0.304],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 141.432, 3505.56, 15804.303, 25607.243, 29989.317],
                                    [0., 0., 0., 0., 0.056, 36.216, 76.283, 77.056],
                                    [785.141, 1123.739, 1423.711, 2885.245, 10856.161, 13918.73, 15401.98, 16606.374],
                                    [1296.939, 653.724, 164.606, 82.375, 43.795, 83.286, 129.778, 262.765],
                                    [13.879, 6.186, 5.155, 4.243, 1.438, 2.772, 1.958, 1.089],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 304.786, 1362.814, 3765.67, 5130.509, 7425.65, 13989.788, 16376.234],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 239.342, 1232.722, 4218.252, 3091.835],
                                    [3.986, 4.554, 2.589, 2.252, 1.819, 2.05, 1.976, 2.617],
                                    [63.436, 24.768, 21.881, 47.573, 58.945, 63.327, 60.702, 63.216],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 119.292, 1889.158, 3513.901, 5531.096],
                                    [147216.179, 106538.004, 80267.374, 40240.034, 33472.374, 32897.196, 29243.354,
                                     40337.559],
                                    [10.107, 35.706, 12.217, 19.508, 7.517, 25.069, 33.451, 47.096],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 0., 14.547, 85.183, 73.149],
                                    [0., 0., 0., 140.275, 4906.673, 13611.015, 16902.96, 22895.964]])
}

# ./results/new_model_resnet_based/New - Most Recent/
# ContourIntegrationResnet50_ControlMatchParametersLayer_run_2_20200928_113617
control_run_2 = {
    'train_acc': 0.7082,
    'validation_acc': 0.7233,
    'no_optimal_stimulus_neurons': np.array([
        0, 1, 4, 6, 7, 8, 9, 10, 11, 12,
        15, 16, 17, 18, 19, 22, 23, 24, 25, 28,
        29, 30, 31, 33, 34, 35, 36, 37, 38, 39,
        40, 41, 42, 43, 44, 45, 46, 48, 49, 51,
        52, 53, 54, 55, 57, 58, 60, 62]),
    'c_len_iou_vs_len_test': np.array([0.9775, 0.4752, 0.9091, 0.9140, 0.9097]),
    'c_len_iou_vs_len_validation': np.array([0.952, 0.612, 0.726, 0.749, 0.751]),
    'c_len_noise_resp': np.array([
        0.006, 0., 0., 0., 0., 0., 0., 0., 0.037, 0., 0.001, 0., 0.008, 0.04, 0., 0.027]),
    'c_len_mean_gains': np.array([[0., 0., 0., 0., 0.],
                                  [0.848, 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.999, 11.118, 17.041, 16.12, 16.02],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 39.607, 75.375],
                                  [0.992, 0., 0., 0., 0.],
                                  [0.994, 60.723, 86.071, 55.98, 62.024],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 67928.823, 124685.347, 129779.146, 131174.176],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.999, 0.103, 0., 1.067, 0.033],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.895, 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.999, 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.983, 463.941, 1172.719, 1422.214, 1263.751],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0.993, 13.549, 0.366, 0.453, 1.025],
                                  [1., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [1., 2.528, 0.992, 0.809, 0.688],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [1., 0., 0., 0., 0.],
                                  [1., 0., 0., 0., 0.],
                                  [0., 0., 0., 0., 0.],
                                  [0., 0., 35.552, 188.009, 250.795],
                                  [0., 1862.457, 11787.167, 12377.495, 14268.477],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0., 0., 0., 0., 0.],
                                  [1., 0., 0., 0., 0.],
                                  [0., 0., 0., 0., 0.],
                                  [0.995, 22.815, 294.759, 469.433, 485.362],
                                  [0., 0., 0., 0., 0.],
                                  [0.933, 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 357.903, 869.573, 5582.609],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [1., 0., 0., 0., 0.]]),
    'spacing_noise_resp': np.array([
        0.0056, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0365, 0.0000,
        0.0009, 0.0000, 0.0090, 0.0508, 0.0000, 0.0146, ]),
    'spacing_mean_gains': np.array([[0., 0., 0., 0., 1.26, 43.498, 166.376, 352.475],
                                    [0., 0., 0., 0.363, 105.144, 258.78, 320.571, 310.942],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [22.159, 19.757, 13.427, 7.865, 4.328, 6.277, 4.468, 4.879],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 314.114, 4107.633, 10827.598, 15399.974, 15058.754, 14552.105],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [154.011, 0., 0., 296.99, 31.65, 88.977, 191.099, 1290.197],
                                    [0., 0., 0.011, 1.046, 32.89, 41.753, 51.329, 43.262],
                                    [118.731, 313.293, 277.673, 123.499, 79.903, 25.895, 67.976, 94.187],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [5558.843, 3575.414, 2098.396, 53.68, 147.137, 87.123, 26.091, 37.759],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0.483, 8.037, 213.876, 508.52, 1053.333, 1337.695, 1425.584, 1296.899],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 501.598, 10462.223, 16024.852, 20898.823],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 44.833, 205.413, 175.545, 599.917, 149.284, 198.052],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 5.252, 23.905, 29.176, 26.695, 24.693],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [312.559, 152.932, 108.863, 35.853, 28.397, 35.546, 37.583, 49.814],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 532.669, 838.754, 3452.335, 8650.106, 18254.584, 18734.722],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 1.467, 5.978, 30.256, 116.814, 169.484, 207.804],
                                    [0., 0., 0., 0., 0., 32.634, 374.84, 487.35],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 3816.904, 17449.932, 18108.143, 20831.124, 20040.943, 14953.915, 11833.997],
                                    [3.549, 5.098, 98.123, 182.386, 78.802, 442.475, 339.552, 706.747],
                                    [0., 0., 0., 0., 0.279, 0.626, 1.471, 1.456],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0.816, 3.147, 1.388, 0.54, 0.539, 0.624, 1.59, 1.89],
                                    [0., 0., 0., 0., 0., 417.253, 563.845, 217.713],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0.239, 0.123, 0.12, 0.028, 0.305],
                                    [0., 0., 0., 0., 0., 0.105, 0.275, 0.401],
                                    [0., 0., 7779.398, 25526.206, 31178.275, 35984.482, 27736.414, 20033.613],
                                    [293.545, 254.854, 2924.515, 13329.301, 33915.428, 45638.534, 47266.74, 48932.314],
                                    [11332.047, 11334.028, 14470.739, 27481.628, 37602.003, 55115.122, 61763.836,
                                     70343.144],
                                    [0., 0., 0., 0., 2445.585, 6809.147, 12369.445, 10637.89],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 675.539, 5249.046, 11845.645, 18385.532],
                                    [0., 0., 613.324, 1209.964, 1647.539, 1788.107, 4541.956, 7057.087],
                                    [0., 0., 0., 0., 0., 0.03, 0.154, 0.757],
                                    [0., 0., 0., 1131.313, 4099.624, 5712.578, 7148.157, 11523.175],
                                    [172.953, 145.069, 129.356, 89.418, 46.564, 14.957, 17.08, 1.872],
                                    [0., 0., 55.956, 464.823, 2072.74, 13219.428, 21533.946, 27811.369],
                                    [0., 0., 0., 0., 0., 427.183, 753.55, 1628.96],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [709.445, 1192.715, 1521.589, 2911.438, 14309.289, 18711.654, 17460.23, 20401.145],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 0.011, 2.028, 5.772, 9.441]]),
}

# ./results/new_model_resnet_based/New - Most Recent/
# ContourIntegrationResnet50_ControlMatchParametersLayer_run_3_20200926_115550
control_run_3 = {
    'train_acc': 0.7129,
    'validation_acc': 0.7306,
    'no_optimal_stimulus_neurons': np.array([
        0, 1, 3, 5, 8, 10, 11, 12, 13, 14,
        15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
        25, 26, 27, 28, 29, 30, 31, 32, 34, 35,
        37, 38, 39, 40, 41, 43, 44, 47, 48, 49,
        50, 51, 52, 53, 54, 55, 56, 57, 59, 60,
        61, 62, 63]),
    'c_len_iou_vs_len_test': np.array([0.9655, 0.3896, 0.8353, 0.8921, 0.8870]),
    'c_len_iou_vs_len_validation': np.array([0.935, 0.629, 0.724, 0.755, 0.761]),
    'c_len_noise_resp': np.array([0., 0., 0.016, 0.009, 0., 0., 0., 0., 0.001, 0., 0.023]),
    'c_len_mean_gains': np.array([[-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.999, 0.622, 0.265, 0.361, 0.258],
                                  [0., 0., 0., 0., 0.],
                                  [0.996, 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.995, 1.195, 71.128, 348.871, 447.279],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [1., 0., 0., 0., 0.],
                                  [0., 3.643, 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [1., 0.205, 0.282, 0.28, 0.144],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 106.861, 160.842, 0., 125.066],
                                  [0., 0., 0., 0., 0.],
                                  [0.956, 6.033, 9.632, 2.016, 7.418],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 29.815],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.991, 0.505, 0., 0., 0.],
                                  [0.996, 11.084, 100.015, 115.357, 125.093],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [1., 0.908, 1.198, 1.27, 1.181],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.997, 85.92, 138.679, 147.863, 146.314],
                                  [0., 40541.906, 80111.932, 90176.483, 92112.851],
                                  [0., 188.119, 3270.533, 4212.703, 3845.285],
                                  [0.993, 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.985, 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0.994, 0.468, 0., 0., 0.],
                                  [0.093, 2218.363, 1226.799, 1506.635, 1312.1],
                                  [0.998, 0.069, 0.024, 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [1., 0., 0., 0., 0.],
                                  [0., 598.1, 26170.74, 92199.127, 114278.399],
                                  [0., 447.668, 1888.206, 1616.335, 2052.299],
                                  [0., 0., 0., 0., 0.],
                                  [0.987, 3.071, 1.099, 2.513, 1.908],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.997, 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.]]),
    'spacing_noise_resp': np.array([
        0.0000, 0.0000, 0.0206, 0.0250, 0.0027, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0307]),
    'spacing_mean_gains': np.array([[-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0.429, 0.049, 0.515, 1.166, 1.352, 2.779, 2.172, 1.595],
                                    [0., 0., 153.406, 0., 367.012, 0., 74.927, 472.673],
                                    [0., 0., 0., 0., 0., 0.673, 3.941, 112.984],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [69618.408, 45939.549, 2558.16, 7629.365, 2741.345, 6605.2, 8262.588, 7199.648],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 0., 0.042, 0.149, 0.128],
                                    [0., 0., 0., 2.851, 1.638, 1.381, 5.079, 12.898],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0.387, 1.67, 2.947, 5.625, 10.408, 10.307, 10.647, 11.128],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 14.686, 4.099, 10.197, 8.328, 30.909, 58.961, 65.886],
                                    [0., 0., 0., 0., 0., 1504.798, 3489.471, 6840.166],
                                    [0., 0.429, 2.862, 4.203, 3.959, 9.248, 10.402, 8.285],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 0., 196.184, 1532.137, 2636.8],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 25.119, 726.59, 8303.789, 14807.551, 16826.092, 16596.98, 17370.792],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 199.259, 6557.384, 10654.269, 11446.532, 3563.867, 8086.903],
                                    [30614.483, 35678.832, 16169.522, 11261.648, 8194.374, 8673.153, 14319.686,
                                     23412.555],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [1.189, 1.229, 0.558, 0.297, 0.269, 0.252, 0.277, 0.252],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0.046, 10.465, 107.26, 173.071, 177.814, 201.404, 283.647],
                                    [0., 0., 4.446, 16.875, 115.584, 253.906, 248.029, 201.591],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [365.01, 239.717, 221.966, 126.272, 68.481, 73.189, 110.015, 129.396],
                                    [85372.044, 63144.838, 63688.396, 38323.134, 30534.982, 36610.201, 46681.48,
                                     49009.681],
                                    [3421.795, 12170.405, 1241.496, 410.084, 130.447, 628.828, 2660.344, 4104.471],
                                    [0., 0.533, 0.856, 7.185, 14.458, 50.073, 88.822, 104.799],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 0.413, 6.731, 8.974, 15.208],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0.548, 2.712, 13.956, 65.837, 167.09, 290.85],
                                    [0., 1.241, 3.401, 13.812, 40.646, 88.622, 88.732, 84.816],
                                    [72.894, 116.36, 307.016, 422.986, 953.662, 1029.177, 976.813, 1082.168],
                                    [0.1, 0.138, 2.836, 6.743, 15.876, 14.592, 22.235, 27.412],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 0.142, 0.606, 1.055, 1.301],
                                    [266.144, 223.871, 203.589, 137.326, 105.38, 67.329, 44.395, 60.031],
                                    [1398.09, 5402.143, 7971.594, 12741.401, 9920.098, 6410.366, 4088.712, 5057.248],
                                    [0., 0., 3903.184, 24120.882, 35704.995, 44808.429, 46463.875, 42765.446],
                                    [0.916, 48.288, 32.073, 14.184, 9.145, 22.649, 37.264, 47.209],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 5.477, 0., 0., 214.076, 331.643, 2647.583],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0.718, 4.996, 19.694, 16.258, 15.191],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.]]),
}

# ./results/new_model_resnet_based/New - Most Recent/
# ContourIntegrationResnet50_ControlMatchParametersLayer_run_4_20200928_112208
control_run_4 = {
    'train_acc': 0.7140,
    'validation_acc': 0.7305,
    'no_optimal_stimulus_neurons': np.array([
        1, 3, 5, 6, 8, 10, 11, 12, 13, 14,
        16, 17, 18, 19, 20, 21, 22, 23, 25, 26,
        27, 28, 29, 30, 31, 32, 35, 36, 37, 39,
        40, 41, 42, 43, 44, 47, 48, 49, 50, 51,
        52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62]),
    'c_len_iou_vs_len_test': np.array([0.9655, 0.3896, 0.8353, 0.8921, 0.8870]),
    'c_len_iou_vs_len_validation': np.array([0.970, 0.620, 0.726, 0.749, 0.752]),
    'c_len_noise_resp': np.array(
        [0.005, 0., 0., 0.065, 0.036, 0., 0.016, 0., 0., 0.002, 0., 0., 0.]),
    'c_len_mean_gains': np.array([[1., 0.12, 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.965, 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0., 0., 0., 0., 0.],
                                  [0.968, 0., 0., 0., 0.],
                                  [0., 0., 6.772, 0., 255.875],
                                  [0., 0., 150.714, 161.974, 79.425],
                                  [0.998, 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [1., 0.094, 0., 0., 0.],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 99.349, 154.463, 38.245, 263.469],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0.971, 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [1., 5.758, 9.756, 10.225, 10.135],
                                  [0.98, 0., 0., 0., 0.],
                                  [0.99, 0., 0., 0., 0.],
                                  [0., 0., 0., 0., 0.],
                                  [1., 0.733, 0.29, 0.499, 0.838],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 241.978, 2633.414, 19452.598, 26307.422],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.749, 0., 2945.077, 13075.309, 18460.075],
                                  [0., 0., 260.627, 502.713, 725.76],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.995, 32.378, 82.186, 87.065, 97.698],
                                  [0., 644.048, 6225.409, 6803.197, 7711.245],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0., 784.602, 3193.306, 4295.48, 4663.599],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0.959, 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.989, 0.768, 0.357, 3.538, 3.993],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.]]),
    'spacing_noise_resp': np.array([
        0.0000, 0.0000, 0.0000, 0.0663, 0.0197, 0.0000, 0.0109, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]),
    'spacing_mean_gains': np.array([[0., 0., 0.003, 0.209, 0.712, 0.94, 1.139, 1.277],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 24.71, 70.01, 109.997, 180.396, 212.425, 214.55],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 2.823, 87.399, 202.753, 157.103, 365.011, 182.444],
                                    [0., 0., 0., 1.492, 52.946, 36.747, 0.071, 0.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 112.397, 216.565, 167.944, 134.025, 706.105],
                                    [0., 0., 0., 0., 0., 22.015, 219.233, 213.889],
                                    [0., 0., 0., 0., 2.734, 74.267, 60.557, 96.1],
                                    [325.335, 14883.817, 11325.875, 18005.627, 13983.322, 7359.528, 10529.689,
                                     8258.103],
                                    [0., 34.709, 334.466, 1084.335, 1856.848, 2873.388, 3639.483, 4522.206],
                                    [0., 0., 0., 0., 0., 1.61, 44.409, 21.63],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 0.008, 0.428, 0.439, 0.235],
                                    [0., 1067.997, 3873.511, 18133.641, 19722.265, 28186.967, 26891.33, 34689.357],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 137.442, 264.198, 281.057, 175.957, 112.458, 117.184, 241.881],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 685.761, 7348.846, 12786.377, 21328.873],
                                    [0., 0., 0.711, 56.24, 597.173, 1293.608, 1735.151, 2230.58],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [9.819, 3.369, 1.582, 1.837, 3.403, 5.51, 5.651, 6.976],
                                    [0., 0., 95.215, 4617.842, 16607.293, 40895.926, 54122.865, 65592.183],
                                    [0., 0., 11.14, 8.4, 17.638, 3.545, 38.487, 221.944],
                                    [0., 0., 90.745, 1637.986, 1769.742, 5042.822, 4844.177, 8005.284],
                                    [0.649, 0.105, 0.183, 1.303, 2.942, 4.978, 6.133, 8.621],
                                    [0., 0., 0., 0., 0., 0., 0., 79.033],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [18960.618, 38604.815, 23604.808, 22958.999, 19773.163, 45888.234, 37133.571,
                                     45712.499],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 0., 1109.196, 8465.992, 14817.914],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [51705.231, 34307.876, 28573.573, 10966.856, 15505.153, 10042.35, 7368.657,
                                     21999.347],
                                    [494.831, 7.408, 71.779, 268.618, 268.16, 617.511, 850.167, 1128.081],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [18173.132, 19140.143, 23703.397, 25982.652, 31650.787, 48833.383, 60994.129,
                                     72656.067],
                                    [4932.275, 5846.184, 10493.101, 17966.128, 4777.31, 17936.577, 20419.019,
                                     23768.321],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 0., 0., 0., 0.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 0., 4391.622, 26873.053, 28410.867],
                                    [4633.705, 10588.134, 14385.536, 23552.883, 26265.952, 37364.068, 44229.492,
                                     52358.944],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 150.624, 3673.794, 8858.009, 14091.979],
                                    [0., 0., 0.404, 1.468, 33.979, 90.216, 130.805, 181.377],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0.403, 19.727, 26.717, 35.276, 46.775, 60.668, 74.767, 87.636],
                                    [0., 81.046, 0., 0., 8.558, 99.117, 1141.882, 10096.963],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.]]),
}

# ./results/new_model_resnet_based/New - Most Recent/
# ContourIntegrationResnet50_ControlMatchParametersLayer_run_5_20200925_215055
control_run_5 = {
    'train_acc': 0.7072,
    'validation_acc': 0.7222,
    'no_optimal_stimulus_neurons': np.array([
        0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
        10, 11, 12, 13, 15, 16, 17, 19, 20, 21,
        22, 23, 24, 25, 26, 27, 28, 30, 31, 32,
        33, 34, 36, 37, 39, 40, 41, 43, 44, 45,
        46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
        57, 58, 59, 60, 62, 63]),
    'c_len_iou_vs_len_test': np.array([0.9775, 0.2226, 0.6967, 0.7951, 0.8453]),
    'c_len_iou_vs_len_validation': np.array([0.9775, 0.2226, 0.6967, 0.7951, 0.8453]),
    'c_len_noise_resp': np.array([0., 0., 0., 0.005, 0., 0., 0., 0.]),
    'c_len_mean_gains': np.array([[-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0.984, 0., 0., 0., 0.],
                                  [0., 0., 0., 0., 0.],
                                  [1., 0.027, 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.997, 1.591, 157.03, 248.312, 277.846],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.996, 0., 0., 0., 0.],
                                  [0., 0., 0., 0., 0.],
                                  [0.991, 0., 0.942, 1.259, 0.613],
                                  [0., 0., 0., 811.975, 941.13],
                                  [0., 0., 33463.182, 77007.088, 109758.581],
                                  [0., 0., 0., 0., 0.],
                                  [0.976, 0., 32.51, 368.317, 1241.646],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0., 72.192, 0., 94.554, 41.846],
                                  [0.993, 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 28027.82, 52128.713, 52538.277, 51611.602],
                                  [0., 0., 0., 0., 0.],
                                  [0., 34248.722, 48508.177, 47849.998, 47313.689],
                                  [0.989, 112.435, 322.154, 392.614, 402.286],
                                  [1., 0.374, 0.286, 0.25, 0.183],
                                  [0.978, 35.77, 82.157, 147.737, 148.59],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 0., 0., 0., 0.],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.998, 36.471, 26.597, 26.204, 23.79],
                                  [0., 0., 0., 0., 0.],
                                  [1., 3.085, 3.335, 3.559, 3.524],
                                  [0., 0., 0., 0., 0.],
                                  [0., 554.112, 2089.333, 2129.384, 2428.942],
                                  [0., 64760.051, 84050.256, 82701.017, 86635.663],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.999, 0.041, 0.224, 0.103, 0.139],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.339, 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0., 9561.38, 55192.824, 58709.946, 58135.936],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [0.997, 39.568, 57.385, 50.89, 74.984],
                                  [1., 0., 0., 0., 0.],
                                  [0., 1.268, 710.914, 4872.219, 5043.814],
                                  [0., 0., 0., 0., 0.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [-1000., -1000., -1000., -1000., -1000.],
                                  [1., 2.216, 3.26, 4.175, 4.28]]),
    'spacing_noise_resp': np.array([0.0000, 0.0000, 0.0000, 0.0090, 0.0000, 0.0024, 0.0000, 0.0000]),
    'spacing_mean_gains': np.array([[-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 21.046, 216.454, 2697.604, 307.434, 286.477],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 114.881, 6342.434, 14144.12, 23153.366, 24008.631, 24573.74],
                                    [0., 0., 20.469, 3340.559, 6209.212, 15073.7, 11143.99, 17040.981],
                                    [0., 1847.788, 3571.465, 10845.932, 8239.649, 19777.975, 24842.823, 33028.898],
                                    [0., 0., 0., 0., 0.028, 0.421, 0.672, 1.006],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [836.036, 373.296, 159.731, 159.224, 7.702, 27.881, 129.357, 139.504],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 0., 0.112, 2.551, 19.723],
                                    [0., 0., 0., 0., 0., 86.516, 101.804, 241.624],
                                    [53.747, 1459.454, 612.507, 1772.398, 1648.435, 970.229, 944.006, 1504.681],
                                    [1149.07, 2949.493, 12913.138, 14130.124, 12403.146, 14979.316, 13453.182,
                                     24238.292],
                                    [1726.149, 1065.311, 623.334, 9.837, 64.056, 27.267, 308.835, 354.984],
                                    [0., 0., 0., 0., 0., 0., 0., 0.],
                                    [17057.721, 21191.012, 13198.856, 98.967, 221.317, 717.52, 8779.52, 6781.769],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 153.792, 220.278, 301.294, 945.47, 154.179, 39.68],
                                    [0., 1537.13, 3485.427, 3445.666, 7348.615, 6383.912, 4697.635, 9629.555],
                                    [0., 0., 6.022, 31.873, 80.005, 178.284, 136.322, 131.851],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [2606.996, 1586.88, 724.024, 1505.219, 811.748, 625.36, 874.085, 1897.45],
                                    [0., 0., 0., 0., 0., 20.132, 186.379, 175.538],
                                    [48227.151, 44477.14, 5561.058, 5207.398, 8350.365, 421.41, 0., 0.],
                                    [38038.692, 29949.35, 3253.2, 6033.863, 670.899, 2218.158, 839.551, 1795.331],
                                    [0.23, 0.352, 0.151, 0.326, 0.365, 0.457, 0.613, 0.625],
                                    [5839.266, 1965.88, 8779.613, 15379.866, 6847.111, 11164.276, 9332.722, 12386.772],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [282.509, 112.601, 170.358, 2126.631, 6854.084, 19310.167, 22407.226, 33289.653],
                                    [0., 0., 0., 0., 6124.274, 13991.188, 12531.403, 11372.603],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [19.358, 15.398, 9.939, 2.496, 4.781, 22.813, 19.557, 39.73],
                                    [0., 0., 0., 14.005, 627.098, 3830.4, 7926.43, 12334.645],
                                    [3.353, 2.477, 1.583, 1.386, 0.895, 0.957, 0.851, 0.777],
                                    [0., 0., 0., 354.695, 1550.31, 9646.977, 10793.922, 18667.954],
                                    [1702.765, 7724.795, 205.859, 249.81, 56.921, 7.424, 0., 0.],
                                    [83489.447, 45897.197, 18853.625, 21915.074, 4847.881, 6193.837, 3195.336,
                                     4943.696],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0.105, 1.121, 3.654, 6.126, 8.874, 11.66, 8.738, 6.089],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [0., 0., 0., 0., 1281.285, 5547.252, 12336.85, 16734.777],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [59288.318, 37746.956, 44434.361, 54720.77, 54948.166, 63572.818, 60457.606,
                                     54806.568],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [23.468, 26.249, 17.98, 6.706, 10.435, 7.393, 13.671, 22.026],
                                    [0., 0., 0., 0., 0., 0.21, 1.467, 2.533],
                                    [5160.531, 25355.267, 22450.15, 5850.091, 6556.822, 17809.897, 29817.757,
                                     31687.227],
                                    [0., 0., 0., 65.193, 4964.603, 13949.671, 18165.39, 21988.835],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
                                    [3.941, 2.977, 3.038, 2.927, 4.111, 3.596, 4.192, 4.07]]),
}

# ./results/new_model_resnet_based/New - Most Recent/
# ContourIntegrationResnet50_ControlMatchParametersLayer_run_6_20201116_215211
control_run_6 = {
    'train_acc': 0.7226,
    'validation_acc': 0.7387,
    'no_optimal_stimulus_neurons': np.array([
        0, 1, 2, 3, 4, 5, 6, 7, 9, 10,
        11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
        21, 22, 24, 25, 26, 27, 28, 29, 30, 31,
        32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
        42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
        53, 54, 55, 56, 57, 58, 60, 61, 62, 63]),
    'c_len_iou_vs_len_test': np.array([0.9950, 0.4985, 0.9571, 0.9581, 0.9225]),
    'c_len_iou_vs_len_validation': np.array(
        [0.9484799091943387, 0.6310158035499626, 0.7324786075443626, 0.7543340287013734, 0.7576873472422221]),
    'c_len_noise_resp': np.array(([
        0., 0., 0., 0.12])),
    'c_len_mean_gains': np.array([
        [0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],
        [0.000e+00, 0.000e+00, 1.140e+02, 9.016e+02, 2.105e+03],
        [9.463e-01, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],
        [9.999e-01, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00]]),
    'spacing_noise_resp': np.array(
        [0.0000, 0.0000, 0.0000, 0.0938]),
    'spacing_mean_gains': np.array([
        [0.0000, 0.0000, 505.8231, 8214.5494, 11323.7730, 26480.5233, 29849.6537, 41876.6692],
        [1282.1575, 5344.0198, 4992.0081, 3919.5215, 2271.4761, 3110.5449, 5071.8342, 5288.6335],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]),
}

# ./results/new_model_resnet_based/New - Most Recent/
# ContourIntegrationResnet50_ControlMatchParametersLayer_run_7_20201116_215537
control_run_7 = {
    'train_acc': 0.7088,
    'validation_acc': 0.7264,
    'no_optimal_stimulus_neurons': np.array([
        0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
        10, 11, 15, 16, 17, 18, 19, 21, 23, 24,
        25, 27, 30, 31, 32, 33, 34, 35, 36, 37,
        38, 39, 40, 42, 43, 44, 46, 47, 48, 49,
        50, 51, 53, 54, 55, 56, 58, 59, 60, 62,
        63]),
    'c_len_iou_vs_len_test': np.array([0.9846, 0.2937, 0.7714, 0.8048, 0.8355]),
    'c_len_iou_vs_len_validation': np.array([
        0.9594077831002323, 0.6116651062049641, 0.7125128722325826, 0.749531616749232, 0.7536453510151204]),
    'c_len_noise_resp': np.array([
        0., 0., 0., 0.038, 0., 0., 0., 0., 0.,
        0., 0.035, 0.005, 0.013]),
    'c_len_mean_gains': np.array([
        [0.000e+00, 0.000e+00, 5.942e+02, 5.185e+02, 3.517e+02],
        [0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],
        [0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],
        [9.997e-01, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],
        [0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],
        [0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],
        [0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],
        [0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],
        [0.000e+00, 8.606e+01, 9.057e+02, 2.774e+03, 3.452e+03],
        [0.000e+00, 5.830e+03, 9.259e+03, 7.322e+03, 6.306e+03],
        [9.997e-01, 3.748e+00, 4.804e+00, 4.659e+00, 4.717e+00],
        [9.979e-01, 1.314e-01, 1.183e-01, 0.000e+00, 2.372e-01],
        [9.993e-01, 4.973e-01, 5.754e-01, 1.506e+00, 4.381e-01]]),
    'spacing_noise_resp': np.array([
        0.0000, 0.0000, 0.0000, 0.0658, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0009,
        0.0286, 0.0021, 0.0139, ]),
    'spacing_mean_gains': np.array([
        [3.1289, 2785.0381, 12151.0033, 18211.4622, 19309.2741, 29944.3988, 31026.6926, 34113.0495],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 68.8553, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 148.5408, 549.3552, 123.8791, 97.0553],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0265, 0.1659, 0.5508],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 171.7752, 581.3344, 9662.2718, 15719.5538, 20158.8762, 15686.7701, 30886.8707],
        [0.0000, 0.0000, 0.0000, 10.9541, 1635.7523, 1344.1581, 1115.0340, 336.2203],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 267.4873, 35.7868],
        [1669.9160, 2266.8290, 2072.9995, 3083.3157, 713.3677, 1447.1658, 1020.3799, 3733.0966],
        [102.9863, 69.7429, 19.9022, 2.0083, 0.2509, 0.2178, 0.8240, 0.6144],
        [5.2728, 11.7367, 10.5567, 19.6425, 24.8806, 28.6960, 30.3470, 27.2226],
        [0.0000, 0.0000, 0.0000, 0.2111, 3.3609, 4.6435, 31.1059, 25.7237],
        [0.3460, 1.2822, 3.5170, 8.1645, 11.2566, 19.5371, 28.7506, 34.2110]]),
}

# Model ---------------------------------------------------------------------------------
# Results from
# ./results/contour_dataset_multiple_runs/positive_lateral_weights_with_BN_best_gain_curves
model_run_1 = {
    'train_acc': 0.8755,
    'validation_acc': 0.8481,
    'no_optimal_stimulus_neurons': np.array([11, 12, 13, 19, 24, 31, 40, 45, 47, 56, 57, 59, 60, 62, 63]),
    'c_len_iou_vs_len_test': np.array([0.9747, 0.4611, 0.8491, 0.9005, 0.9162]),
    'c_len_noise_resp': np.array([
        1.369, 3.125, 0.607, 2.016, 0.685, 1.411, 0.151, 1.525, 0.246, 3.104,
        0.99, -1000, -1000, -1000, 2.875, 1.304, 1.354, 1.212, 1.523, -1000,
        1.235, 1.776, 1.367, 0.225, -1000, 0.649, 2.311, 2.038, 0.034, 3.026,
        1.821, -1000, 0.665, 2.275, 2.243, 1.525, 0.69, 2.253, 1.602, 0.003,
        -1000, 1.988, 3.085, 1.275, 1.103, -1000, 0.002, -1000, 1.783, 1.143,
        0.265, 0.755, 1.239, 0.061, 1.787, 2.188, -1000, -1000, 0.993, -1000,
        -1000, 1.465, -1000, -1000]),
    'c_len_mean_gains': np.array([
        [1., 1.543, 2.83, 3.146, 3.172],
        [1., 1.067, 1.148, 1.164, 1.163],
        [1., 0.681, 1.355, 1.565, 1.582],
        [1., 2.131, 3.484, 4.173, 4.312],
        [1., 2.259, 4.189, 5.135, 5.728],
        [1., 2.641, 4.467, 4.912, 5.044],
        [1., 4.738, 19.118, 29.065, 32.],
        [1., 0.619, 0.59, 0.565, 0.566],
        [1., 0.07, 5.951, 8.268, 8.674],
        [1., 1.162, 1.364, 1.42, 1.389],
        [1., 1.648, 2.361, 2.697, 2.739],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.175, 1.352, 1.415, 1.395],
        [1., 0.823, 0.861, 0.938, 0.898],
        [1., 1.261, 1.783, 1.986, 1.965],
        [1., 1.707, 2.952, 3.615, 3.563],
        [1., 0.931, 1.344, 1.491, 1.508],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.826, 3.782, 4.95, 4.978],
        [1., 1.62, 3.016, 3.562, 3.807],
        [1., 0.331, 0.4, 0.482, 0.506],
        [1., 0.63, 2.155, 2.594, 2.845],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 3.449, 5.939, 6.437, 6.407],
        [1., 0.738, 0.838, 1.024, 0.994],
        [1., 1.405, 1.634, 1.658, 1.713],
        [1., 0.963, 10.044, 23.358, 29.038],
        [1., 1.188, 1.7, 1.988, 2.015],
        [1., 1.632, 2.347, 2.617, 2.737],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.215, 0.925, 1.839, 1.965],
        [1., 0.797, 0.941, 1.041, 1.106],
        [1., 1.137, 1.246, 1.35, 1.39],
        [1., 0.637, 0.9, 0.949, 0.954],
        [1., 1.894, 2.869, 3.165, 3.204],
        [1., 1.085, 1.435, 1.556, 1.579],
        [1., 1.142, 1.539, 1.759, 1.892],
        [0.996, 377.847, 1051.226, 1168.808, 1166.792],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.708, 0.776, 0.834, 0.837],
        [1., 1.086, 1.184, 1.298, 1.413],
        [1., 0.876, 0.958, 0.989, 0.99],
        [1., 0.899, 1.063, 1.205, 1.26],
        [-1000., -1000., -1000., -1000., -1000.],
        [0.994, 0., 0., 0., 0.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.125, 1.504, 1.636, 1.592],
        [1., 2.114, 4.325, 5.39, 5.666],
        [1., 1.524, 3.684, 4.982, 5.203],
        [1., 0.61, 1.421, 2.447, 2.709],
        [1., 1.176, 1.77, 1.987, 1.989],
        [1., 0.106, 5.963, 37.128, 58.776],
        [1., 0.368, 0.665, 0.988, 1.095],
        [1., 0.38, 0.681, 0.91, 0.967],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.781, 0.815, 0.679, 0.653],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.292, 2.704, 4.188, 4.705],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.]]),
    'spacing_noise_resp': np.array([
        1.394, 3.152, 0.627, 2.042, 0.704, 1.437, 0.154, 1.545, 0.244, 3.003,
        1.08, -1000, -1000, -1000, 2.828, 1.388, 1.365, 1.259, 1.563, -1000,
        1.283, 1.826, 1.359, 0.187, -1000, 0.617, 2.341, 2.062, 0.077, 3.096,
        1.837, -1000, 0.644, 2.308, 2.322, 1.556, 0.692, 2.238, 1.663, 0.,
        -1000, 2.01, 3.155, 1.302, 1.15, -1000, 0.006, -1000, 1.75, 1.098,
        0.258, 0.703, 1.22, 0.072, 1.776, 2.116, -1000, -1000, 0.997, -1000,
        -1000, 1.481, -1000, -1000]),
    'spacing_mean_gains': np.array([
        [3.11, 2.247, 1.43, 1.573, 1.089, 0.996, 0.934, 0.906],
        [1.153, 0.81, 0.647, 0.563, 0.499, 0.488, 0.498, 0.498],
        [1.507, 0.499, 0.241, 0.484, 0.749, 1.053, 1.289, 1.417],
        [4.1, 1.977, 1.798, 1.35, 1.152, 0.721, 0.665, 0.654],
        [5.068, 4.662, 1.415, 0.356, 0.335, 0.466, 0.47, 0.353],
        [4.831, 2.501, 1.844, 2.103, 0.595, 0.328, 0.073, 0.002],
        [28.371, 18.885, 14.975, 10.429, 5.347, 2.062, 2.33, 2.217],
        [0.563, 0.18, 0.268, 0.492, 0.72, 0.81, 0.866, 0.859],
        [8.122, 2.247, 0.489, 0.54, 0., 0.041, 0.25, 1.579],
        [1.474, 0.687, 0.11, 0.164, 0.017, 0.01, 0.003, 0.002],
        [2.517, 1.597, 1.021, 0.784, 0.538, 0.377, 0.211, 0.137],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.443, 0.476, 0.363, 0.346, 0.203, 0.153, 0.077, 0.052],
        [0.896, 0., 0., 0., 0., 0., 0., 0.],
        [1.94, 1.234, 0.409, 0.014, 0.009, 0.001, 0., 0.],
        [3.456, 2.541, 1.196, 0.995, 1.274, 1.03, 1.011, 1.005],
        [1.441, 0.626, 0.03, 0.189, 0.088, 0.024, 0.002, 0.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [4.777, 3.936, 2.9, 1.592, 1.273, 1.043, 0.887, 0.86],
        [3.507, 1.912, 1.687, 1.41, 1.423, 0.971, 1.045, 1.019],
        [0.485, 0.245, 0.614, 0.837, 0.937, 0.849, 0.938, 0.993],
        [3.144, 2.688, 3.637, 4.176, 4.358, 4.798, 4.715, 4.601],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [6.778, 3.995, 2.305, 0.367, 0.396, 0.109, 0.004, 0.],
        [0.969, 0.461, 0.403, 0.611, 0.338, 0.559, 0.597, 0.616],
        [1.667, 0.804, 0.181, 0.243, 0.175, 0.105, 0.023, 0.01],
        [9.65, 3.237, 8.524, 4.924, 3.6, 5.315, 4.605, 3.134],
        [1.945, 0.898, 0.323, 0.35, 0.023, 0.015, 0.002, 0.001],
        [2.651, 1.324, 0.881, 1.08, 0.455, 0.507, 0.348, 0.352],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.895, 0.748, 0.977, 1.695, 1.069, 1.435, 1.389, 1.506],
        [1.025, 0.006, 0., 0.018, 0.067, 0.128, 0.125, 0.045],
        [1.276, 0.407, 0.103, 0.307, 0.34, 0.362, 0.312, 0.269],
        [0.919, 0.244, 0.043, 0.109, 0.044, 0.043, 0.025, 0.027],
        [3.116, 1.996, 0.351, 0.35, 0.206, 0.018, 0.014, 0.],
        [1.549, 0.788, 0.449, 0.333, 0.246, 0.207, 0.154, 0.208],
        [1.755, 1.295, 1.219, 1.117, 0.887, 0.674, 0.648, 0.626],
        [310963.068, 279441.785, 254081.034, 191738.613, 151563.616, 133972.565, 116807.292, 109080.603],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [0.838, 0.716, 0.748, 0.701, 0.687, 0.74, 0.792, 0.793],
        [1.276, 0.316, 0.037, 0.114, 0.188, 0.208, 0.138, 0.106],
        [0.956, 0.761, 0.821, 0.961, 0.917, 0.903, 0.84, 0.807],
        [1.135, 0.424, 0.054, 0.413, 0.726, 0.922, 0.895, 0.96],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [0.025, 0.187, 6.766, 32.547, 89.956, 175.938, 204.784, 216.891],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.596, 1.007, 0.681, 0.417, 0.287, 0.201, 0.235, 0.198],
        [5.622, 2.44, 1.055, 0.272, 0.263, 0.002, 0.004, 0.],
        [4.964, 6.951, 5.77, 6.318, 6.446, 6.572, 6.872, 7.223],
        [2.452, 1.34, 1.655, 1.467, 0.893, 1.059, 0.973, 0.886],
        [1.999, 0.592, 0.115, 0.3, 0.347, 0.642, 0.608, 1.089],
        [33.677, 24.522, 28.407, 17.008, 20.054, 11.426, 11.455, 9.444],
        [0.989, 0.002, 0., 0.008, 0.004, 0.058, 0.035, 0.04],
        [0.924, 0.421, 0.146, 0.128, 0.255, 0.241, 0.234, 0.269],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [0.812, 0.289, 0.396, 0.248, 0.149, 0.041, 0.002, 0.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [4.206, 2.727, 2.314, 1.719, 1.578, 1.336, 1.2, 1.075],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.]])
}

model_run_2 = {
    'train_acc': 0.8735,
    'validation_acc': 0.8420,
    'no_optimal_stimulus_neurons': np.array(
        [0, 2, 9, 10, 11, 12, 13, 14, 15, 20, 23, 24, 27, 30, 33, 36, 37, 39, 42, 43, 44, 47, 48, 52, 57, 58, 59]),
    'c_len_iou_vs_len_test': np.array([0.9072, 0.7903, 0.8912, 0.9265, 0.9335]),
    'c_len_noise_resp': np.array([
        -1000., 2.645, -1000., 0.673, 1.254, 0.092, 0.99, 0., 0.528, -1000.,
        -1000., -1000., -1000., -1000., -1000., -1000., 0.418, 0.765, 1.022, 1.332,
        -1000., 0.617, 0.997, -1000., -1000., 0., 0.245, -1000., 1.716, 0.543,
        -1000., 0.581, 1.203, -1000., 0.748, 0., -1000., -1000., 1.502, -1000.,
        1.164, 0.418, -1000., -1000., -1000., 2.281, 0.317, -1000., -1000., 1.011,
        1.321, 1.473, -1000., 2.954, 0.872, 1.162, 1.074, -1000., -1000., -1000.,
        0.008, 3.593, 0.362, 0.019]),
    'c_len_mean_gains': np.array([
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.399, 1.799, 1.847, 1.835],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.963, 3.329, 3.823, 3.811],
        [1., 1.701, 2.545, 2.733, 2.675],
        [1., 11.743, 42.724, 70.409, 85.73],
        [1., 2.185, 5.231, 6.897, 7.297],
        [0.861, 273.211, 3486.534, 3782.585, 4030.018],
        [1., 0., 0., 0., 0.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 2.254, 5.685, 6.312, 6.526],
        [1., 0.002, 0.022, 0.048, 0.068],
        [1., 0.524, 0.403, 0.549, 0.537],
        [1., 1.495, 2.59, 2.887, 2.918],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 5.368, 12.709, 16.376, 16.792],
        [1., 0., 0., 0.003, 0.002],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [0., 22593.705, 116284.805, 139115.09, 153244.406],
        [1., 0.876, 3.849, 5.707, 6.342],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.837, 2.381, 2.423, 2.426],
        [1., 6.547, 10.74, 11.889, 11.934],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.193, 0.578, 0.771, 0.82],
        [1., 0.752, 1.54, 1.849, 2.013],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.015, 0.019, 0.058, 0.057],
        [0., 64428.754, 187069.152, 190514.685, 182925.853],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 3.994, 6.835, 7.735, 7.828],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.694, 1.031, 1.179, 1.283],
        [1., 0.003, 0.095, 0.368, 0.314],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.345, 1.736, 1.847, 1.813],
        [1., 0., 0., 0.016, 0.044],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.03, 0.852, 1.468, 1.55],
        [1., 0.349, 0.595, 0.64, 0.594],
        [1., 1.694, 2.776, 3.18, 3.252],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.936, 1.352, 1.493, 1.457],
        [1., 0.083, 0.221, 0.412, 0.292],
        [1., 1.875, 3.46, 3.847, 3.876],
        [1., 0.095, 0.037, 0.055, 0.048],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [0.999, 0., 2.712, 152.407, 192.805],
        [1., 0.659, 0.788, 0.968, 0.977],
        [1., 10.435, 15.921, 17.278, 17.838],
        [0.999, 13.708, 73.42, 83.13, 92.535]]),
    'spacing_noise_resp': np.array([
        -1000., 2.613, -1000., 0.747, 1.304, 0.109, 0.981, 0., 0.509, -1000.,
        -1000., -1000., -1000., -1000., -1000., -1000., 0.388, 0.757, 1.032, 1.317,
        -1000., 0.687, 0.983, -1000., -1000., 0., 0.209, -1000., 1.736, 0.557,
        -1000., 0.603, 1.254, -1000., 0.793, 0.001, -1000., -1000., 1.589, -1000.,
        1.172, 0.447, -1000., -1000., -1000., 2.283, 0.321, -1000., -1000., 1.008,
        1.358, 1.486, -1000., 2.916, 0.764, 1.179, 1.082, -1000., -1000., -1000.,
        0.007, 3.555, 0.341, 0.025]),
    'spacing_mean_gains': np.array([
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.864, 1.103, 1.035, 0.837, 0.747, 0.678, 0.671, 0.659],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [3.432, 2.653, 2.571, 1.925, 1.565, 1.386, 1.224, 1.151],
        [2.601, 1.961, 1.222, 0.825, 0.741, 0.364, 0.27, 0.153],
        [60.357, 51.701, 37.641, 30.426, 12.631, 9.017, 6.529, 6.913],
        [6.839, 4.93, 3.093, 2.665, 2.24, 1.815, 1.612, 1.567],
        [28008.071, 79811.95, 130527.906, 113696.087, 98388.086, 88032.41, 105553.096, 123119.668],
        [0., 0., 0.025, 0.261, 0.25, 0.966, 1.115, 1.088],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [6.903, 3.856, 1.837, 2.617, 0.931, 0.902, 1.26, 1.265],
        [0.034, 0.114, 0.163, 0.048, 0.223, 0.578, 0.753, 0.781],
        [0.529, 0.742, 1.036, 1.061, 0.845, 0.729, 0.665, 0.64],
        [2.889, 0.914, 0.386, 0.425, 0.48, 0.382, 0.428, 0.499],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [14.868, 7.049, 5.127, 2.682, 1.698, 1.361, 1.101, 1.068],
        [0.002, 0., 0.053, 0.593, 0.968, 1.171, 1.217, 1.24],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [143705.804, 142380.351, 95102.281, 29003.547, 11457.482, 10382.458, 1637.545, 1431.667],
        [6.375, 6.817, 7.146, 4.096, 2.578, 2.514, 2.51, 2.742],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.425, 1.622, 1.178, 0.986, 0.775, 0.516, 0.456, 0.38],
        [11.45, 10.158, 6.723, 3.853, 2.46, 1.578, 1.444, 1.269],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [0.859, 0.722, 0.378, 0.931, 1.036, 0.895, 0.634, 0.487],
        [1.723, 0.758, 0.234, 0.13, 0.229, 0.263, 0.372, 0.407],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [0.049, 0.539, 1.112, 1.337, 1.597, 1.728, 1.79, 1.863],
        [3614.457, 2191.407, 2440.634, 2224.925, 2115.744, 1544.619, 1122.481, 1120.497],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [7.293, 5.686, 4.407, 2.749, 1.852, 1.772, 1.579, 1.513],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.185, 0.613, 0.413, 0.299, 0.317, 0.288, 0.254, 0.209],
        [0.203, 0.081, 1.351, 2.549, 3.279, 3.206, 2.898, 2.812],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.785, 1.327, 0.865, 0.748, 0.623, 0.401, 0.324, 0.272],
        [0.013, 0.286, 0.512, 0.963, 1.327, 1.708, 1.825, 2.388],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.455, 1.685, 0.983, 1.38, 1.295, 1.123, 1.455, 1.457],
        [0.638, 0.685, 0.582, 0.658, 0.628, 0.665, 0.711, 0.73],
        [3.212, 1.801, 0.862, 0.572, 0.333, 0.064, 0.061, 0.092],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.51, 0.479, 0.448, 0.278, 0.202, 0.157, 0.195, 0.179],
        [0.428, 0.449, 0., 0., 0., 0., 0., 0.],
        [3.752, 2.982, 1.988, 1.549, 1.33, 1.332, 1.391, 1.432],
        [0.063, 0.048, 0.052, 0.152, 0.12, 0.158, 0.17, 0.15],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [162.612, 174.728, 87.11, 78.151, 37.626, 62.312, 81.465, 111.716],
        [0.972, 0.468, 0.4, 0.474, 0.371, 0.416, 0.386, 0.349],
        [18.45, 10.57, 6.18, 3.522, 2.141, 0.243, 0.001, 0.],
        [65.129, 61.823, 67.109, 26.065, 34.919, 36.413, 47.813, 52.661]])
}

model_run_3 = {
    'train_acc': 0.8695,
    'validation_acc': 0.8419,
    'no_optimal_stimulus_neurons': np.array(
        [0, 1, 4, 5, 10, 11, 13, 14, 15, 24, 25, 28, 29, 31, 32, 33, 34, 35, 37, 42, 44, 45, 48, 50, 52, 54, 56, 57, 58,
         59, 60, 62]),
    'c_len_iou_vs_len_test': np.array([0.9224, 0.6365, 0.9003, 0.9369, 0.9402]),
    'c_len_noise_resp': np.array([
        -1000., -1000., 1.313, 0.342, -1000., -1000., 1.485, 0., 1.185, 0.72,
        -1000., -1000., 1.331, -1000., -1000., -1000., 2.046, 1.377, 1.569, 2.682,
        1.135, 0.746, 1.425, 1.237, -1000., -1000., 1.953, 2.489, -1000., -1000.,
        0.903, -1000., -1000., -1000., -1000., -1000., 1.977, -1000., 1.548, 0.002,
        1.707, 1.543, -1000., 0.475, -1000., -1000., 0.625, 1.909, -1000., 1.543,
        -1000., 2.521, -1000., 1.219, -1000., 1.033, -1000., -1000., -1000., -1000.,
        -1000., 1.367, -1000., 0.319]),
    'c_len_mean_gains': np.array([
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.121, 1.357, 1.457, 1.464],
        [1., 0.547, 2.09, 4.562, 5.122],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.615, 2.593, 2.972, 3.051],
        [0., 0., 0., 0., 0.],
        [1., 0.574, 0.82, 0.843, 0.863],
        [1., 0.173, 0.084, 0.055, 0.062],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.082, 1.23, 1.279, 1.341],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.047, 1.185, 1.271, 1.263],
        [1., 0.432, 0.451, 0.507, 0.473],
        [1., 1.742, 2.602, 2.938, 3.053],
        [1., 1.402, 1.697, 1.767, 1.779],
        [1., 1.349, 2.303, 3.065, 3.182],
        [1., 0.719, 0.906, 0.987, 0.998],
        [1., 1.086, 1.448, 1.63, 1.65],
        [1., 1.164, 1.443, 1.468, 1.48],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.749, 1.268, 1.548, 1.56],
        [1., 1.091, 1.661, 2.002, 2.071],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 3.85, 6.518, 7.375, 7.51],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.911, 1.169, 1.35, 1.372],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.604, 0.477, 0.514, 0.512],
        [0.995, 845.626, 2884.117, 3568.933, 3688.661],
        [1., 1.752, 2.788, 3.151, 3.203],
        [1., 0.443, 0.788, 0.895, 0.842],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 2.238, 3.448, 3.651, 3.684],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.154, 3.187, 4.102, 4.29],
        [1., 1.313, 1.545, 1.607, 1.607],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.852, 2.437, 2.444, 2.446],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.953, 1.091, 1.114, 1.107],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.707, 2.662, 3.054, 3.083],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.48, 1.905, 2.014, 2.062],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.809, 1.808, 2.468, 2.621],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.247, 1.7, 2.769, 2.732]]),
    'spacing_noise_resp': np.array([
        -1000., -1000., 1.311, 0.389, -1000., -1000., 1.481, 0., 1.171, 0.746,
        -1000., -1000., 1.326, -1000., -1000., -1000., 2.073, 1.351, 1.555, 2.658,
        1.119, 0.766, 1.443, 1.229, -1000., -1000., 1.886, 2.514, -1000., -1000.,
        0.914, -1000., -1000., -1000., -1000., -1000., 1.983, -1000., 1.651, 0.002,
        1.711, 1.513, -1000., 0.487, -1000., -1000., 0.644, 1.92, -1000., 1.511,
        -1000., 2.546, -1000., 1.243, -1000., 1.1, -1000., -1000., -1000., -1000.,
        -1000., 1.383, -1000., 0.354]),
    'spacing_mean_gains': np.array([
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.451, 0.892, 0.571, 0.463, 0.355, 0.309, 0.31, 0.29],
        [3.686, 0.22, 1.055, 1.887, 1.102, 0.582, 0.377, 0.295],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.98, 2.184, 1.7, 1.341, 1.146, 1.051, 1.084, 1.148],
        [0., 0., 0., 121.892, 2264.283, 4134.77, 6578.282, 7643.491],
        [0.862, 0.369, 0.092, 0.128, 0.212, 0.252, 0.378, 0.466],
        [0.064, 0.296, 0.002, 0., 0., 0., 0., 0.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.309, 1.045, 0.957, 0.894, 0.833, 0.806, 0.795, 0.788],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.246, 0.721, 0.609, 0.581, 0.56, 0.529, 0.519, 0.522],
        [0.475, 0.322, 0.264, 0.32, 0.441, 0.511, 0.597, 0.595],
        [3.005, 1.442, 0.568, 0.304, 0.123, 0.03, 0.07, 0.072],
        [1.782, 1.203, 0.894, 0.685, 0.624, 0.575, 0.527, 0.514],
        [3.089, 2.323, 2.114, 2.28, 1.327, 1.262, 1.296, 1.137],
        [0.96, 1.116, 1.274, 1.408, 1.252, 1.233, 1.282, 1.311],
        [1.581, 1.21, 0.537, 0.41, 0.236, 0.162, 0.148, 0.167],
        [1.476, 1.229, 1.115, 1.099, 1.151, 1.192, 1.167, 1.16],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.575, 0.877, 0.641, 0.629, 0.601, 0.574, 0.595, 0.693],
        [2.007, 1.411, 0.845, 0.58, 0.751, 0.64, 0.677, 0.656],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [7.21, 6.295, 2.955, 1.192, 0.802, 0.598, 0.328, 0.207],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.315, 0.602, 0.388, 0.506, 0.369, 0.361, 0.272, 0.21],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [0.459, 0.592, 0.696, 0.783, 0.857, 0.955, 1.029, 1.07],
        [3167.361, 1410.699, 1193.24, 494.32, 415.883, 361.806, 360.994, 369.15],
        [3.139, 1.409, 1.13, 0.594, 0.414, 0.247, 0.237, 0.248],
        [0.827, 0.439, 0.207, 0.272, 0.272, 0.295, 0.35, 0.382],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [3.496, 3.313, 3.812, 3.285, 2.608, 2.13, 1.896, 1.658],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [3.94, 2.813, 2.319, 1.676, 0.931, 0.893, 1.042, 1.101],
        [1.606, 1.029, 0.713, 0.568, 0.365, 0.237, 0.203, 0.195],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.531, 1.652, 0.736, 0.819, 0.281, 0.185, 0.13, 0.118],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.087, 0.715, 0.458, 0.428, 0.245, 0.197, 0.187, 0.187],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.997, 2.236, 1.526, 0.826, 0.771, 0.385, 0.387, 0.396],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.899, 1.315, 1.52, 1.283, 1.183, 1.146, 1.138, 1.063],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.509, 1.367, 1.022, 0.987, 0.584, 0.443, 0.394, 0.395],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.28, 2.111, 3.333, 3.041, 2.966, 2.685, 2.942, 2.744]])
}

model_run_4 = {
    'train_acc': 0.8772,
    'validation_acc': 0.8489,
    'no_optimal_stimulus_neurons': np.array(
        [0, 3, 10, 11, 12, 13, 16, 17, 18, 19, 20, 23, 24, 25, 31, 35, 36, 37, 40, 42, 43, 44, 47, 48, 50, 52, 56, 58,
         59, 62, 63]),
    'c_len_iou_vs_len_test': np.array([0.9662, 0.7163, 0.9123, 0.9334, 0.9189]),
    'c_len_noise_resp': np.array([
        -1000., 3.308, 1.22, -1000., 0.723, 0.472, 1.692, 1.334, 2.411, 2.385,
        -1000., -1000., -1000., -1000., 2.607, 1.142, -1000., -1000., -1000., -1000.,
        -1000., 0.792, 1.328, -1000., -1000., -1000., 1.391, 3.235, 1.495, 0.774,
        1.218, -1000., 1.085, 0.96, 1.515, -1000., -1000., -1000., 1.908, 1.724,
        -1000., 0.525, -1000., -1000., -1000., 1.195, 0.871, -1000., -1000., 1.338,
        -1000., 1.83, -1000., 1.142, 0.38, 0.088, -1000., 1.743, -1000., -1000.,
        0., 1.41, -1000., -1000.]),
    'c_len_mean_gains': np.array([
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.538, 0.523, 0.631, 0.694],
        [1., 1.26, 1.651, 1.888, 1.961],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 4.943, 9.17, 9.958, 10.011],
        [1., 0.402, 1.255, 1.653, 1.676],
        [1., 1.412, 3.136, 4.367, 4.874],
        [1., 4.13, 8.22, 11.059, 12.105],
        [1., 0.497, 0.543, 0.566, 0.562],
        [1., 1.106, 1.732, 2.524, 2.999],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 2.097, 3.588, 4.132, 4.21],
        [1., 0.031, 0.574, 1.136, 1.138],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.883, 5.095, 6.752, 7.269],
        [1., 0.75, 1.027, 1.203, 1.211],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.318, 2.021, 2.277, 2.427],
        [1., 0.834, 1.22, 1.628, 1.784],
        [1., 2.809, 4.114, 4.67, 4.812],
        [1., 1.001, 1.517, 1.788, 1.848],
        [1., 0.516, 0.531, 0.444, 0.425],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.332, 2.303, 2.976, 3.154],
        [1., 0.926, 1.76, 2.18, 2.257],
        [1., 0.82, 0.941, 1.022, 1.039],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.456, 0.744, 0.951, 1.063],
        [1., 0.935, 1.906, 3.231, 4.248],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.684, 5.049, 6.949, 7.429],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 2.193, 4.267, 4.837, 5.077],
        [1., 0.46, 0.758, 0.885, 0.963],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 2.37, 6.213, 7.268, 7.712],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 3.287, 5.431, 6.646, 7.055],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 2.143, 3.467, 4.115, 4.219],
        [1., 0.352, 5.249, 7.751, 8.342],
        [1., 38.699, 83.483, 105.342, 113.197],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.914, 0.922, 1.001, 1.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [0., 0., 0., 0., 0.],
        [1., 1.679, 3.47, 4.338, 4.857],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.]]),
    'spacing_noise_resp': np.array([
        -1000., -1000., 1.311, 0.389, -1000., -1000., 1.481, 0., 1.171, 0.746,
        -1000., -1000., 1.326, -1000., -1000., -1000., 2.073, 1.351, 1.555, 2.658,
        1.119, 0.766, 1.443, 1.229, -1000., -1000., 1.886, 2.514, -1000., -1000.,
        0.914, -1000., -1000., -1000., -1000., -1000., 1.983, -1000., 1.651, 0.002,
        1.711, 1.513, -1000., 0.487, -1000., -1000., 0.644, 1.92, -1000., 1.511,
        -1000., 2.546, -1000., 1.243, -1000., 1.1, -1000., -1000., -1000., -1000.,
        -1000., 1.383, -1000., 0.354]),
    'spacing_mean_gains': np.array([
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.451, 0.892, 0.571, 0.463, 0.355, 0.309, 0.31, 0.29],
        [3.686, 0.22, 1.055, 1.887, 1.102, 0.582, 0.377, 0.295],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.98, 2.184, 1.7, 1.341, 1.146, 1.051, 1.084, 1.148],
        [0., 0., 0., 121.892, 2264.283, 4134.77, 6578.282, 7643.491],
        [0.862, 0.369, 0.092, 0.128, 0.212, 0.252, 0.378, 0.466],
        [0.064, 0.296, 0.002, 0., 0., 0., 0., 0.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.309, 1.045, 0.957, 0.894, 0.833, 0.806, 0.795, 0.788],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.246, 0.721, 0.609, 0.581, 0.56, 0.529, 0.519, 0.522],
        [0.475, 0.322, 0.264, 0.32, 0.441, 0.511, 0.597, 0.595],
        [3.005, 1.442, 0.568, 0.304, 0.123, 0.03, 0.07, 0.072],
        [1.782, 1.203, 0.894, 0.685, 0.624, 0.575, 0.527, 0.514],
        [3.089, 2.323, 2.114, 2.28, 1.327, 1.262, 1.296, 1.137],
        [0.96, 1.116, 1.274, 1.408, 1.252, 1.233, 1.282, 1.311],
        [1.581, 1.21, 0.537, 0.41, 0.236, 0.162, 0.148, 0.167],
        [1.476, 1.229, 1.115, 1.099, 1.151, 1.192, 1.167, 1.16],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.575, 0.877, 0.641, 0.629, 0.601, 0.574, 0.595, 0.693],
        [2.007, 1.411, 0.845, 0.58, 0.751, 0.64, 0.677, 0.656],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [7.21, 6.295, 2.955, 1.192, 0.802, 0.598, 0.328, 0.207],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.315, 0.602, 0.388, 0.506, 0.369, 0.361, 0.272, 0.21],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [0.459, 0.592, 0.696, 0.783, 0.857, 0.955, 1.029, 1.07],
        [3167.361, 1410.699, 1193.24, 494.32, 415.883, 361.806, 360.994, 369.15],
        [3.139, 1.409, 1.13, 0.594, 0.414, 0.247, 0.237, 0.248],
        [0.827, 0.439, 0.207, 0.272, 0.272, 0.295, 0.35, 0.382],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [3.496, 3.313, 3.812, 3.285, 2.608, 2.13, 1.896, 1.658],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [3.94, 2.813, 2.319, 1.676, 0.931, 0.893, 1.042, 1.101],
        [1.606, 1.029, 0.713, 0.568, 0.365, 0.237, 0.203, 0.195],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.531, 1.652, 0.736, 0.819, 0.281, 0.185, 0.13, 0.118],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.087, 0.715, 0.458, 0.428, 0.245, 0.197, 0.187, 0.187],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.997, 2.236, 1.526, 0.826, 0.771, 0.385, 0.387, 0.396],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.899, 1.315, 1.52, 1.283, 1.183, 1.146, 1.138, 1.063],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.509, 1.367, 1.022, 0.987, 0.584, 0.443, 0.394, 0.395],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.28, 2.111, 3.333, 3.041, 2.966, 2.685, 2.942, 2.744]])
}

model_run_5 = {
    'train_acc': 0.8710,
    'validation_acc': 0.8432,
    'no_optimal_stimulus_neurons': np.array(
        [0, 3, 4, 10, 11, 13, 16, 17, 19, 30, 31, 32, 33, 35, 36, 37, 42, 43, 45, 48, 49, 52, 56, 57, 58, 59, 62]),
    'c_len_iou_vs_len_test': np.array([0.9604, 0.5166, 0.8404, 0.8850, 0.9119]),
    'c_len_noise_resp': np.array([
        -1000., 2.322, 1.221, -1000., -1000., 0.902, 0.441, 1.128, 2.08, 0.815,
        -1000., -1000., 1.233, -1000., 1.449, 1.115, -1000., -1000., 0.513, -1000.,
        0.477, 2.111, 1.417, 0.061, 3.426, 1.77, 1.37, 0., 0.033, 0.24,
        -1000., -1000., -1000., -1000., 1.498, -1000., -1000., -1000., 1.875, 0.274,
        2.097, 2.388, -1000., -1000., 0.664, -1000., 1.303, 0.015, -1000., -1000.,
        0.828, 0.056, -1000., 0.632, 2.419, 1.598, -1000., -1000., -1000., -1000.,
        0.51, 1.561, -1000., 0.004]),
    'c_len_mean_gains': np.array([
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.967, 1.033, 1.071, 1.065],
        [1., 0.846, 1.226, 1.292, 1.302],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.815, 2.483, 2.674, 2.719],
        [1., 0.057, 1.607, 3.351, 3.992],
        [1., 0.941, 1.388, 1.649, 1.683],
        [1., 1., 1.366, 1.467, 1.463],
        [1., 2.048, 3.184, 3.893, 4.004],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.025, 1.251, 1.378, 1.374],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.325, 1.916, 1.979, 2.055],
        [1., 1.414, 2.828, 3.35, 3.452],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 2.52, 4.522, 6.692, 7.01],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 2.707, 5.312, 5.72, 5.959],
        [1., 1.118, 2.424, 3.361, 3.629],
        [1., 1.269, 1.781, 1.94, 1.987],
        [1., 0.016, 8.464, 42.2, 56.557],
        [1., 1.151, 1.321, 1.394, 1.446],
        [1., 1.339, 2.025, 2.253, 2.304],
        [1., 0.006, 0.358, 0.753, 0.85],
        [0.975, 0., 0., 0., 0.],
        [1., 4.388, 29.426, 33.897, 30.659],
        [1., 4.376, 12.423, 14.686, 15.022],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.239, 1.735, 1.965, 2.102],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.796, 1.242, 1.472, 1.484],
        [1., 1.909, 5.982, 7.228, 7.506],
        [1., 1.271, 1.774, 1.871, 1.871],
        [1., 1.238, 1.85, 2.032, 2.034],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.615, 1.241, 1.456, 1.451],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.38, 0.556, 0.884, 0.936],
        [0.999, 12.083, 55.729, 76.656, 79.835],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.659, 1.864, 2.462, 2.427],
        [1., 0.678, 16.365, 32.82, 41.329],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.182, 2.173, 3.224, 3.362],
        [1., 1.094, 1.515, 1.666, 1.692],
        [1., 1.232, 1.935, 2.418, 2.511],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.775, 6.753, 9.108, 9.289],
        [1., 1.319, 2.782, 4.087, 4.442],
        [-1000., -1000., -1000., -1000., -1000.],
        [0.997, 361.205, 926.721, 1124.718, 1116.109]]),
    'spacing_noise_resp': np.array([
        -1000., 2.336, 1.17, -1000., -1000., 0.902, 0.407, 1.158, 2.198, 0.862,
        -1000., -1000., 1.232, -1000., 1.439, 1.046, -1000., -1000., 0.562, -1000.,
        0.515, 2.027, 1.417, 0.037, 3.43, 1.74, 1.372, 0., 0.028, 0.233,
        -1000., -1000., -1000., -1000., 1.533, -1000., -1000., -1000., 1.905, 0.283,
        2.083, 2.37, -1000., -1000., 0.622, -1000., 1.372, 0.012, -1000., -1000.,
        0.841, 0.055, -1000., 0.643, 2.314, 1.584, -1000., -1000., -1000., -1000.,
        0.508, 1.448, -1000., 0.]),
    'spacing_mean_gains': np.array([
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.073, 0.78, 0.626, 0.574, 0.584, 0.598, 0.608, 0.616],
        [1.332, 0.675, 0.32, 0.413, 0.494, 0.471, 0.474, 0.478],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.671, 1.787, 1.303, 1.041, 0.959, 0.901, 0.882, 0.881],
        [3.791, 3.667, 2.724, 2.335, 2.288, 2.505, 2.928, 3.596],
        [1.626, 1.205, 1.349, 1.438, 1.48, 1.524, 1.579, 1.657],
        [1.385, 0.576, 0.069, 0.13, 0.105, 0.123, 0.097, 0.084],
        [3.685, 2.102, 1.118, 0.47, 0.271, 0.173, 0.179, 0.185],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.354, 1.251, 1.135, 1.075, 1.044, 1.07, 1.137, 1.154],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.981, 1.85, 1.207, 1.05, 0.842, 0.885, 0.82, 0.772],
        [3.47, 2.574, 1.651, 0.963, 0.998, 0.971, 0.956, 0.985],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [6.1, 4.179, 4., 3., 2.035, 2.288, 2.152, 2.204],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [5.416, 2.299, 0.874, 0.983, 0.388, 0.83, 1.296, 1.588],
        [3.441, 2.095, 1.712, 1.438, 1.056, 0.856, 0.833, 0.843],
        [1.959, 1.45, 1.156, 1.154, 0.929, 0.88, 0.886, 0.91],
        [69.751, 46.948, 32.986, 26.551, 1., 6.153, 2.707, 2.957],
        [1.413, 0.524, 0.156, 0.108, 0.027, 0.023, 0.017, 0.013],
        [2.239, 1.195, 0.768, 0.199, 0.024, 0., 0., 0.],
        [0.756, 0.549, 0.393, 0.671, 0.959, 1.179, 1.217, 1.228],
        [0., 0., 0., 0., 0., 91746.316, 120537.168, 133302.288],
        [37.309, 48.305, 43.452, 1.368, 5.107, 1.725, 1.845, 1.069],
        [15.199, 11.574, 6.145, 7.691, 4.062, 2.927, 2.542, 3.185],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.971, 1.171, 0.655, 0.591, 0.426, 0.438, 0.462, 0.509],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.429, 1.234, 1.063, 1.17, 1.07, 1.013, 1.066, 1.084],
        [7.155, 5.559, 4.48, 0.862, 0.95, 1.406, 1.937, 2.429],
        [1.863, 0.926, 0.506, 0.595, 0.219, 0.146, 0.112, 0.083],
        [2.03, 1.572, 1.272, 1.056, 1.123, 0.894, 0.972, 1.029],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.569, 0.825, 1.158, 1.371, 0.676, 0.619, 0.749, 0.91],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [0.804, 0.074, 0.02, 0., 0., 0.003, 0.136, 0.25],
        [100.196, 88.547, 111.598, 101.869, 88.037, 95.323, 101.045, 99.352],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.427, 2.061, 0.658, 0.715, 0.842, 0.681, 0.918, 1.013],
        [34.121, 21.715, 27.957, 32.062, 27.612, 30.58, 29.595, 27.253],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.974, 2.889, 0.929, 0.809, 0.003, 0., 0.004, 0.161],
        [1.75, 0.581, 0.15, 0.241, 0.303, 0.343, 0.332, 0.334],
        [2.438, 1.951, 1.574, 1.343, 1.514, 1.276, 1.229, 1.204],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [9.054, 0.823, 0.885, 1.138, 1.675, 1.713, 1.64, 1.665],
        [4.486, 3.479, 1.601, 0.778, 0.742, 0.745, 0.818, 0.782],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [404659.905, 384661.943, 317206.172, 205694.121, 134455.447, 136037.688, 128622.146, 112848.379]])
}

model_run_6 = {
    'train_acc': 0.8755,
    'validation_acc': 0.8481,
    'no_optimal_stimulus_neurons': np.array([11, 12, 13, 19, 24, 31, 40, 45, 47, 56, 57, 59, 60, 62, 63]),
    'c_len_iou_vs_len_test': np.array([0.9747, 0.4611, 0.8491, 0.9005, 0.9162]),
    'c_len_noise_resp': np.array([
        1.369, 3.125, 0.607, 2.016, 0.685, 1.411, 0.151, 1.525, 0.246, 3.104,
        0.99, -1000, -1000, -1000, 2.875, 1.304, 1.354, 1.212, 1.523, -1000,
        1.235, 1.776, 1.367, 0.225, -1000, 0.649, 2.311, 2.038, 0.034, 3.026,
        1.821, -1000, 0.665, 2.275, 2.243, 1.525, 0.69, 2.253, 1.602, 0.003,
        -1000, 1.988, 3.085, 1.275, 1.103, -1000, 0.002, -1000, 1.783, 1.143,
        0.265, 0.755, 1.239, 0.061, 1.787, 2.188, -1000, -1000, 0.993, -1000,
        -1000, 1.465, -1000, -1000]),
    'c_len_mean_gains': np.array([[1.000e+00, 2.064e+00, 5.135e+00, 6.549e+00, 6.753e+00],
                                  [1.000e+00, 1.108e+00, 1.184e+00, 1.228e+00, 1.217e+00],
                                  [1.000e+00, 4.030e-01, 9.068e-01, 1.116e+00, 1.208e+00],
                                  [1.000e+00, 1.952e+00, 3.098e+00, 3.693e+00, 3.835e+00],
                                  [1.000e+00, 4.157e+00, 9.653e+00, 1.176e+01, 1.244e+01],
                                  [1.000e+00, 2.326e+00, 3.802e+00, 4.227e+00, 4.352e+00],
                                  [9.999e-01, 6.801e+00, 2.041e+01, 2.957e+01, 3.184e+01],
                                  [1.000e+00, 6.098e-01, 5.486e-01, 5.321e-01, 5.060e-01],
                                  [9.998e-01, 0.000e+00, 1.162e+01, 2.115e+01, 2.256e+01],
                                  [1.000e+00, 1.239e+00, 1.506e+00, 1.602e+00, 1.572e+00],
                                  [1.000e+00, 1.638e+00, 2.506e+00, 2.923e+00, 2.938e+00],
                                  [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
                                  [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
                                  [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
                                  [1.000e+00, 1.217e+00, 1.400e+00, 1.455e+00, 1.437e+00],
                                  [1.000e+00, 1.330e+00, 1.741e+00, 1.890e+00, 1.918e+00],
                                  [1.000e+00, 1.292e+00, 1.852e+00, 2.033e+00, 2.099e+00],
                                  [1.000e+00, 2.012e+00, 3.381e+00, 4.080e+00, 4.040e+00],
                                  [1.000e+00, 1.274e+00, 1.710e+00, 2.063e+00, 2.152e+00],
                                  [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
                                  [1.000e+00, 1.296e+00, 3.495e+00, 4.939e+00, 5.051e+00],
                                  [1.000e+00, 1.481e+00, 2.767e+00, 3.332e+00, 3.608e+00],
                                  [1.000e+00, 2.950e-01, 2.842e-01, 3.218e-01, 3.483e-01],
                                  [1.000e+00, 6.351e-01, 1.608e+00, 1.880e+00, 1.989e+00],
                                  [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
                                  [1.000e+00, 4.646e+00, 8.333e+00, 9.158e+00, 9.222e+00],
                                  [1.000e+00, 7.023e-01, 8.442e-01, 1.043e+00, 1.022e+00],
                                  [1.000e+00, 1.405e+00, 1.605e+00, 1.634e+00, 1.677e+00],
                                  [9.994e-01, 6.060e-01, 1.949e-01, 3.646e+00, 4.782e+00],
                                  [1.000e+00, 1.099e+00, 1.563e+00, 1.842e+00, 1.911e+00],
                                  [1.000e+00, 1.452e+00, 2.044e+00, 2.256e+00, 2.377e+00],
                                  [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
                                  [1.000e+00, 1.907e-01, 6.847e-01, 1.534e+00, 1.616e+00],
                                  [1.000e+00, 8.332e-01, 8.973e-01, 8.882e-01, 8.590e-01],
                                  [1.000e+00, 9.606e-01, 9.949e-01, 9.815e-01, 9.519e-01],
                                  [1.000e+00, 5.173e-01, 7.538e-01, 8.683e-01, 8.697e-01],
                                  [1.000e+00, 1.962e+00, 3.041e+00, 3.211e+00, 3.254e+00],
                                  [1.000e+00, 8.861e-01, 1.207e+00, 1.304e+00, 1.299e+00],
                                  [1.000e+00, 1.006e+00, 1.369e+00, 1.627e+00, 1.746e+00],
                                  [9.968e-01, 3.181e+02, 8.891e+02, 1.030e+03, 1.066e+03],
                                  [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
                                  [1.000e+00, 7.076e-01, 7.969e-01, 8.682e-01, 8.584e-01],
                                  [1.000e+00, 9.568e-01, 9.582e-01, 9.796e-01, 9.735e-01],
                                  [1.000e+00, 8.809e-01, 9.472e-01, 9.874e-01, 9.890e-01],
                                  [1.000e+00, 3.540e-01, 4.367e-01, 4.372e-01, 4.975e-01],
                                  [1.000e+00, 9.812e-01, 9.526e-01, 9.862e-01, 9.727e-01],
                                  [1.000e+00, 1.288e-02, 8.438e-02, 2.008e-01, 2.798e-01],
                                  [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
                                  [1.000e+00, 1.106e+00, 1.468e+00, 1.592e+00, 1.581e+00],
                                  [1.000e+00, 2.532e+00, 4.897e+00, 6.081e+00, 6.339e+00],
                                  [1.000e+00, 1.502e+00, 3.237e+00, 4.220e+00, 4.381e+00],
                                  [1.000e+00, 5.056e-01, 1.120e+00, 1.743e+00, 1.845e+00],
                                  [1.000e+00, 1.316e+00, 2.082e+00, 2.290e+00, 2.407e+00],
                                  [9.999e-01, 7.456e-02, 1.781e+00, 1.722e+01, 2.772e+01],
                                  [1.000e+00, 4.550e-01, 7.517e-01, 1.066e+00, 1.185e+00],
                                  [1.000e+00, 4.762e-01, 8.266e-01, 1.007e+00, 1.092e+00],
                                  [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
                                  [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
                                  [1.000e+00, 4.918e-01, 4.015e-01, 3.909e-01, 3.431e-01],
                                  [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
                                  [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
                                  [1.000e+00, 1.476e+00, 2.961e+00, 4.195e+00, 4.746e+00],
                                  [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
                                  [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03]]),
    'spacing_noise_resp': np.array([
        1.394, 3.152, 0.627, 2.042, 0.704, 1.437, 0.154, 1.545, 0.244, 3.003,
        1.08, -1000, -1000, -1000, 2.828, 1.388, 1.365, 1.259, 1.563, -1000,
        1.283, 1.826, 1.359, 0.187, -1000, 0.617, 2.341, 2.062, 0.077, 3.096,
        1.837, -1000, 0.644, 2.308, 2.322, 1.556, 0.692, 2.238, 1.663, 0.,
        -1000, 2.01, 3.155, 1.302, 1.15, -1000, 0.006, -1000, 1.75, 1.098,
        0.258, 0.703, 1.22, 0.072, 1.776, 2.116, -1000, -1000, 0.997, -1000,
        -1000, 1.481, -1000, -1000]),
    'spacing_mean_gains': np.array(
        [[6.425e+00, 3.736e+00, 3.116e+00, 3.490e+00, 1.444e+00, 1.494e+00, 1.276e+00, 1.300e+00],
         [1.207e+00, 8.445e-01, 6.695e-01, 5.835e-01, 4.917e-01, 4.772e-01, 4.798e-01, 4.792e-01],
         [1.249e+00, 2.967e-01, 2.053e-01, 5.638e-01, 7.552e-01, 1.156e+00, 1.375e+00, 1.499e+00],
         [3.573e+00, 1.737e+00, 1.721e+00, 1.368e+00, 1.189e+00, 7.867e-01, 7.696e-01, 7.406e-01],
         [1.215e+01, 8.816e+00, 6.701e+00, 6.982e+00, 2.439e+00, 1.756e+00, 8.014e-01, 8.676e-01],
         [4.239e+00, 2.300e+00, 1.763e+00, 2.050e+00, 6.393e-01, 4.577e-01, 1.433e-01, 5.232e-02],
         [2.914e+01, 1.995e+01, 1.517e+01, 1.077e+01, 5.359e+00, 2.093e+00, 2.449e+00, 2.263e+00],
         [5.361e-01, 1.965e-01, 2.349e-01, 4.840e-01, 6.950e-01, 7.794e-01, 8.276e-01, 8.303e-01],
         [1.666e+01, 4.367e+00, 1.778e+00, 2.514e+00, 0.000e+00, 8.685e-01, 2.906e+00, 7.625e+00],
         [1.584e+00, 7.673e-01, 2.464e-01, 3.352e-01, 1.009e-01, 6.435e-02, 1.706e-02, 6.000e-03],
         [2.503e+00, 1.503e+00, 1.146e+00, 8.768e-01, 6.307e-01, 4.697e-01, 2.689e-01, 2.610e-01],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [1.460e+00, 5.029e-01, 3.843e-01, 3.953e-01, 2.633e-01, 2.337e-01, 1.579e-01, 1.175e-01],
         [1.833e+00, 4.778e-01, 1.177e-01, 2.248e-01, 6.540e-03, 2.230e-02, 0.000e+00, 0.000e+00],
         [2.062e+00, 1.393e+00, 5.483e-01, 1.441e-01, 9.633e-02, 1.167e-02, 0.000e+00, 0.000e+00],
         [4.144e+00, 3.213e+00, 1.657e+00, 1.347e+00, 1.690e+00, 1.315e+00, 1.232e+00, 1.235e+00],
         [2.014e+00, 8.843e-01, 3.777e-01, 6.663e-01, 5.889e-02, 9.163e-02, 2.955e-02, 5.710e-02],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [4.860e+00, 4.523e+00, 3.371e+00, 1.889e+00, 1.546e+00, 1.323e+00, 1.155e+00, 1.140e+00],
         [3.168e+00, 1.698e+00, 1.791e+00, 1.543e+00, 1.639e+00, 1.138e+00, 1.209e+00, 1.190e+00],
         [2.901e-01, 1.741e-01, 5.633e-01, 8.213e-01, 9.002e-01, 8.415e-01, 9.452e-01, 9.926e-01],
         [1.976e+00, 1.754e+00, 2.294e+00, 2.595e+00, 2.702e+00, 2.656e+00, 2.522e+00, 2.604e+00],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [9.838e+00, 6.625e+00, 4.299e+00, 1.489e+00, 1.648e+00, 6.472e-01, 1.009e-01, 9.218e-02],
         [1.001e+00, 4.587e-01, 4.008e-01, 5.891e-01, 3.362e-01, 5.482e-01, 6.280e-01, 6.668e-01],
         [1.694e+00, 7.679e-01, 2.458e-01, 3.044e-01, 2.332e-01, 1.558e-01, 5.704e-02, 4.769e-02],
         [3.627e+01, 3.813e+01, 5.421e+01, 6.863e+01, 1.158e+02, 2.260e+02, 3.529e+02, 3.006e+02],
         [1.860e+00, 8.986e-01, 3.193e-01, 3.959e-01, 2.508e-02, 6.979e-03, 1.275e-03, 9.753e-04],
         [2.254e+00, 1.255e+00, 8.516e-01, 1.050e+00, 5.130e-01, 5.608e-01, 4.133e-01, 4.016e-01],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [1.467e+00, 8.397e-01, 1.104e+00, 1.881e+00, 1.226e+00, 1.518e+00, 1.484e+00, 1.574e+00],
         [8.980e-01, 2.639e-02, 1.404e-02, 1.023e-01, 7.873e-02, 8.846e-02, 9.542e-02, 7.790e-02],
         [9.830e-01, 3.249e-01, 1.664e-01, 2.857e-01, 2.238e-01, 2.102e-01, 2.202e-01, 2.147e-01],
         [8.818e-01, 1.900e-01, 6.341e-02, 1.580e-01, 6.083e-02, 7.387e-02, 7.683e-02, 1.332e-01],
         [2.993e+00, 2.094e+00, 5.368e-01, 6.128e-01, 5.136e-01, 1.339e-01, 8.676e-02, 7.123e-03],
         [1.322e+00, 6.767e-01, 3.894e-01, 2.741e-01, 2.619e-01, 2.232e-01, 1.732e-01, 2.287e-01],
         [1.642e+00, 1.258e+00, 1.198e+00, 1.153e+00, 9.936e-01, 7.452e-01, 7.555e-01, 7.295e-01],
         [5.141e+03, 4.679e+03, 4.160e+03, 2.982e+03, 2.341e+03, 2.134e+03, 1.823e+03, 1.748e+03],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [8.587e-01, 6.601e-01, 6.528e-01, 6.476e-01, 6.483e-01, 6.960e-01, 7.469e-01, 7.499e-01],
         [9.899e-01, 2.423e-01, 9.274e-02, 1.440e-01, 1.671e-01, 1.651e-01, 1.343e-01, 8.657e-02],
         [9.980e-01, 8.019e-01, 8.660e-01, 9.714e-01, 9.684e-01, 9.198e-01, 8.710e-01, 8.469e-01],
         [3.919e-01, 1.326e-01, 5.349e-03, 1.154e-02, 1.913e-01, 4.031e-01, 4.780e-01, 6.742e-01],
         [9.676e-01, 2.368e-01, 1.637e-03, 4.102e-03, 1.977e-03, 1.224e-03, 1.326e-03, 1.117e-03],
         [3.039e-01, 6.760e-01, 2.149e+00, 2.946e+00, 3.328e+00, 3.441e+00, 3.642e+00, 3.675e+00],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [1.554e+00, 9.328e-01, 6.390e-01, 4.042e-01, 2.870e-01, 2.002e-01, 2.536e-01, 2.575e-01],
         [5.883e+00, 2.793e+00, 1.366e+00, 4.848e-01, 4.134e-01, 1.564e-02, 3.842e-03, 1.499e-03],
         [4.534e+00, 5.753e+00, 5.157e+00, 5.066e+00, 5.449e+00, 5.450e+00, 5.512e+00, 5.505e+00],
         [1.550e+00, 1.407e+00, 1.804e+00, 1.989e+00, 1.326e+00, 1.336e+00, 1.033e+00, 9.186e-01],
         [2.206e+00, 6.730e-01, 2.465e-01, 4.513e-01, 5.287e-01, 9.622e-01, 9.206e-01, 1.532e+00],
         [1.978e+01, 1.350e+01, 1.894e+01, 1.178e+01, 1.378e+01, 7.437e+00, 8.023e+00, 6.671e+00],
         [1.033e+00, 8.469e-03, 9.869e-04, 2.001e-02, 3.225e-02, 1.304e-01, 8.696e-02, 8.322e-02],
         [1.008e+00, 3.896e-01, 1.338e-01, 1.296e-01, 2.489e-01, 2.427e-01, 2.488e-01, 2.825e-01],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [3.450e-01, 1.304e-01, 4.675e-01, 3.819e-01, 3.566e-01, 2.139e-01, 4.952e-02, 9.500e-03],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [4.319e+00, 2.911e+00, 2.393e+00, 1.817e+00, 1.606e+00, 1.338e+00, 1.194e+00, 1.049e+00],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03]])
}

# Model with experiments on Curved Contours ---------------------------------------------
curved_model_run_1 = {
    'train_acc': 0.8755,
    'validation_acc': 0.8481,
    'no_optimal_stimulus_neurons': np.array([11, 12, 13, 19, 24, 31, 40, 47, 56, 57, 59, 60, 62, 63]),
    'c_len_iou_vs_len_test': np.array([0.9689, 0.2162, 0.6263, 0.7723, 0.8165]),
    'c_len_noise_resp': np.array([3.398e-01, 2.850e+00, 6.887e-01, 1.668e+00, 1.390e-01,
                                  1.548e+00, 6.422e-02, 6.478e-01, 7.867e-02, 2.251e+00,
                                  9.439e-01, -1.000e+03, -1.000e+03, -1.000e+03, 2.601e+00,
                                  1.278e+00, 1.364e+00, 2.664e-01, 1.439e+00, -1.000e+03,
                                  2.307e-01, 4.320e-01, 2.019e-01, 4.693e-01, -1.000e+03,
                                  4.063e-01, 1.409e+00, 1.420e+00, 3.012e-03, 2.691e+00,
                                  1.603e+00, -1.000e+03, 8.217e-01, 2.831e+00, 2.638e+00,
                                  1.511e+00, 4.899e-01, 1.620e+00, 6.322e-01, 4.134e-02,
                                  -1.000e+03, 1.127e+00, 3.363e+00, 9.274e-01, 4.923e-01,
                                  1.249e+00, 6.122e-03, -1.000e+03, 1.677e+00, 6.001e-01,
                                  5.659e-02, 1.806e-01, 9.469e-01, 5.391e-02, 1.538e+00,
                                  1.733e+00, -1.000e+03, -1.000e+03, 7.025e-01, -1.000e+03,
                                  -1.000e+03, 3.133e-01, -1.000e+03, -1.000e+03]),
    'c_len_mean_gains': np.array([
        [1.000e+00, 3.560e+00, 5.999e+00, 7.835e+00, 7.725e+00],
        [1.000e+00, 1.324e+00, 1.396e+00, 1.428e+00, 1.402e+00],
        [1.000e+00, 2.451e-01, 4.016e-01, 4.841e-01, 4.246e-01],
        [1.000e+00, 1.767e+00, 2.318e+00, 2.526e+00, 2.437e+00],
        [9.999e-01, 5.351e+00, 9.015e+00, 1.092e+01, 1.174e+01],
        [1.000e+00, 1.444e+00, 1.980e+00, 2.113e+00, 2.203e+00],
        [9.998e-01, 1.371e+01, 3.458e+01, 4.214e+01, 4.868e+01],
        [1.000e+00, 2.114e+00, 2.204e+00, 2.173e+00, 2.153e+00],
        [9.999e-01, 0.000e+00, 0.000e+00, 9.419e-02, 2.715e-02],
        [1.000e+00, 1.236e+00, 1.434e+00, 1.513e+00, 1.500e+00],
        [1.000e+00, 1.502e+00, 2.230e+00, 2.530e+00, 2.621e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.378e+00, 1.504e+00, 1.554e+00, 1.534e+00],
        [1.000e+00, 1.044e+00, 1.052e+00, 1.019e+00, 1.072e+00],
        [1.000e+00, 1.150e+00, 1.428e+00, 1.495e+00, 1.556e+00],
        [1.000e+00, 4.741e+00, 7.312e+00, 8.628e+00, 9.006e+00],
        [1.000e+00, 9.337e-01, 9.722e-01, 9.906e-01, 9.790e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 9.519e+00, 1.729e+01, 1.965e+01, 1.908e+01],
        [1.000e+00, 4.082e+00, 6.360e+00, 6.658e+00, 7.120e+00],
        [1.000e+00, 3.525e+00, 3.438e+00, 3.122e+00, 3.858e+00],
        [1.000e+00, 3.944e-01, 7.942e-01, 1.005e+00, 1.208e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 3.926e+00, 5.717e+00, 6.322e+00, 6.702e+00],
        [1.000e+00, 1.196e+00, 1.308e+00, 1.403e+00, 1.431e+00],
        [1.000e+00, 1.404e+00, 1.626e+00, 1.663e+00, 1.619e+00],
        [9.967e-01, 9.343e-01, 0.000e+00, 1.512e+01, 2.579e+01],
        [1.000e+00, 9.674e-01, 1.034e+00, 1.076e+00, 1.054e+00],
        [1.000e+00, 1.297e+00, 1.460e+00, 1.552e+00, 1.510e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.678e-01, 1.271e-01, 2.838e-01, 2.798e-01],
        [1.000e+00, 8.310e-01, 8.621e-01, 8.753e-01, 8.358e-01],
        [1.000e+00, 1.053e+00, 1.054e+00, 1.046e+00, 1.025e+00],
        [1.000e+00, 5.521e-01, 7.578e-01, 8.058e-01, 7.619e-01],
        [1.000e+00, 2.199e+00, 2.901e+00, 2.810e+00, 2.862e+00],
        [1.000e+00, 1.560e+00, 2.057e+00, 2.143e+00, 2.182e+00],
        [1.000e+00, 2.635e+00, 3.065e+00, 3.484e+00, 3.635e+00],
        [9.998e-01, 1.795e+01, 4.082e+01, 4.795e+01, 5.301e+01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.421e+00, 1.531e+00, 1.535e+00, 1.522e+00],
        [1.000e+00, 1.015e+00, 1.044e+00, 1.044e+00, 1.019e+00],
        [1.000e+00, 1.163e+00, 1.344e+00, 1.410e+00, 1.374e+00],
        [1.000e+00, 4.937e-01, 6.194e-01, 6.392e-01, 6.653e-01],
        [1.000e+00, 1.161e+00, 1.173e+00, 1.136e+00, 1.072e+00],
        [9.984e-01, 2.285e+01, 4.773e+01, 5.090e+01, 6.015e+01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.074e+00, 1.301e+00, 1.423e+00, 1.442e+00],
        [1.000e+00, 2.042e+00, 3.997e+00, 4.422e+00, 4.899e+00],
        [9.998e-01, 7.371e+00, 1.244e+01, 1.527e+01, 1.526e+01],
        [9.999e-01, 3.233e+00, 5.784e+00, 7.762e+00, 7.875e+00],
        [1.000e+00, 1.032e+00, 1.187e+00, 1.238e+00, 1.217e+00],
        [9.998e-01, 3.468e-01, 8.772e+00, 3.277e+01, 3.922e+01],
        [1.000e+00, 8.385e-01, 9.280e-01, 9.568e-01, 9.714e-01],
        [1.000e+00, 1.050e+00, 1.500e+00, 1.686e+00, 1.832e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 4.329e-01, 4.344e-01, 3.337e-01, 3.416e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.024e+01, 1.748e+01, 2.191e+01, 2.346e+01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03]]),
    'spacing_noise_resp': np.array(
        [1.289e+00, 3.388e+00, 6.042e-01, 1.978e+00, 3.064e-01, 1.493e+00, 1.622e-01, 1.604e+00, 5.916e-02,
         2.688e+00, 9.403e-01, -1.000e+03, -1.000e+03, -1.000e+03, 2.986e+00, 1.495e+00, 1.404e+00, 1.184e+00,
         1.655e+00, -1.000e+03, 1.126e+00, 1.567e+00, 1.339e+00, 3.386e-01, -1.000e+03, 4.299e-01, 2.142e+00,
         2.024e+00, 2.337e-03, 2.699e+00, 1.986e+00, -1.000e+03, 6.468e-01, 2.769e+00, 2.906e+00, 1.200e+00,
         8.058e-01, 2.172e+00, 1.599e+00, 4.189e-03, -1.000e+03, 2.225e+00, 3.739e+00, 1.271e+00, 1.140e+00,
         1.591e+00, 4.852e-01, -1.000e+03, 1.624e+00, 1.090e+00, 3.773e-01, 8.186e-01, 9.564e-01, 1.149e-01,
         1.750e+00, 2.118e+00, -1.000e+03, -1.000e+03, 6.620e-01, -1.000e+03, -1.000e+03, 1.480e+00, -1.000e+03,
         -1.000e+03]),
    'spacing_mean_gains': np.array(
        [[2.119e+00, 1.738e+00, 1.569e+00, 1.395e+00, 1.197e+00, 1.183e+00, 1.223e+00, 1.185e+00],
         [1.173e+00, 8.483e-01, 6.295e-01, 5.903e-01, 5.130e-01, 4.741e-01, 4.689e-01, 4.730e-01],
         [5.576e-01, 1.682e-01, 3.244e-01, 6.863e-01, 9.029e-01, 1.277e+00, 1.377e+00, 1.541e+00],
         [2.115e+00, 1.286e+00, 6.702e-01, 7.050e-01, 6.198e-01, 6.483e-01, 6.871e-01, 6.803e-01],
         [5.196e+00, 3.859e+00, 2.269e+00, 1.240e+00, 8.034e-01, 8.993e-01, 8.080e-01, 6.082e-01],
         [2.288e+00, 1.234e+00, 6.335e-01, 3.566e-01, 1.263e-01, 7.441e-02, 3.746e-02, 7.697e-03],
         [1.714e+01, 1.108e+01, 6.815e+00, 2.854e+00, 2.549e+00, 1.911e+00, 1.860e+00, 1.845e+00],
         [8.637e-01, 4.577e-01, 3.102e-01, 6.237e-01, 6.502e-01, 7.260e-01, 7.907e-01, 8.045e-01],
         [7.961e-03, 0.000e+00, 2.324e-01, 4.511e-01, 2.368e+00, 3.209e+00, 5.505e+00, 6.774e+00],
         [1.245e+00, 7.019e-01, 1.095e-01, 2.076e-01, 8.822e-02, 4.275e-02, 4.412e-02, 1.752e-02],
         [2.569e+00, 8.682e-01, 5.462e-01, 5.299e-01, 3.022e-01, 2.132e-01, 1.560e-01, 8.607e-02],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [1.349e+00, 3.939e-01, 3.649e-01, 3.419e-01, 3.189e-01, 2.836e-01, 1.914e-01, 1.580e-01],
         [9.047e-01, 6.887e-02, 7.979e-03, 1.876e-02, 5.320e-03, 1.002e-03, 0.000e+00, 0.000e+00],
         [1.490e+00, 9.425e-01, 2.935e-01, 2.599e-02, 3.401e-02, 1.882e-03, 6.977e-03, 0.000e+00],
         [1.915e+00, 1.641e+00, 9.716e-01, 1.154e+00, 8.956e-01, 9.568e-01, 1.043e+00, 1.109e+00],
         [8.752e-01, 1.514e-01, 3.177e-02, 5.369e-02, 1.526e-02, 1.123e-02, 1.340e-02, 9.602e-03],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [3.689e+00, 2.708e+00, 2.137e+00, 1.447e+00, 1.190e+00, 1.105e+00, 1.010e+00, 9.304e-01],
         [1.917e+00, 1.357e+00, 8.685e-01, 8.716e-01, 1.065e+00, 1.117e+00, 1.125e+00, 1.156e+00],
         [4.919e-01, 2.321e-01, 3.712e-01, 7.989e-01, 8.262e-01, 8.718e-01, 9.462e-01, 9.870e-01],
         [1.486e+00, 1.221e+00, 1.875e+00, 2.442e+00, 2.061e+00, 1.995e+00, 1.969e+00, 1.974e+00],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [5.901e+00, 4.913e+00, 3.613e+00, 1.157e+00, 5.694e-01, 1.743e-01, 1.840e-01, 5.531e-02],
         [9.585e-01, 4.039e-01, 3.858e-01, 4.804e-01, 5.705e-01, 6.278e-01, 6.407e-01, 6.690e-01],
         [1.174e+00, 5.186e-01, 6.216e-02, 1.532e-01, 1.095e-01, 6.842e-02, 5.170e-02, 3.641e-02],
         [2.459e+01, 5.569e+00, 3.053e+01, 1.106e+02, 1.334e+02, 1.474e+02, 1.801e+02, 1.785e+02],
         [1.071e+00, 3.970e-01, 3.619e-02, 1.660e-02, 4.522e-03, 2.009e-03, 2.714e-03, 2.133e-04],
         [1.235e+00, 6.136e-01, 2.568e-01, 2.735e-01, 2.821e-01, 2.836e-01, 3.309e-01, 3.318e-01],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [3.326e-01, 1.014e-01, 6.306e-01, 9.298e-01, 1.127e+00, 1.324e+00, 1.359e+00, 1.414e+00],
         [8.566e-01, 2.691e-02, 5.741e-03, 3.387e-02, 4.553e-02, 4.839e-02, 6.081e-02, 5.077e-02],
         [9.672e-01, 2.948e-01, 7.947e-02, 2.137e-01, 1.853e-01, 1.763e-01, 1.986e-01, 1.850e-01],
         [9.336e-01, 4.192e-01, 6.894e-02, 1.165e-01, 1.130e-01, 1.247e-01, 1.820e-01, 1.730e-01],
         [1.877e+00, 1.229e+00, 3.298e-01, 2.909e-01, 1.834e-01, 3.097e-02, 4.892e-03, 7.569e-05],
         [1.720e+00, 5.388e-01, 2.045e-01, 2.486e-01, 2.457e-01, 2.665e-01, 2.555e-01, 2.615e-01],
         [1.400e+00, 1.048e+00, 1.011e+00, 9.023e-01, 8.370e-01, 7.697e-01, 7.957e-01, 8.048e-01],
         [4.492e+02, 5.223e+02, 4.804e+02, 3.392e+02, 3.030e+02, 2.853e+02, 2.415e+02, 2.253e+02],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [7.754e-01, 6.690e-01, 6.705e-01, 6.785e-01, 7.026e-01, 7.475e-01, 7.174e-01, 7.065e-01],
         [9.137e-01, 2.185e-01, 2.131e-02, 5.580e-02, 7.187e-02, 9.417e-02, 7.457e-02, 4.435e-02],
         [1.021e+00, 8.891e-01, 8.629e-01, 8.899e-01, 8.967e-01, 8.998e-01, 8.817e-01, 8.723e-01],
         [3.206e-01, 1.119e-01, 1.670e-01, 2.823e-01, 4.536e-01, 5.825e-01, 7.928e-01, 8.043e-01],
         [8.744e-01, 3.538e-01, 7.188e-04, 9.630e-04, 2.822e-03, 5.091e-04, 0.000e+00, 2.687e-03],
         [7.676e-01, 8.650e-01, 2.308e+00, 2.932e+00, 3.369e+00, 3.304e+00, 3.429e+00, 3.461e+00],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [1.456e+00, 6.197e-01, 3.443e-01, 3.565e-01, 1.679e-01, 1.227e-01, 1.362e-01, 1.232e-01],
         [2.411e+00, 1.744e+00, 4.562e-01, 3.814e-01, 2.545e-01, 3.896e-02, 1.653e-02, 1.844e-03],
         [2.243e+00, 3.340e+00, 3.587e+00, 4.341e+00, 4.286e+00, 4.492e+00, 4.844e+00, 5.419e+00],
         [1.795e+00, 1.074e+00, 1.335e+00, 1.227e+00, 8.840e-01, 9.689e-01, 8.913e-01, 8.083e-01],
         [1.152e+00, 6.224e-01, 4.591e-01, 7.048e-01, 1.059e+00, 1.022e+00, 1.473e+00, 1.461e+00],
         [1.559e+01, 1.243e+01, 5.931e+00, 1.054e+01, 5.888e+00, 4.033e+00, 5.159e+00, 6.064e+00],
         [8.294e-01, 1.186e-01, 3.995e-03, 2.963e-03, 2.974e-02, 3.867e-02, 1.060e-01, 9.369e-02],
         [1.279e+00, 8.478e-01, 2.310e-01, 1.116e-01, 1.775e-01, 1.580e-01, 2.133e-01, 2.302e-01],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [4.069e-01, 3.634e-02, 1.095e-01, 3.843e-01, 1.654e-01, 8.061e-02, 2.629e-02, 2.748e-03],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [4.491e+00, 2.747e+00, 1.981e+00, 1.271e+00, 1.232e+00, 1.016e+00, 1.003e+00, 9.627e-01],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
         [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03]])
}

curved_model_run_2 = {
    'train_acc': 0.8735,
    'validation_acc': 0.8420,
    'no_optimal_stimulus_neurons': np.array(
        [0, 2, 9, 10, 11, 12, 13, 14, 15, 20, 23, 24, 27, 30, 33, 36, 37, 39, 42, 43, 44, 47, 48, 52, 57, 58, 59]),
    'c_len_iou_vs_len_test': np.array([0.9129, 0.4583, 0.8323, 0.8619, 0.8778]),
    'c_len_noise_resp': np.array([
        -1.000e+03, 2.051e+00, -1.000e+03, 1.535e-01, 5.681e-01,
        4.394e-01, 1.846e-01, 0.000e+00, 1.006e-01, -1.000e+03,
        -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03,
        -1.000e+03, 5.868e-02, 1.598e-01, 1.047e-01, 2.005e+00,
        -1.000e+03, 6.309e-02, 1.486e-01, -1.000e+03, -1.000e+03,
        0.000e+00, 2.748e-03, -1.000e+03, 1.123e+00, 5.429e-01,
        7.441e-01, 2.048e-01, 1.058e+00, -1.000e+03, 2.733e-01,
        4.709e-02, -1.000e+03, -1.000e+03, 2.225e-01, -1.000e+03,
        1.016e+00, 5.629e-01, -1.000e+03, -1.000e+03, -1.000e+03,
        1.577e+00, 0.000e+00, -1.000e+03, -1.000e+03, 7.105e-02,
        4.143e-01, 1.237e+00, -1.000e+03, 2.180e+00, 2.476e-01,
        2.915e-01, 1.039e+00, -1.000e+03, -1.000e+03, -1.000e+03,
        9.614e-04, 2.516e+00, 5.822e-01, 9.427e-02]),
    'c_len_mean_gains': np.array([
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.934e+00, 2.303e+00, 2.355e+00, 2.389e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [9.999e-01, 4.646e+00, 8.047e+00, 9.890e+00, 1.058e+01],
        [1.000e+00, 2.417e+00, 3.437e+00, 3.981e+00, 3.687e+00],
        [1.000e+00, 3.646e+00, 6.271e+00, 9.896e+00, 1.062e+01],
        [9.999e-01, 1.529e+01, 2.365e+01, 2.676e+01, 2.695e+01],
        [0.000e+00, 0.000e+00, 1.698e+02, 2.186e+02, 1.823e+03],
        [9.999e-01, 0.000e+00, 9.883e-02, 3.177e-01, 5.808e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [9.998e-01, 4.623e+00, 9.889e+00, 1.200e+01, 1.204e+01],
        [9.999e-01, 8.200e-01, 1.521e+00, 1.971e+00, 2.528e+00],
        [9.999e-01, 6.726e+00, 7.606e+00, 7.306e+00, 8.069e+00],
        [1.000e+00, 9.414e-01, 1.322e+00, 1.368e+00, 1.334e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [9.998e-01, 1.446e+01, 3.102e+01, 3.682e+01, 3.857e+01],
        [9.999e-01, 2.089e+00, 2.711e+00, 3.275e+00, 2.605e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [0.000e+00, 9.725e+02, 2.318e+04, 4.559e+04, 4.204e+04],
        [9.964e-01, 4.902e+01, 1.941e+02, 2.940e+02, 3.417e+02],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.991e+00, 2.622e+00, 2.654e+00, 2.697e+00],
        [1.000e+00, 3.947e+00, 6.169e+00, 7.168e+00, 6.731e+00],
        [1.000e+00, 1.007e+00, 2.270e+00, 2.385e+00, 2.710e+00],
        [1.000e+00, 1.317e+00, 2.047e+00, 1.716e+00, 2.560e+00],
        [1.000e+00, 8.568e-01, 1.044e+00, 1.185e+00, 1.100e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.230e+00, 1.548e+00, 1.211e+00, 1.292e+00],
        [9.998e-01, 5.311e+00, 1.959e+01, 2.248e+01, 2.205e+01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.487e+01, 2.588e+01, 3.112e+01, 3.247e+01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 9.454e-01, 9.499e-01, 1.027e+00, 1.030e+00],
        [1.000e+00, 1.023e-01, 2.195e-02, 1.864e-02, 3.800e-02],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.733e+00, 2.138e+00, 2.277e+00, 2.277e+00],
        [0.000e+00, 0.000e+00, 1.297e+03, 2.871e+03, 1.035e+04],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [9.999e-01, 5.542e-01, 1.610e+00, 2.357e+00, 4.408e+00],
        [1.000e+00, 9.722e-01, 1.850e+00, 1.686e+00, 2.205e+00],
        [1.000e+00, 1.870e+00, 2.626e+00, 2.891e+00, 2.899e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.491e+00, 1.833e+00, 1.939e+00, 1.932e+00],
        [1.000e+00, 4.729e-01, 1.387e+00, 1.370e+00, 1.808e+00],
        [1.000e+00, 7.864e+00, 1.430e+01, 1.683e+01, 1.714e+01],
        [1.000e+00, 7.271e-01, 8.389e-01, 8.979e-01, 8.939e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [9.897e-01, 0.000e+00, 1.122e+01, 2.703e+02, 4.734e+02],
        [1.000e+00, 9.576e-01, 1.034e+00, 1.112e+00, 1.102e+00],
        [1.000e+00, 3.950e+00, 6.677e+00, 7.308e+00, 7.296e+00],
        [9.999e-01, 1.825e+00, 7.832e+00, 1.209e+01, 1.452e+01]]),
    'spacing_noise_resp': np.array([
        -1.000e+03, 2.754e+00, -1.000e+03, 5.997e-01, 1.216e+00, 8.462e-01, 1.263e+00, 0.000e+00, 5.175e-01,
        -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, 3.395e-01, 7.882e-01,
        1.009e+00, 1.476e+00, -1.000e+03, 4.279e-01, 9.181e-01, -1.000e+03, -1.000e+03, 0.000e+00, 1.594e-01,
        -1.000e+03, 1.596e+00, 3.970e-01, 1.316e+00, 6.239e-01, 1.149e+00, -1.000e+03, 8.342e-01, 2.104e-02,
        -1.000e+03, -1.000e+03, 1.302e+00, -1.000e+03, 1.884e+00, 4.208e-01, -1.000e+03, -1.000e+03, -1.000e+03,
        2.216e+00, 2.868e-02, -1.000e+03, -1.000e+03, 8.797e-01, 8.026e-01, 2.060e+00, -1.000e+03, 2.870e+00,
        5.748e-01, 1.216e+00, 9.036e-01, -1.000e+03, -1.000e+03, -1.000e+03, 2.330e-03, 3.612e+00, 5.027e-01,
        2.146e-02]),
    'spacing_mean_gains': np.array([
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.705e+00, 1.147e+00, 8.513e-01, 7.213e-01, 6.806e-01, 6.041e-01, 6.100e-01, 5.961e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [2.562e+00, 1.933e+00, 2.377e+00, 2.188e+00, 1.936e+00, 1.858e+00, 1.716e+00, 1.551e+00],
        [1.855e+00, 1.349e+00, 5.641e-01, 6.176e-01, 4.235e-01, 3.020e-01, 1.768e-01, 2.163e-01],
        [4.753e+00, 4.204e+00, 2.790e+00, 2.324e+00, 1.066e+00, 8.460e-01, 6.529e-01, 7.440e-01],
        [4.210e+00, 3.576e+00, 2.923e+00, 2.179e+00, 1.677e+00, 1.332e+00, 1.204e+00, 1.185e+00],
        [0.000e+00, 3.571e+04, 1.354e+05, 1.197e+05, 1.214e+05, 1.218e+05, 1.311e+05, 1.411e+05],
        [5.579e-02, 3.944e-02, 3.573e-03, 9.918e-02, 9.255e-01, 1.101e+00, 1.279e+00, 1.371e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [2.180e+00, 4.497e-01, 4.467e-01, 1.289e+00, 1.417e+00, 1.410e+00, 1.337e+00, 1.263e+00],
        [3.442e-01, 7.644e-01, 6.444e-01, 5.093e-01, 4.834e-01, 5.468e-01, 6.596e-01, 7.292e-01],
        [7.934e-01, 7.568e-01, 9.677e-01, 9.610e-01, 7.823e-01, 7.572e-01, 7.210e-01, 7.306e-01],
        [1.747e+00, 7.434e-01, 5.897e-01, 4.822e-01, 4.867e-01, 4.396e-01, 4.912e-01, 5.710e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [5.140e+00, 1.859e+00, 6.197e-01, 7.909e-01, 1.101e+00, 1.346e+00, 1.447e+00, 1.446e+00],
        [5.363e-01, 4.241e-01, 5.486e-01, 9.727e-01, 1.052e+00, 1.185e+00, 1.256e+00, 1.291e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [3.457e+04, 4.281e+04, 8.514e+04, 2.805e+04, 1.788e+04, 3.240e+03, 5.559e+03, 2.529e+03],
        [5.780e+00, 6.424e+00, 7.476e+00, 5.496e+00, 2.439e+00, 2.037e+00, 2.914e+00, 3.273e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.855e+00, 1.267e+00, 7.612e-01, 7.957e-01, 5.562e-01, 5.061e-01, 4.070e-01, 4.317e-01],
        [9.037e+00, 8.451e+00, 6.318e+00, 3.579e+00, 2.709e+00, 1.940e+00, 1.983e+00, 2.111e+00],
        [1.425e+00, 9.796e-01, 3.750e-01, 2.168e-01, 2.586e-01, 1.498e-01, 8.658e-02, 7.305e-02],
        [6.850e-01, 6.347e-01, 6.104e-01, 9.824e-01, 9.513e-01, 7.771e-01, 5.790e-01, 4.763e-01],
        [1.088e+00, 7.321e-01, 5.374e-01, 4.051e-01, 6.287e-01, 7.644e-01, 8.269e-01, 7.831e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [5.079e-01, 1.126e+00, 1.709e+00, 1.517e+00, 1.578e+00, 1.716e+00, 1.703e+00, 1.763e+00],
        [5.108e+01, 5.778e+01, 8.771e+01, 6.523e+01, 4.651e+01, 3.423e+01, 2.715e+01, 2.048e+01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [5.388e+00, 3.732e+00, 3.043e+00, 2.295e+00, 2.086e+00, 1.880e+00, 1.800e+00, 1.722e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [5.256e-01, 1.851e-01, 9.452e-02, 2.091e-01, 2.546e-01, 2.701e-01, 2.471e-01, 2.133e-01],
        [6.680e-02, 5.274e-01, 1.913e+00, 3.183e+00, 3.735e+00, 3.430e+00, 3.246e+00, 3.202e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.603e+00, 1.210e+00, 5.430e-01, 5.881e-01, 4.093e-01, 3.610e-01, 2.562e-01, 2.537e-01],
        [2.456e+00, 3.573e+00, 7.710e+00, 1.592e+01, 1.048e+01, 1.608e+01, 2.012e+01, 2.641e+01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [3.830e-01, 8.774e-01, 1.175e+00, 1.626e+00, 1.443e+00, 1.373e+00, 1.454e+00, 1.472e+00],
        [1.135e+00, 7.393e-01, 6.276e-01, 6.871e-01, 7.997e-01, 7.907e-01, 9.086e-01, 9.466e-01],
        [1.670e+00, 9.766e-01, 5.502e-01, 3.200e-01, 3.130e-01, 3.149e-01, 3.236e-01, 3.333e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.581e+00, 5.064e-01, 2.029e-01, 1.540e-01, 1.518e-01, 1.298e-01, 1.493e-01, 1.353e-01],
        [6.398e-01, 2.260e-01, 2.861e-02, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],
        [3.958e+00, 3.531e+00, 2.280e+00, 1.623e+00, 1.454e+00, 1.354e+00, 1.373e+00, 1.359e+00],
        [1.053e+00, 7.140e-01, 5.119e-01, 6.173e-01, 5.152e-01, 4.510e-01, 4.038e-01, 3.714e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.068e+02, 5.804e+01, 1.325e+02, 1.761e+02, 1.728e+02, 2.543e+02, 3.114e+02, 3.002e+02],
        [7.907e-01, 3.505e-01, 2.825e-01, 3.553e-01, 3.576e-01, 3.659e-01, 3.789e-01, 3.764e-01],
        [8.901e+00, 6.198e+00, 5.303e+00, 2.993e+00, 1.513e+00, 4.732e-01, 7.253e-02, 3.128e-03],
        [4.702e+01, 3.429e+01, 4.668e+01, 4.711e+01, 4.186e+01, 4.770e+01, 5.412e+01, 5.453e+01]])
}

curved_model_run_3 = {
    'train_acc': 0.8695,
    'validation_acc': 0.8419,
    'no_optimal_stimulus_neurons': np.array(
        [0, 1, 4, 5, 10, 11, 13, 14, 15, 24, 25, 28, 29, 31, 32, 33, 34, 35, 37, 42, 44, 45, 48, 50, 52, 54, 56, 57, 58,
         59, 60, 62]),
    'c_len_iou_vs_len_test': np.array([0.9677, 0.1769, 0.6883, 0.8143, 0.8530]),
    'c_len_noise_resp': np.array([
        -1.000e+03, -1.000e+03, 8.160e-01, 5.045e-02, -1.000e+03,
        -1.000e+03, 5.544e-01, 0.000e+00, 3.318e-01, 1.645e-01,
        -1.000e+03, -1.000e+03, 4.066e-01, -1.000e+03, -1.000e+03,
        -1.000e+03, 5.508e-01, 3.816e-01, 7.794e-01, 1.414e+00,
        5.242e-02, 1.301e-01, 6.691e-01, 2.653e-01, -1.000e+03,
        -1.000e+03, 7.529e-01, 7.839e-01, -1.000e+03, -1.000e+03,
        -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03,
        -1.000e+03, 1.482e+00, -1.000e+03, 4.342e-01, 0.000e+00,
        1.286e+00, 7.265e-01, -1.000e+03, 1.948e-01, -1.000e+03,
        -1.000e+03, 7.588e-02, 1.209e+00, -1.000e+03, 8.077e-01,
        -1.000e+03, 1.584e+00, -1.000e+03, 2.742e-01, -1.000e+03,
        3.073e-01, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03,
        -1.000e+03, 2.712e-01, -1.000e+03, 1.481e-01]),
    'c_len_mean_gains': np.array([
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 9.639e-01, 1.116e+00, 1.166e+00, 1.143e+00],
        [9.998e-01, 3.010e-01, 1.403e+01, 2.581e+01, 2.919e+01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 3.089e+00, 3.786e+00, 3.822e+00, 4.163e+00],
        [0.000e+00, 0.000e+00, 0.000e+00, 3.833e+02, 8.181e+02],
        [1.000e+00, 6.937e-01, 1.295e+00, 1.622e+00, 1.531e+00],
        [9.999e-01, 1.315e-01, 6.665e-02, 5.093e-02, 3.860e-02],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 3.297e+00, 3.612e+00, 3.706e+00, 3.774e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 3.360e+00, 3.507e+00, 3.535e+00, 3.557e+00],
        [1.000e+00, 1.356e+00, 1.359e+00, 1.634e+00, 1.620e+00],
        [1.000e+00, 2.088e+00, 3.097e+00, 3.435e+00, 3.597e+00],
        [1.000e+00, 2.027e+00, 2.273e+00, 2.317e+00, 2.298e+00],
        [9.998e-01, 2.162e+01, 3.376e+01, 3.745e+01, 4.233e+01],
        [9.999e-01, 3.611e+00, 3.942e+00, 3.938e+00, 3.924e+00],
        [1.000e+00, 2.209e+00, 2.596e+00, 2.831e+00, 2.919e+00],
        [1.000e+00, 4.704e+00, 4.877e+00, 5.063e+00, 5.106e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 2.599e+00, 2.776e+00, 3.160e+00, 3.450e+00],
        [1.000e+00, 1.324e+00, 1.582e+00, 1.989e+00, 1.877e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.092e+00, 1.185e+00, 1.272e+00, 1.303e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.011e+00, 6.214e-01, 5.119e-01, 6.681e-01],
        [0.000e+00, 2.784e+04, 1.558e+05, 1.996e+05, 2.121e+05],
        [1.000e+00, 1.273e+00, 1.750e+00, 1.810e+00, 1.810e+00],
        [1.000e+00, 1.064e+00, 1.390e+00, 1.377e+00, 1.555e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [9.999e-01, 3.524e+00, 5.616e+00, 5.742e+00, 5.543e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [9.999e-01, 1.133e+01, 1.974e+01, 2.213e+01, 2.568e+01],
        [1.000e+00, 1.645e+00, 1.823e+00, 1.870e+00, 1.876e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 2.081e+00, 3.098e+00, 3.138e+00, 3.048e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.264e+00, 1.297e+00, 1.338e+00, 1.302e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 3.358e+00, 4.853e+00, 5.440e+00, 5.571e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 4.892e+00, 7.401e+00, 7.490e+00, 8.094e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 3.434e+00, 9.402e+00, 1.228e+01, 1.154e+01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [9.999e-01, 6.567e+00, 9.453e+00, 1.108e+01, 1.162e+01]]),
    'spacing_noise_resp': np.array([
        -1.000e+03, -1.000e+03, 1.089e+00, 7.474e-02, -1.000e+03, -1.000e+03, 1.474e+00, 0.000e+00, 1.082e+00,
        4.878e-01, -1.000e+03, -1.000e+03, 1.294e+00, -1.000e+03, -1.000e+03, -1.000e+03, 2.008e+00, 1.163e+00,
        1.332e+00, 2.671e+00, 9.526e-01, 7.142e-01, 1.543e+00, 1.206e+00, -1.000e+03, -1.000e+03, 2.303e+00,
        2.288e+00, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03,
        1.915e+00, -1.000e+03, 1.574e+00, 1.635e-03, 1.373e+00, 1.269e+00, -1.000e+03, 3.946e-01, -1.000e+03,
        -1.000e+03, 5.950e-01, 1.729e+00, -1.000e+03, 1.388e+00, -1.000e+03, 2.440e+00, -1.000e+03, 1.093e+00,
        -1.000e+03, 8.748e-01, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, 1.215e+00, -1.000e+03,
        4.526e-01]),
    'spacing_mean_gains': np.array([
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [8.181e-01, 6.330e-01, 4.612e-01, 4.984e-01, 3.941e-01, 3.484e-01, 3.417e-01, 3.393e-01],
        [1.225e+01, 6.520e+00, 9.773e+00, 8.126e+00, 6.065e+00, 3.148e+00, 1.820e+00, 2.008e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.595e+00, 1.375e+00, 9.436e-01, 1.033e+00, 1.081e+00, 1.043e+00, 1.084e+00, 1.062e+00],
        [8.069e+02, 3.733e+03, 4.592e+03, 3.449e+04, 4.915e+04, 8.562e+04, 1.190e+05, 1.350e+05],
        [4.187e-01, 1.281e-01, 2.714e-01, 2.703e-01, 2.650e-01, 4.213e-01, 5.008e-01, 5.873e-01],
        [4.123e-03, 2.033e-02, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 3.329e-04],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.166e+00, 9.725e-01, 9.191e-01, 8.700e-01, 8.276e-01, 8.123e-01, 8.051e-01, 8.027e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [9.403e-01, 6.948e-01, 5.852e-01, 5.911e-01, 5.794e-01, 5.468e-01, 5.388e-01, 5.294e-01],
        [4.628e-01, 4.260e-01, 5.991e-01, 7.021e-01, 6.504e-01, 6.596e-01, 7.444e-01, 7.544e-01],
        [1.983e+00, 1.029e+00, 2.395e-01, 1.665e-01, 9.846e-02, 4.305e-02, 2.648e-02, 5.290e-02],
        [1.251e+00, 8.997e-01, 7.668e-01, 6.726e-01, 6.332e-01, 5.948e-01, 5.886e-01, 5.709e-01],
        [2.210e+00, 1.905e+00, 1.904e+00, 1.911e+00, 1.661e+00, 1.625e+00, 1.475e+00, 1.598e+00],
        [7.856e-01, 1.136e+00, 1.363e+00, 1.358e+00, 1.376e+00, 1.395e+00, 1.407e+00, 1.439e+00],
        [1.285e+00, 8.107e-01, 3.248e-01, 2.479e-01, 1.171e-01, 8.631e-02, 8.219e-02, 1.073e-01],
        [1.201e+00, 1.019e+00, 9.681e-01, 1.113e+00, 1.191e+00, 1.173e+00, 1.198e+00, 1.156e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.084e+00, 7.080e-01, 5.402e-01, 5.643e-01, 5.357e-01, 4.793e-01, 5.146e-01, 5.283e-01],
        [6.853e-01, 6.240e-01, 4.137e-01, 5.636e-01, 6.338e-01, 7.513e-01, 7.360e-01, 7.246e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [9.750e-01, 2.884e-01, 1.742e-01, 2.449e-01, 2.697e-01, 2.572e-01, 2.375e-01, 2.114e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.407e-01, 2.780e-01, 4.461e-01, 5.967e-01, 7.209e-01, 8.592e-01, 1.000e+00, 1.070e+00],
        [1.209e+03, 1.161e+03, 7.685e+02, 6.926e+02, 7.195e+02, 5.370e+02, 5.860e+02, 5.997e+02],
        [1.690e+00, 8.875e-01, 6.984e-01, 6.002e-01, 4.482e-01, 3.745e-01, 3.691e-01, 3.882e-01],
        [8.415e-01, 3.901e-01, 2.818e-01, 2.995e-01, 2.749e-01, 2.165e-01, 3.359e-01, 4.234e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [2.585e+00, 2.259e+00, 3.245e+00, 3.752e+00, 2.894e+00, 2.341e+00, 1.967e+00, 1.804e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [2.923e+00, 1.828e+00, 1.863e+00, 1.802e+00, 1.245e+00, 1.095e+00, 1.140e+00, 1.173e+00],
        [1.344e+00, 7.683e-01, 5.561e-01, 3.824e-01, 2.602e-01, 1.889e-01, 1.747e-01, 1.679e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.802e+00, 1.237e+00, 5.188e-01, 3.967e-01, 2.258e-01, 1.743e-01, 1.560e-01, 1.847e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [8.462e-01, 3.741e-01, 1.468e-01, 2.314e-01, 1.819e-01, 1.808e-01, 1.849e-01, 1.881e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.391e+00, 1.617e+00, 6.200e-01, 6.437e-01, 5.730e-01, 4.577e-01, 4.490e-01, 4.751e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [2.736e+00, 2.180e+00, 2.001e+00, 1.638e+00, 1.585e+00, 1.555e+00, 1.617e+00, 1.483e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [2.490e+00, 1.746e+00, 1.061e+00, 9.419e-01, 6.755e-01, 6.638e-01, 5.348e-01, 4.737e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [3.672e+00, 2.405e+00, 2.785e+00, 3.013e+00, 2.166e+00, 2.243e+00, 2.256e+00, 2.345e+00]])
}

curved_model_run_4 = {
    'train_acc': 0.8772,
    'validation_acc': 0.8489,
    'no_optimal_stimulus_neurons': np.array(
        [0, 3, 10, 11, 12, 13, 16, 17, 18, 19, 20, 23, 24, 25, 31, 35, 36, 37, 40, 42, 43, 44, 47, 48, 50, 52, 56, 58,
         59, 62, 63]),
    'c_len_iou_vs_len_test': np.array([0.9750, 0.3730, 0.8259, 0.8657, 0.8740]),
    'c_len_noise_resp': np.array([
        -1.000e+03, 2.360e+00, 1.451e+00, -1.000e+03, 4.296e-02,
        9.906e-02, 3.886e-01, 1.082e-01, 1.535e+00, 1.950e+00,
        -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, 1.323e+00,
        2.625e-01, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03,
        -1.000e+03, 3.035e-01, 4.011e-01, -1.000e+03, -1.000e+03,
        -1.000e+03, 5.682e-01, 2.888e+00, 1.403e+00, 7.319e-01,
        5.093e-01, -1.000e+03, 9.793e-01, 3.093e-01, 1.079e+00,
        -1.000e+03, -1.000e+03, -1.000e+03, 7.928e-01, 8.184e-01,
        -1.000e+03, 1.231e-01, -1.000e+03, -1.000e+03, -1.000e+03,
        4.268e-01, 4.076e-01, -1.000e+03, -1.000e+03, 3.216e-01,
        -1.000e+03, 1.011e+00, -1.000e+03, 2.971e-01, 9.394e-02,
        1.341e-02, -1.000e+03, 9.771e-01, -1.000e+03, -1.000e+03,
        0.000e+00, 8.429e-01, -1.000e+03, -1.000e+03]),
    'c_len_mean_gains': np.array([
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.121e+00, 8.752e-01, 8.733e-01, 8.833e-01],
        [1.000e+00, 1.033e+00, 1.342e+00, 1.560e+00, 1.703e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [9.998e-01, 4.665e+01, 9.093e+01, 9.322e+01, 9.365e+01],
        [9.999e-01, 1.067e+00, 2.190e+00, 3.058e+00, 2.736e+00],
        [1.000e+00, 7.540e+00, 1.166e+01, 1.284e+01, 1.343e+01],
        [9.999e-01, 1.667e+01, 3.638e+01, 5.562e+01, 5.515e+01],
        [1.000e+00, 1.064e+00, 1.029e+00, 1.144e+00, 1.053e+00],
        [1.000e+00, 1.009e+00, 1.303e+00, 1.617e+00, 1.619e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 2.812e+00, 3.716e+00, 3.724e+00, 3.861e+00],
        [1.000e+00, 1.352e-01, 1.017e+00, 1.291e+00, 2.593e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 4.895e+00, 1.018e+01, 1.117e+01, 1.193e+01],
        [1.000e+00, 2.607e+00, 3.400e+00, 3.645e+00, 3.787e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 2.859e+00, 3.973e+00, 4.400e+00, 4.453e+00],
        [1.000e+00, 8.023e-01, 8.478e-01, 8.094e-01, 8.097e-01],
        [1.000e+00, 1.990e+00, 2.548e+00, 2.648e+00, 2.692e+00],
        [1.000e+00, 8.644e-01, 1.026e+00, 1.164e+00, 1.117e+00],
        [1.000e+00, 8.164e-01, 6.226e-01, 5.516e-01, 5.856e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.074e+00, 1.360e+00, 1.505e+00, 1.392e+00],
        [1.000e+00, 2.537e+00, 4.812e+00, 4.962e+00, 5.146e+00],
        [1.000e+00, 1.208e+00, 1.187e+00, 1.176e+00, 1.151e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.888e+00, 2.282e+00, 2.590e+00, 2.422e+00],
        [1.000e+00, 1.581e+00, 2.822e+00, 3.728e+00, 4.364e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [9.999e-01, 3.205e+00, 1.139e+01, 1.416e+01, 1.429e+01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 3.108e+00, 4.305e+00, 4.805e+00, 4.322e+00],
        [1.000e+00, 9.743e-01, 1.263e+00, 1.220e+00, 1.356e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 3.871e+00, 8.703e+00, 9.132e+00, 9.674e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 3.121e+00, 5.136e+00, 6.189e+00, 6.314e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.724e+00, 4.882e+00, 5.688e+00, 6.112e+00],
        [9.999e-01, 3.859e+00, 7.326e+00, 1.040e+01, 1.254e+01],
        [9.993e-01, 1.314e+02, 2.911e+02, 3.330e+02, 3.617e+02],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.933e+00, 2.281e+00, 2.559e+00, 2.571e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [0.000e+00, 0.000e+00, 3.214e+03, 1.709e+04, 2.384e+04],
        [1.000e+00, 2.857e+00, 5.250e+00, 5.951e+00, 6.148e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03]]),
    'spacing_noise_resp': np.array([
        -1.000e+03, 3.172e+00, 1.250e+00, -1.000e+03, 7.029e-01, 5.042e-01, 1.668e+00, 1.266e+00, 2.374e+00,
        2.371e+00, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, 2.525e+00, 1.166e+00, -1.000e+03, -1.000e+03,
        -1.000e+03, -1.000e+03, -1.000e+03, 7.738e-01, 1.280e+00, -1.000e+03, -1.000e+03, -1.000e+03, 1.470e+00,
        3.130e+00, 1.480e+00, 7.283e-01, 1.196e+00, -1.000e+03, 1.099e+00, 9.889e-01, 1.533e+00, -1.000e+03,
        -1.000e+03, -1.000e+03, 1.906e+00, 1.764e+00, -1.000e+03, 5.191e-01, -1.000e+03, -1.000e+03, -1.000e+03,
        1.230e+00, 8.688e-01, -1.000e+03, -1.000e+03, 1.396e+00, -1.000e+03, 1.774e+00, -1.000e+03, 1.107e+00,
        3.937e-01, 1.364e-01, -1.000e+03, 1.774e+00, -1.000e+03, -1.000e+03, 0.000e+00, 1.501e+00, -1.000e+03,
        -1.000e+03]),
    'spacing_mean_gains': np.array([
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [6.659e-01, 7.513e-02, 9.095e-02, 1.489e-01, 1.500e-01, 1.998e-01, 2.231e-01, 2.411e-01],
        [1.840e+00, 1.275e+00, 7.102e-01, 5.246e-01, 5.158e-01, 4.562e-01, 4.296e-01, 4.016e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [5.737e+00, 5.394e+00, 5.395e+00, 3.602e+00, 3.544e+00, 3.462e+00, 3.379e+00, 3.443e+00],
        [4.503e-01, 5.948e-01, 5.518e-01, 6.951e-01, 8.565e-01, 9.552e-01, 1.002e+00, 1.036e+00],
        [2.946e+00, 2.682e+00, 2.291e+00, 1.646e+00, 1.307e+00, 1.117e+00, 1.065e+00, 1.069e+00],
        [4.369e+00, 4.435e+00, 2.924e+00, 2.694e+00, 2.130e+00, 1.786e+00, 1.687e+00, 1.554e+00],
        [7.083e-01, 2.397e-01, 3.438e-01, 5.103e-01, 4.682e-01, 4.302e-01, 3.943e-01, 3.928e-01],
        [1.316e+00, 5.788e-01, 5.365e-01, 5.773e-01, 4.253e-01, 2.880e-01, 2.141e-01, 1.912e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [2.012e+00, 1.578e+00, 1.194e+00, 9.824e-01, 7.775e-01, 6.780e-01, 5.789e-01, 5.222e-01],
        [3.678e-01, 4.762e-01, 1.856e-01, 5.044e-01, 5.686e-01, 7.103e-01, 6.757e-01, 6.694e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [4.432e+00, 2.980e+00, 1.981e+00, 8.925e-01, 6.977e-01, 5.744e-01, 6.201e-01, 6.028e-01],
        [1.221e+00, 7.441e-01, 8.064e-01, 8.102e-01, 9.292e-01, 9.596e-01, 1.023e+00, 1.045e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.680e+00, 1.134e+00, 9.198e-01, 1.028e+00, 8.159e-01, 8.631e-01, 9.275e-01, 9.729e-01],
        [7.451e-01, 1.560e-02, 0.000e+00, 0.000e+00, 3.577e-02, 5.138e-02, 4.558e-02, 9.348e-03],
        [2.580e+00, 1.755e+00, 1.160e+00, 7.170e-01, 3.107e-01, 1.071e-01, 1.055e-02, 7.957e-04],
        [1.164e+00, 9.651e-01, 1.103e+00, 1.383e+00, 1.427e+00, 1.444e+00, 1.410e+00, 1.371e+00],
        [2.444e-01, 1.200e-01, 3.889e-01, 5.655e-01, 6.385e-01, 8.015e-01, 8.879e-01, 9.842e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.295e+00, 9.695e-01, 5.210e-01, 5.530e-01, 5.092e-01, 5.067e-01, 4.847e-01, 4.773e-01],
        [1.603e+00, 8.458e-01, 2.996e-01, 1.065e+00, 9.808e-01, 1.036e+00, 9.804e-01, 9.537e-01],
        [8.323e-01, 7.470e-01, 7.379e-01, 8.376e-01, 8.939e-01, 9.298e-01, 9.585e-01, 9.694e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.165e+00, 9.878e-01, 9.136e-01, 9.338e-01, 9.060e-01, 8.514e-01, 8.980e-01, 9.110e-01],
        [1.774e+00, 1.464e+00, 1.108e+00, 5.746e-01, 5.288e-01, 3.414e-01, 2.322e-01, 2.282e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [3.526e+00, 4.890e+00, 3.738e+00, 2.851e+00, 2.948e+00, 2.585e+00, 2.394e+00, 2.329e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.744e+00, 1.739e+00, 1.695e+00, 1.959e+00, 2.067e+00, 1.844e+00, 1.542e+00, 1.433e+00],
        [5.989e-01, 4.981e-01, 6.691e-01, 8.452e-01, 9.766e-01, 1.155e+00, 1.180e+00, 1.277e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [2.219e+00, 2.573e+00, 1.713e+00, 1.171e+00, 1.147e+00, 9.448e-01, 8.950e-01, 8.383e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [3.462e+00, 2.561e+00, 1.580e+00, 1.084e+00, 7.924e-01, 7.807e-01, 7.757e-01, 7.639e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.574e+00, 1.010e+00, 8.331e-01, 8.870e-01, 9.212e-01, 9.464e-01, 1.031e+00, 1.100e+00],
        [2.434e+00, 6.633e-01, 4.925e-01, 5.630e-01, 1.327e-01, 1.771e-01, 2.285e-01, 4.160e-01],
        [3.054e+01, 3.008e+01, 2.658e+01, 1.913e+01, 1.256e+01, 9.171e+00, 8.743e+00, 8.258e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.400e+00, 6.892e-01, 3.453e-01, 3.719e-01, 3.400e-01, 3.344e-01, 2.967e-01, 2.549e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.138e+04, 3.427e+03, 3.792e+04, 8.720e+04, 6.864e+04, 7.300e+04, 5.045e+04, 4.007e+04],
        [3.408e+00, 2.508e+00, 1.598e+00, 1.133e+00, 7.560e-01, 7.391e-01, 7.814e-01, 8.137e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03]])
}

curved_model_run_5 = {
    'train_acc': 0.8710,
    'validation_acc': 0.8432,
    'no_optimal_stimulus_neurons': np.array(
        [0, 3, 4, 10, 11, 13, 16, 17, 19, 30, 31, 32, 33, 35, 36, 37, 42, 43, 45, 48, 49, 52, 56, 57, 58, 59, 62]),
    'c_len_iou_vs_len_test': np.array([0.9497, 0.2822, 0.6880, 0.7826, 0.8240]),
    'c_len_noise_resp': np.array([
        -1.000e+03, 1.306e+00, 1.222e+00, -1.000e+03, -1.000e+03,
        4.318e-01, 2.751e-02, 1.071e-01, 1.596e+00, 3.613e-01,
        -1.000e+03, -1.000e+03, 3.083e-01, -1.000e+03, 6.265e-01,
        2.446e-01, -1.000e+03, -1.000e+03, 1.174e-01, -1.000e+03,
        2.045e-01, 6.646e-01, 2.378e-01, 4.432e-01, 3.282e+00,
        1.133e+00, 3.068e-01, 1.990e-03, 2.091e-02, 4.228e-01,
        -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, 1.429e+00,
        -1.000e+03, -1.000e+03, -1.000e+03, 6.976e-01, 1.793e-01,
        2.020e+00, 1.108e+00, -1.000e+03, -1.000e+03, 1.004e+00,
        -1.000e+03, 9.425e-01, 3.573e-02, -1.000e+03, -1.000e+03,
        1.926e-01, 2.594e-02, -1.000e+03, 4.936e-01, 1.296e+00,
        2.483e-01, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03,
        3.256e-01, 6.585e-01, -1.000e+03, 0.000e+00]),
    'c_len_mean_gains': np.array([
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.859e+00, 1.809e+00, 1.799e+00, 1.830e+00],
        [1.000e+00, 8.417e-01, 1.123e+00, 1.133e+00, 1.050e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 2.272e+00, 2.922e+00, 3.017e+00, 3.118e+00],
        [9.996e-01, 2.630e+01, 5.359e+01, 6.850e+01, 6.329e+01],
        [9.999e-01, 8.488e+00, 8.846e+00, 1.048e+01, 1.005e+01],
        [1.000e+00, 1.475e+00, 1.815e+00, 2.047e+00, 2.086e+00],
        [1.000e+00, 1.635e+00, 2.112e+00, 2.150e+00, 1.906e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 4.014e+00, 4.272e+00, 4.387e+00, 4.388e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 4.178e+00, 6.036e+00, 6.290e+00, 6.623e+00],
        [1.000e+00, 3.128e+00, 6.628e+00, 7.318e+00, 7.422e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [9.999e-01, 1.033e+01, 1.813e+01, 2.526e+01, 2.304e+01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 3.043e+00, 5.383e+00, 4.970e+00, 5.425e+00],
        [1.000e+00, 2.208e+00, 3.096e+00, 4.205e+00, 4.167e+00],
        [1.000e+00, 6.351e+00, 7.746e+00, 7.969e+00, 7.866e+00],
        [1.000e+00, 2.656e-02, 6.100e-01, 1.804e+00, 3.399e+00],
        [1.000e+00, 9.610e-01, 1.117e+00, 1.155e+00, 1.202e+00],
        [1.000e+00, 1.565e+00, 2.319e+00, 2.463e+00, 2.505e+00],
        [1.000e+00, 1.053e+00, 1.819e+00, 3.649e+00, 3.344e+00],
        [9.950e-01, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00],
        [9.995e-01, 4.711e+01, 6.969e+01, 5.801e+01, 7.952e+01],
        [1.000e+00, 1.282e+00, 2.770e+00, 3.009e+00, 3.266e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 9.695e-01, 1.426e+00, 1.700e+00, 1.736e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.962e+00, 2.421e+00, 2.816e+00, 2.934e+00],
        [9.999e-01, 3.809e+00, 4.151e+00, 5.881e+00, 5.503e+00],
        [1.000e+00, 9.592e-01, 1.198e+00, 1.182e+00, 1.146e+00],
        [1.000e+00, 1.949e+00, 2.503e+00, 2.493e+00, 2.573e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 4.098e-01, 4.970e-01, 5.100e-01, 4.451e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 8.151e-01, 1.274e+00, 1.391e+00, 1.498e+00],
        [9.997e-01, 1.767e+00, 5.669e+00, 1.065e+01, 9.864e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [9.999e-01, 2.027e+00, 3.633e+00, 4.807e+00, 4.612e+00],
        [9.996e-01, 5.252e+00, 3.482e+01, 5.914e+01, 4.907e+01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 6.727e-01, 1.083e+00, 1.604e+00, 1.533e+00],
        [1.000e+00, 7.485e-01, 9.526e-01, 1.076e+00, 1.064e+00],
        [1.000e+00, 7.619e+00, 1.094e+01, 1.204e+01, 1.057e+01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.000e+00, 1.770e+00, 3.369e+00, 4.711e+00, 4.528e+00],
        [1.000e+00, 1.676e+00, 3.204e+00, 3.464e+00, 3.989e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [0.000e+00, 4.579e+04, 1.822e+05, 2.110e+05, 2.289e+05]]),
    'spacing_noise_resp': np.array([
        -1.000e+03, 2.423e+00, 1.223e+00, -1.000e+03, -1.000e+03, 7.133e-01, 3.617e-01, 1.009e+00, 2.299e+00,
        7.283e-01, -1.000e+03, -1.000e+03, 1.334e+00, -1.000e+03, 1.671e+00, 1.166e+00, -1.000e+03, -1.000e+03,
        6.699e-01, -1.000e+03, 6.601e-01, 1.999e+00, 1.603e+00, 1.006e-01, 3.146e+00, 1.435e+00, 1.329e+00,
        0.000e+00, 7.062e-02, 2.400e-01, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, 1.580e+00, -1.000e+03,
        -1.000e+03, -1.000e+03, 1.882e+00, 3.397e-01, 1.823e+00, 2.657e+00, -1.000e+03, -1.000e+03, 6.914e-01,
        -1.000e+03, 1.363e+00, 3.573e-02, -1.000e+03, -1.000e+03, 8.548e-01, 2.186e-01, -1.000e+03, 7.228e-01,
        2.199e+00, 1.612e+00, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, 7.529e-01, 1.529e+00, -1.000e+03,
        0.000e+00]),
    'spacing_mean_gains': np.array([
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [9.618e-01, 7.349e-01, 6.170e-01, 5.865e-01, 5.773e-01, 5.954e-01, 6.065e-01, 6.129e-01],
        [1.132e+00, 4.536e-01, 2.182e-01, 3.746e-01, 3.680e-01, 3.803e-01, 3.748e-01, 3.571e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.810e+00, 1.578e+00, 1.186e+00, 1.149e+00, 1.109e+00, 1.032e+00, 1.019e+00, 1.017e+00],
        [4.406e+00, 5.177e+00, 5.044e+00, 3.548e+00, 3.365e+00, 3.618e+00, 4.018e+00, 4.418e+00],
        [1.079e+00, 9.536e-01, 1.096e+00, 1.537e+00, 1.690e+00, 1.811e+00, 1.858e+00, 1.882e+00],
        [1.404e+00, 3.015e-01, 9.945e-02, 5.628e-02, 1.101e-01, 1.001e-01, 1.160e-01, 9.601e-02],
        [1.161e+00, 1.024e+00, 4.055e-01, 2.544e-01, 1.932e-01, 1.166e-01, 1.402e-01, 1.738e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [9.889e-01, 1.043e+00, 1.028e+00, 1.026e+00, 9.891e-01, 9.733e-01, 9.971e-01, 1.028e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [2.556e+00, 1.757e+00, 1.295e+00, 1.089e+00, 8.582e-01, 8.620e-01, 8.357e-01, 8.036e-01],
        [1.234e+00, 1.670e+00, 1.167e+00, 7.912e-01, 8.195e-01, 8.835e-01, 9.005e-01, 9.223e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [4.336e+00, 2.394e+00, 1.816e+00, 1.648e+00, 1.600e+00, 1.561e+00, 1.743e+00, 1.808e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.727e+00, 6.416e-01, 2.105e-01, 4.673e-01, 7.334e-01, 9.229e-01, 1.059e+00, 1.098e+00],
        [1.414e+00, 1.013e+00, 6.973e-01, 7.224e-01, 8.089e-01, 8.135e-01, 8.107e-01, 8.228e-01],
        [1.113e+00, 9.426e-01, 7.389e-01, 7.824e-01, 8.001e-01, 8.279e-01, 8.719e-01, 9.053e-01],
        [7.514e+00, 1.846e+00, 1.741e+00, 6.948e-01, 6.540e-01, 5.068e-01, 9.347e-01, 1.130e+00],
        [1.279e+00, 3.772e-01, 9.101e-02, 9.076e-02, 6.914e-02, 2.330e-02, 2.850e-02, 3.004e-02],
        [1.901e+00, 8.439e-01, 6.562e-01, 1.401e-01, 2.385e-03, 4.908e-04, 0.000e+00, 0.000e+00],
        [5.319e-01, 4.550e-01, 3.970e-01, 8.255e-01, 1.040e+00, 1.248e+00, 1.281e+00, 1.322e+00],
        [0.000e+00, 0.000e+00, 0.000e+00, 7.588e+01, 3.996e+04, 1.104e+05, 1.294e+05, 1.335e+05],
        [2.156e+01, 1.782e+01, 1.081e+01, 2.228e+00, 2.359e+00, 7.041e-01, 4.890e-01, 4.453e-01],
        [4.921e+00, 4.026e+00, 2.293e+00, 2.969e+00, 2.425e+00, 2.958e+00, 3.243e+00, 3.031e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.453e+00, 5.584e-01, 5.042e-02, 2.457e-01, 2.528e-01, 3.552e-01, 3.402e-01, 3.776e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.099e+00, 7.659e-01, 7.016e-01, 7.500e-01, 7.228e-01, 7.855e-01, 8.179e-01, 8.986e-01],
        [3.149e+00, 1.961e+00, 2.135e+00, 1.197e+00, 1.735e+00, 1.831e+00, 2.360e+00, 2.363e+00],
        [1.343e+00, 6.386e-01, 2.210e-01, 3.175e-01, 1.829e-01, 1.402e-01, 1.453e-01, 1.215e-01],
        [1.068e+00, 1.181e+00, 9.612e-01, 9.140e-01, 9.497e-01, 9.550e-01, 1.024e+00, 1.073e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [7.059e-01, 2.449e-01, 4.756e-01, 4.961e-01, 5.090e-01, 6.212e-01, 6.800e-01, 8.048e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.058e+00, 1.371e-01, 6.181e-03, 1.348e-02, 5.189e-02, 1.495e-01, 2.318e-01, 3.262e-01],
        [7.345e+00, 8.772e+00, 1.895e+01, 1.683e+01, 1.961e+01, 2.181e+01, 2.829e+01, 2.977e+01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [9.648e-01, 4.888e-01, 2.837e-01, 5.445e-01, 6.298e-01, 8.987e-01, 9.946e-01, 9.955e-01],
        [6.403e+00, 5.006e+00, 7.752e+00, 7.861e+00, 7.581e+00, 6.757e+00, 6.693e+00, 6.846e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [1.054e+00, 1.219e+00, 1.482e-01, 4.608e-02, 1.085e-01, 8.871e-02, 8.382e-02, 1.979e-01],
        [6.516e-01, 2.099e-01, 2.558e-01, 3.013e-01, 3.432e-01, 3.775e-01, 3.723e-01, 3.761e-01],
        [1.745e+00, 1.399e+00, 1.136e+00, 1.121e+00, 1.147e+00, 1.098e+00, 1.113e+00, 1.117e+00],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [2.084e+00, 3.286e-01, 3.357e-01, 6.682e-01, 9.441e-01, 9.899e-01, 1.053e+00, 1.095e+00],
        [1.458e+00, 8.788e-01, 5.089e-01, 5.024e-01, 6.136e-01, 7.243e-01, 7.368e-01, 7.619e-01],
        [-1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03, -1.000e+03],
        [2.163e+05, 2.341e+05, 1.884e+05, 1.336e+05, 9.073e+04, 1.042e+05, 1.042e+05, 1.089e+05]])
}


# -------------------------------------------------------------------------------------------------
def get_filtered_idx_arr_max_gain(gains_arr, max_gain=20.0):
    """
    Get all  neurons with any gain less than 20 and that are responsive (gains are not all zero)
    and for whom the optimal stimulus was found (does not contain INVALID_RESULTS)
    :param
    :return:
    """
    idx_arr = []

    for idx, gains in enumerate(gains_arr):
        if np.all(gains <= max_gain) and not np.all(gains == 0) and not np.any(gains == INVALID_RESULTS):
            idx_arr.append(idx)
            # print(idx, gains)

    return idx_arr


def get_population_averages(results_dict_list, label=None):
    """

    :param results_dict_list:
    :param label:
    :return:
    """
    filtered_c_len_results = []
    filtered_space_results = []

    for r_idx, results_dict in enumerate(results_dict_list):
        valid_clen_idxs = get_filtered_idx_arr_max_gain(results_dict['c_len_mean_gains'])
        valid_space_idxs = get_filtered_idx_arr_max_gain(results_dict['spacing_mean_gains'])

        # Process results only for those neurons for whom both sets of results is valid
        valid_idxs = set(valid_clen_idxs) & set(valid_space_idxs)
        valid_idxs = list(valid_idxs)

        print("Run {}: Valid Neurons: Clen {}, Space {}, Both {}".format(
            r_idx, len(valid_clen_idxs), len(valid_space_idxs), len(valid_idxs)))

        filtered_c_len_results.extend(results_dict['c_len_mean_gains'][valid_idxs,])
        filtered_space_results.extend(results_dict['spacing_mean_gains'][valid_idxs,])

    filtered_c_len_results = np.array(filtered_c_len_results)
    filtered_space_results = np.array(filtered_space_results)

    return np.mean(filtered_c_len_results, 0), np.std(filtered_c_len_results, 0), filtered_c_len_results.shape[0], \
        np.mean(filtered_space_results, 0), np.std(filtered_space_results, 0), filtered_space_results.shape[0]


def plot_individual_run_curves(results_dict_list, label=None):
    """
    Plot the clen and spacing results of individual runs separately
    :param results_dict_list:
    :param label:
    :return:
    """

    f, ax_arr = plt.subplots(1, 2, figsize=(10, 5))

    for r_idx, results_dict in enumerate(results_dict_list):

        # print("Plotting results [{}/{}]".format(r_idx, len(results_dict_list)))

        c_len_means, c_len_stds, c_len_n, space_means, space_stds, space_n = \
            get_population_averages([results_dict], label=net_a_name)

        if c_len_n != 0:
            ax_arr[0].plot(c_len_arr, c_len_means, label='run {} (N={})'.format(r_idx, c_len_n))
        if space_n != 0:
            ax_arr[1].plot(spacing_arr, space_means, label='run {} (N={})'.format(r_idx, space_n))

    ax_arr[0].set_xlabel("Contour Length (# Fragments)")
    ax_arr[0].set_ylabel("Gain")
    ax_arr[0].grid()
    ax_arr[0].legend()

    ax_arr[1].set_xlabel("Spacing (RCD)")
    ax_arr[1].set_ylabel("Gain")
    ax_arr[1].grid()
    ax_arr[1].legend()

    f.suptitle(label)


def get_iou_per_len(result_dict):
    # return result_dict['c_len_iou_vs_len_validation']
    return result_dict['c_len_iou_vs_len_test']


def get_population_avg_iou_results_per_len(result_dict_list):
    """ Population IoU per Length """

    combined_iou_results = []

    for idx, result in enumerate(result_dict_list):
        combined_iou_results.append(get_iou_per_len(result))

    combined_iou_results = np.array(combined_iou_results)

    return np.mean(combined_iou_results, axis=0)


def get_model_average_ious(result_dict_list):
    """ Population overall of overall Training and Validation IoU scores"""
    combined_train_iou = []
    combined_val_iou = []
    combined_test_iou = []

    for idx, result in enumerate(result_dict_list):
        combined_train_iou.append(result['train_acc'])
        combined_val_iou.append(result['validation_acc'])
        combined_test_iou.append(get_iou_per_len(result))

    combined_train_iou = np.array(combined_train_iou)
    combined_val_iou = np.array(combined_val_iou)

    combined_test_iou = np.array(combined_test_iou)
    # Avg. across all lengths. Make is similar to Validation.
    combined_test_iou = np.mean(combined_test_iou, axis=1)

    return np.mean(combined_train_iou), np.std(combined_train_iou), \
        np.mean(combined_val_iou), np.std(combined_val_iou), \
        np.mean(combined_test_iou), np.std(combined_test_iou)


def get_network_results(results_dict_list, label=None):
    """ Get population overages across multiple runs  and store them in a results dictionary"""

    if label is not None:
        print("Getting results for {} ...".format(label))

    # Experiment Results
    pop_c_len_means, pop_c_len_stds, pop_c_len_n, pop_space_means, pop_space_stds, pop_space_n = \
        get_population_averages(network_c, label=net_c_name)
    print("Mean c_len gains {},\nMean space gains {}".format(pop_c_len_means, pop_space_means))

    # Model IoU Overall Training and per Contour Length
    pop_c_len_iou = get_population_avg_iou_results_per_len(results_dict_list)
    overall_iou_arr = get_model_average_ious(results_dict_list)
    print("Mean IoUs: Train mu={:0.4f}, sigma={:0.4f}, val mu={:0.4f}, sigma={:0.4f}, "
          "test mu={:0.4f},sigma={:0.4f}".format(
        overall_iou_arr[0], overall_iou_arr[1], overall_iou_arr[2],
        overall_iou_arr[3], overall_iou_arr[4], overall_iou_arr[5]))

    processed_results = {
        'pop_c_len_means': pop_c_len_means,
        'pop_c_len_stds': pop_c_len_stds,
        'pop_c_len_n': pop_c_len_n,
        'pop_space_means': pop_space_means,
        'pop_space_stds': pop_space_stds,
        'pop_space_n': pop_space_n,
        'pop_c_len_iou': pop_c_len_iou,
        'overall_iou_arr': overall_iou_arr,  # Tuple see above.
    }

    return processed_results


# =================================================================================================
if __name__ == "__main__":
    plt.ion()
    np.set_printoptions(precision=3, linewidth=120, suppress=True, threshold=np.inf)

    c_len_arr = np.array([1, 3, 5, 7, 9])  # Units of contour fragments
    # Units of relative co-linear distance (RCD)
    spacing_arr = np.array([1.00, 1.14, 1.29, 1.43, 1.57, 1.71, 1.86, 2.00])

    network_a = [
        model_run_6,
        # model_run_2,
        # model_run_3,
        # model_run_4,
        # model_run_5,
    ]
    net_a_name = 'Model - Straight Contours'

    network_b = [
        control_run_1,
        control_run_2,
        control_run_3,
        control_run_4,
        control_run_5,
        # control_run_6,
        # control_run_7,
    ]
    net_b_name = 'Control'

    network_c = [
        curved_model_run_1,
        # curved_model_run_2,
        # curved_model_run_3,
        # curved_model_run_4,
        # curved_model_run_5,
    ]
    net_c_name = 'Model - Curved Contours'

    # -----------------------------------------------------------------------------------
    # Process Results
    net_a_results = get_network_results(network_a, net_a_name)
    plot_individual_run_curves(network_a, label=net_a_name)

    net_b_results = get_network_results(network_b, net_b_name)
    plot_individual_run_curves(network_b, label=net_b_name)

    # -----------------------------------------------------------------------------------
    # Combined Plot
    # -----------------------------------------------------------------------------------

    # ---------------------------------------------------------------------------------------------
    # End
    # ---------------------------------------------------------------------------------------------
    import pdb

    pdb.set_trace()
