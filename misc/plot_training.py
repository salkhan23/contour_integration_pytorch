import numpy as np
import matplotlib.pyplot as plt

# Copy this from the summary File
data1 = np.array([
    [0,  0.7080, 0.8316, 0.6850, 0.8977, 0.001],
    [1,  0.6849, 0.9165, 0.6846, 0.9204, 0.001],
    [2,  0.6846, 0.9322, 0.6845, 0.9401, 0.001],
    [3,  0.6845, 0.9410, 0.6845, 0.9371, 0.001],
    [4,  0.6844, 0.9473, 0.6844, 0.9477, 0.001],
    [5,  0.6844, 0.9502, 0.6844, 0.9513, 0.001],
    [6,  0.6843, 0.9543, 0.6845, 0.9377, 0.001],
    [7,  0.6843, 0.9559, 0.6843, 0.9572, 0.001],
    [8,  0.6843, 0.9590, 0.6843, 0.9535, 0.001],
    [9,  0.6843, 0.9600, 0.6843, 0.9559, 0.001],
    [10,  0.6843, 0.9618, 0.6843, 0.9594, 0.001],
    [11,  0.6843, 0.9635, 0.6843, 0.9560, 0.001],
    [12,  0.6842, 0.9640, 0.6843, 0.9579, 0.001],
    [13,  0.6842, 0.9658, 0.6843, 0.9600, 0.001],
    [14,  0.6842, 0.9662, 0.6843, 0.9607, 0.001],
    [15,  0.6842, 0.9671, 0.6843, 0.9557, 0.001],
    [16,  0.6842, 0.9681, 0.6843, 0.9637, 0.001],
    [17,  0.6842, 0.9682, 0.6842, 0.9613, 0.001],
    [18,  0.6842, 0.9699, 0.6843, 0.9594, 0.001],
    [19,  0.6842, 0.9708, 0.6843, 0.9557, 0.001],
    [20,  0.6842, 0.9719, 0.6842, 0.9630, 0.001],
    [21,  0.6842, 0.9719, 0.6843, 0.9606, 0.001],
    [22,  0.6842, 0.9728, 0.6842, 0.9656, 0.001],
    [23,  0.6842, 0.9734, 0.6842, 0.9622, 0.001],
    [24,  0.6842, 0.9742, 0.6842, 0.9631, 0.001],
    [25,  0.6841, 0.9746, 0.6842, 0.9658, 0.001],
    [26,  0.6841, 0.9753, 0.6842, 0.9659, 0.001],
    [27,  0.6841, 0.9752, 0.6842, 0.9672, 0.001],
    [28,  0.6841, 0.9760, 0.6842, 0.9652, 0.001],
    [29,  0.6841, 0.9760, 0.6842, 0.9658, 0.001],
    [30,  0.6841, 0.9763, 0.6842, 0.9631, 0.001],
    [31,  0.6841, 0.9764, 0.6842, 0.9670, 0.001],
    [32,  0.6841, 0.9782, 0.6843, 0.9594, 0.001],
    [33,  0.6841, 0.9780, 0.6842, 0.9673, 0.001],
    [34,  0.6841, 0.9782, 0.6842, 0.9657, 0.001],
    [35,  0.6841, 0.9787, 0.6842, 0.9676, 0.001],
    [36,  0.6841, 0.9788, 0.6842, 0.9688, 0.001],
    [37,  0.6841, 0.9796, 0.6842, 0.9659, 0.001],
    [38,  0.6841, 0.9793, 0.6842, 0.9680, 0.001],
    [39,  0.6841, 0.9796, 0.6842, 0.9658, 0.001],
    [40,  0.6841, 0.9802, 0.6842, 0.9681, 0.001],
    [41,  0.6841, 0.9804, 0.6842, 0.9677, 0.001],
    [42,  0.6841, 0.9804, 0.6842, 0.9701, 0.001],
    [43,  0.6841, 0.9809, 0.6842, 0.9674, 0.001],
    [44,  0.6841, 0.9807, 0.6842, 0.9654, 0.001],
    [45,  0.6841, 0.9812, 0.6842, 0.9669, 0.001],
    [46,  0.6841, 0.9815, 0.6842, 0.9671, 0.001],
    [47,  0.6841, 0.9821, 0.6842, 0.9699, 0.001],
    [48,  0.6841, 0.9818, 0.6842, 0.9690, 0.001],
    [49,  0.6841, 0.9814, 0.6842, 0.9656, 0.001],
])

data2 = np.array([
    [0, 0.6961, 0.8173, 0.6851, 0.8777, 0.001],
    [1, 0.6849, 0.9115, 0.6849, 0.8984, 0.001],
    [2, 0.6846, 0.9267, 0.6845, 0.9328, 0.001],
    [3, 0.6846, 0.9345, 0.6845, 0.9311, 0.001],
    [4, 0.6845, 0.9374, 0.6845, 0.9284, 0.001],
    [5, 0.6845, 0.9428, 0.6845, 0.9365, 0.001],
    [6, 0.6844, 0.9446, 0.6845, 0.9434, 0.001],
    [7, 0.6844, 0.9469, 0.6844, 0.9485, 0.001],
    [8, 0.6844, 0.9486, 0.6844, 0.9460, 0.001],
    [9, 0.6844, 0.9503, 0.6843, 0.9513, 0.001],
    [10, 0.6844, 0.9513, 0.6843, 0.9588, 0.001],
    [11, 0.6844, 0.9526, 0.6843, 0.9515, 0.001],
    [12, 0.6844, 0.9530, 0.6844, 0.9398, 0.001],
    [13, 0.6843, 0.9545, 0.6843, 0.9557, 0.001],
    [14, 0.6843, 0.9565, 0.6844, 0.9496, 0.001],
    [15, 0.6843, 0.9572, 0.6844, 0.9465, 0.001],
    [16, 0.6843, 0.9574, 0.6843, 0.9535, 0.001],
    [17, 0.6843, 0.9593, 0.6845, 0.9401, 0.001],
    [18, 0.6843, 0.9589, 0.6845, 0.9339, 0.001],
    [19, 0.6843, 0.9596, 0.6844, 0.9399, 0.001],
    [20, 0.6843, 0.9605, 0.6844, 0.9469, 0.001],
    [21, 0.6843, 0.9607, 0.6844, 0.9455, 0.001],
    [22, 0.6843, 0.9614, 0.6845, 0.9305, 0.001],
    [23, 0.6843, 0.9610, 0.6844, 0.9468, 0.001],
    [24, 0.6843, 0.9622, 0.6843, 0.9566, 0.001],
    [25, 0.6843, 0.9628, 0.6843, 0.9506, 0.001],
    [26, 0.6843, 0.9621, 0.6846, 0.9181, 0.001],
    [27, 0.6843, 0.9636, 0.6844, 0.9519, 0.001],
    [28, 0.6842, 0.9646, 0.6843, 0.9594, 0.001],
    [29, 0.6842, 0.9645, 0.6844, 0.9495, 0.001],
    [30, 0.6842, 0.9646, 0.6843, 0.9526, 0.001],
    [31, 0.6842, 0.9650, 0.6844, 0.9422, 0.001],
    [32, 0.6842, 0.9647, 0.6846, 0.9234, 0.001],
    [33, 0.6842, 0.9668, 0.6844, 0.9408, 0.001],
    [34, 0.6842, 0.9662, 0.6843, 0.9512, 0.001],
    [35, 0.6842, 0.9667, 0.6843, 0.9505, 0.001],
    [36, 0.6842, 0.9661, 0.6844, 0.9434, 0.001],
    [37, 0.6842, 0.9661, 0.6844, 0.9486, 0.001],
    [38, 0.6842, 0.9665, 0.6846, 0.9224, 0.001],
    [39, 0.6842, 0.9670, 0.6847, 0.9051, 0.001],
    [40, 0.6842, 0.9676, 0.6848, 0.8991, 0.001],
    [41, 0.6842, 0.9673, 0.6846, 0.9244, 0.001],
    [42, 0.6842, 0.9679, 0.6846, 0.9222, 0.001],
    [43, 0.6842, 0.9688, 0.6844, 0.9420, 0.001],
    [44, 0.6842, 0.9688, 0.6846, 0.9212, 0.001],
    [45, 0.6842, 0.9683, 0.6846, 0.9202, 0.001],
    [46, 0.6842, 0.9690, 0.6845, 0.9332, 0.001],
    [47, 0.6842, 0.9687, 0.6846, 0.9209, 0.001],
    [48, 0.6842, 0.9701, 0.6844, 0.9449, 0.001],
    [49, 0.6842, 0.9695, 0.6846, 0.9279, 0.001],
])


plt.ion()

# loss figure
plt.figure('Loss')
plt.plot(data1[:, 0], data1[:, 1], linestyle=':', label='current_subtract_train')
plt.plot(data2[:, 0], data2[:, 1], linestyle=':', label='control_match_param_train')
plt.plot(data1[:, 0], data1[:, 3], label='current_subtract_val')
plt.plot(data2[:, 0], data2[:, 3], label='control_match_param_val')
plt.xlabel("Epoch")
plt.ylabel("Loss")
plt.grid()
plt.legend()

plt.figure('IoU')
plt.plot(data1[:, 0], data1[:, 2], linestyle=':', label='current_subtract_train')
plt.plot(data2[:, 0], data2[:, 2], linestyle=':', label='control_match_param_train')
plt.plot(data1[:, 0], data1[:, 4], label='current_subtract_val')
plt.plot(data2[:, 0], data2[:, 4], label='control_match_param_val')
plt.xlabel("Epoch")
plt.ylabel("Intersection over Union")
plt.grid()
plt.legend()

input("Press any key to continue")

