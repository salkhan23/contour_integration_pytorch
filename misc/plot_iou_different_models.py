# ---------------------------------------------------------------------------------------
# Compare Iou Vs Epcoch for different Models
# ---------------------------------------------------------------------------------------

import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rcParams.update({
    'font.size': 18,
    'lines.linewidth': 3,
    'lines.markersize': 10,
})

# Base line
# Loss = "Standard Binary Corss Entropy"
# Directory  = results/new_model/ContourIntegrationCSI_20200117_092743_baseline_n_iters_5_latrf_15
# Epoch, train_loss, train_iou, val_loss, val_iou, lr
base_line_n_iters_5_lateral_rf_size_15x15 = np.array([
    [0, 0.4619, 0.1899, 0.3600, 0.2002, 3e-05],
    [1, 0.2991, 0.2060, 0.2414, 0.2294, 3e-05],
    [2, 0.2152, 0.3409, 0.1869, 0.4215, 3e-05],
    [3, 0.1762, 0.5196, 0.1651, 0.5840, 3e-05],
    [4, 0.1605, 0.6106, 0.1567, 0.6473, 3e-05],
    [5, 0.1544, 0.6630, 0.1531, 0.6688, 3e-05],
    [6, 0.1517, 0.6963, 0.1513, 0.6980, 3e-05],
    [7, 0.1500, 0.7232, 0.1500, 0.7192, 3e-05],
    [8, 0.1488, 0.7426, 0.1497, 0.7298, 3e-05],
    [9, 0.1478, 0.7612, 0.1490, 0.7390, 3e-05],
    [10, 0.1470, 0.7768, 0.1487, 0.7476, 3e-05],
    [11, 0.1462, 0.7923, 0.1482, 0.7579, 3e-05],
    [12, 0.1455, 0.8076, 0.1479, 0.7641, 3e-05],
    [13, 0.1449, 0.8202, 0.1476, 0.7678, 3e-05],
    [14, 0.1443, 0.8343, 0.1476, 0.7689, 3e-05],
    [15, 0.1437, 0.8477, 0.1480, 0.7736, 3e-05],
    [16, 0.1432, 0.8610, 0.1482, 0.7772, 3e-05],
    [17, 0.1427, 0.8743, 0.1484, 0.7711, 3e-05],
    [18, 0.1422, 0.8861, 0.1490, 0.7795, 3e-05],
    [19, 0.1417, 0.8984, 0.1492, 0.7791, 3e-05],
    [20, 0.1413, 0.9096, 0.1491, 0.7802, 3e-05],
    [21, 0.1409, 0.9203, 0.1502, 0.7807, 3e-05],
    [22, 0.1405, 0.9320, 0.1501, 0.7777, 3e-05],
    [23, 0.1402, 0.9399, 0.1504, 0.7781, 3e-05],
    [24, 0.1399, 0.9472, 0.1511, 0.7744, 3e-05],
    [25, 0.1397, 0.9539, 0.1527, 0.7649, 3e-05],
    [26, 0.1395, 0.9581, 0.1521, 0.7768, 3e-05],
    [27, 0.1394, 0.9622, 0.1524, 0.7781, 3e-05],
    [28, 0.1393, 0.9661, 0.1531, 0.7765, 3e-05],
    [29, 0.1392, 0.9686, 0.1545, 0.7778, 3e-05],
    [30, 0.1391, 0.9698, 0.1537, 0.7809, 3e-05],
    [31, 0.1385, 0.9886, 0.1541, 0.7896, 3e-06],
    [32, 0.1384, 0.9912, 0.1544, 0.7892, 3e-06],
    [33, 0.1384, 0.9917, 0.1551, 0.7888, 3e-06],
    [34, 0.1383, 0.9919, 0.1555, 0.7910, 3e-06],
    [35, 0.1383, 0.9921, 0.1556, 0.7907, 3e-06],
    [36, 0.1383, 0.9922, 0.1559, 0.7926, 3e-06],
    [37, 0.1383, 0.9923, 0.1562, 0.7918, 3e-06],
    [38, 0.1383, 0.9923, 0.1564, 0.7923, 3e-06],
    [39, 0.1383, 0.9923, 0.1569, 0.7916, 3e-06],
    [40, 0.1383, 0.9923, 0.1572, 0.7909, 3e-06],
    [41, 0.1383, 0.9924, 0.1574, 0.7910, 3e-06],
    [42, 0.1383, 0.9924, 0.1578, 0.7909, 3e-06],
    [43, 0.1383, 0.9924, 0.1583, 0.7913, 3e-06],
    [44, 0.1383, 0.9924, 0.1582, 0.7916, 3e-06],
    [45, 0.1383, 0.9924, 0.1586, 0.7911, 3e-06],
    [46, 0.1383, 0.9924, 0.1589, 0.7927, 3e-06],
    [47, 0.1383, 0.9924, 0.1590, 0.7933, 3e-06],
    [48, 0.1383, 0.9924, 0.1593, 0.7913, 3e-06],
    [49, 0.1383, 0.9924, 0.1597, 0.7926, 3e-06],
])

class_balanced_cross_entropy = np.array([
    [0, 79.4383, 0.1952, 59.9391, 0.2002, 3e-05],
    [1, 54.5906, 0.2002, 51.8157, 0.2002, 3e-05],
    [2, 50.6277, 0.2002, 50.1592, 0.2002, 3e-05],
    [3, 49.8411, 0.2002, 49.8394, 0.2002, 3e-05],
    [4, 49.6462, 0.2006, 49.7035, 0.2010, 3e-05],
    [5, 49.5684, 0.2184, 49.6254, 0.2402, 3e-05],
    [6, 49.5291, 0.2710, 49.5958, 0.2913, 3e-05],
    [7, 49.5040, 0.3281, 49.5813, 0.3351, 3e-05],
    [8, 49.4833, 0.3763, 49.5712, 0.4077, 3e-05],
    [9, 49.4665, 0.4184, 49.5456, 0.4263, 3e-05],
    [10, 49.4526, 0.4555, 49.5332, 0.4566, 3e-05],
    [11, 49.4411, 0.4857, 49.5252, 0.4764, 3e-05],
    [12, 49.4290, 0.5178, 49.5356, 0.4794, 3e-05],
    [13, 49.4196, 0.5429, 49.5194, 0.5193, 3e-05],
    [14, 49.4110, 0.5665, 49.5255, 0.5405, 3e-05],
    [15, 49.4022, 0.5901, 49.5317, 0.5518, 3e-05],
    [16, 49.3959, 0.6083, 49.5455, 0.5898, 3e-05],
    [17, 49.3895, 0.6261, 49.5533, 0.6065, 3e-05],
    [18, 49.3821, 0.6458, 49.5419, 0.5973, 3e-05],
    [19, 49.3766, 0.6611, 49.5529, 0.6237, 3e-05],
    [20, 49.3703, 0.6789, 49.5972, 0.6512, 3e-05],
    [21, 49.3653, 0.6923, 49.5865, 0.6475, 3e-05],
    [22, 49.3621, 0.7024, 49.6452, 0.6825, 3e-05],
    [23, 49.3568, 0.7165, 49.6117, 0.6679, 3e-05],
    [24, 49.3523, 0.7291, 49.6514, 0.6806, 3e-05],
    [25, 49.3492, 0.7373, 49.6604, 0.6875, 3e-05],
    [26, 49.3450, 0.7499, 49.6140, 0.6380, 3e-05],
    [27, 49.3416, 0.7589, 49.6883, 0.6570, 3e-05],
    [28, 49.3383, 0.7690, 49.6009, 0.6629, 3e-05],
    [29, 49.3378, 0.7716, 49.6503, 0.6811, 3e-05],
    [30, 49.3328, 0.7834, 49.8326, 0.7351, 3e-05],
    [31, 49.3120, 0.8387, 49.8728, 0.7473, 3e-06],
    [32, 49.3075, 0.8534, 49.9169, 0.7547, 3e-06],
    [33, 49.3048, 0.8624, 49.9773, 0.7593, 3e-06],
    [34, 49.3026, 0.8693, 50.0028, 0.7628, 3e-06],
    [35, 49.3010, 0.8748, 50.0790, 0.7681, 3e-06],
    [36, 49.2995, 0.8797, 50.1004, 0.7696, 3e-06],
    [37, 49.2981, 0.8844, 50.1320, 0.7713, 3e-06],
    [38, 49.2967, 0.8882, 50.2128, 0.7749, 3e-06],
    [39, 49.2955, 0.8926, 50.2518, 0.7750, 3e-06],
    [40, 49.2944, 0.8957, 50.2489, 0.7742, 3e-06],
    [41, 49.2933, 0.8992, 50.2725, 0.7752, 3e-06],
    [42, 49.2923, 0.9020, 50.3553, 0.7788, 3e-06],
    [43, 49.2912, 0.9052, 50.3757, 0.7789, 3e-06],
    [44, 49.2903, 0.9083, 50.4156, 0.7800, 3e-06],
    [45, 49.2893, 0.9112, 50.4328, 0.7798, 3e-06],
    [46, 49.2883, 0.9140, 50.4292, 0.7791, 3e-06],
    [47, 49.2875, 0.9169, 50.5001, 0.7819, 3e-06],
    [48, 49.2867, 0.9195, 50.5419, 0.7828, 3e-06],
    [49, 49.2856, 0.9223, 50.6071, 0.7838, 3e-06],
])

# loss from doobnet
# results/new_model/ContourIntegrationCSI_20200117_200818_doobnet_loss
class_balanced_attention_loss = np.array([
    [0, 9.5573, 0.0883, 7.1860, 0.1943, 3e-05],
    [1, 5.6845, 0.1823, 5.7227, 0.3692, 3e-05],
    [2, 4.4507, 0.2423, 4.4091, 0.2793, 3e-05],
    [3, 3.8245, 0.2903, 4.3837, 0.4302, 3e-05],
    [4, 3.4340, 0.3294, 3.9245, 0.3497, 3e-05],
    [5, 3.1688, 0.3641, 3.5575, 0.4269, 3e-05],
    [6, 2.9455, 0.4001, 3.4417, 0.4062, 3e-05],
    [7, 2.7946, 0.4303, 3.3360, 0.4172, 3e-05],
    [8, 2.6735, 0.4601, 3.4517, 0.4983, 3e-05],
    [9, 2.5676, 0.4892, 3.1991, 0.4468, 3e-05],
    [10, 2.4896, 0.5149, 3.2547, 0.5055, 3e-05],
    [11, 2.4205, 0.5392, 3.4589, 0.5750, 3e-05],
    [12, 2.3697, 0.5584, 3.7674, 0.6098, 3e-05],
    [13, 2.3234, 0.5789, 3.7741, 0.5860, 3e-05],
    [14, 2.2858, 0.5986, 3.5183, 0.6053, 3e-05],
    [15, 2.2453, 0.6169, 3.1759, 0.5458, 3e-05],
    [16, 2.2160, 0.6310, 3.5961, 0.6372, 3e-05],
    [17, 2.1917, 0.6436, 3.3825, 0.6215, 3e-05],
    [18, 2.1731, 0.6542, 3.7402, 0.6543, 3e-05],
    [19, 2.1387, 0.6723, 3.4610, 0.6081, 3e-05],
    [20, 2.1269, 0.6797, 3.4095, 0.6130, 3e-05],
    [21, 2.1054, 0.6918, 3.6378, 0.6087, 3e-05],
    [22, 2.0866, 0.7031, 3.9077, 0.5927, 3e-05],
    [23, 2.0758, 0.7080, 3.8694, 0.6557, 3e-05],
    [24, 2.0624, 0.7174, 3.8623, 0.6395, 3e-05],
    [25, 2.0328, 0.7366, 4.0318, 0.7006, 3e-05],
    [26, 2.0403, 0.7328, 3.6860, 0.6550, 3e-05],
    [27, 2.0170, 0.7461, 3.8135, 0.6802, 3e-05],
    [28, 1.9993, 0.7599, 3.9803, 0.6790, 3e-05],
    [29, 1.9961, 0.7618, 4.4789, 0.7251, 3e-05],
    [30, 1.9887, 0.7653, 4.0206, 0.6536, 3e-05],
    [31, 1.9237, 0.8132, 4.6886, 0.7573, 3e-06],
    [32, 1.8975, 0.8377, 5.0492, 0.7703, 3e-06],
    [33, 1.8867, 0.8474, 5.1751, 0.7723, 3e-06],
    [34, 1.8793, 0.8540, 5.3733, 0.7793, 3e-06],
    [35, 1.8726, 0.8595, 5.3129, 0.7767, 3e-06],
    [36, 1.8672, 0.8645, 5.7157, 0.7835, 3e-06],
    [37, 1.8620, 0.8687, 5.6182, 0.7831, 3e-06],
    [38, 1.8571, 0.8725, 6.0409, 0.7887, 3e-06],
    [39, 1.8526, 0.8767, 6.1958, 0.7901, 3e-06],
    [40, 1.8482, 0.8799, 6.2131, 0.7885, 3e-06],
    [41, 1.8440, 0.8836, 6.2402, 0.7910, 3e-06],
    [42, 1.8402, 0.8866, 6.5096, 0.7910, 3e-06],
    [43, 1.8365, 0.8898, 6.5706, 0.7928, 3e-06],
    [44, 1.8329, 0.8932, 6.9713, 0.7976, 3e-06],
    [45, 1.8293, 0.8959, 7.0728, 0.7964, 3e-06],
    [46, 1.8261, 0.8987, 7.0322, 0.7971, 3e-06],
    [47, 1.8226, 0.9013, 7.3844, 0.7972, 3e-06],
    [48, 1.8192, 0.9041, 7.3631, 0.7972, 3e-06],
    [49, 1.8161, 0.9071, 7.5577, 0.7988, 3e-06],
])


# base_line with 2x dataset
# dir : results/new_model/ContourIntegrationCSI_20200118_184825_double_data_n_iters_5_latrf_15
# The rest is exactly like baseline
double_dataset = np.array([
    [0, 0.3806, 0.1961, 0.2427, 0.2145, 3e-05],
    [1, 0.1951, 0.4429, 0.1650, 0.5851, 3e-05],
    [2, 0.1574, 0.6358, 0.1531, 0.6734, 3e-05],
    [3, 0.1510, 0.7057, 0.1500, 0.7234, 3e-05],
    [4, 0.1486, 0.7458, 0.1482, 0.7582, 3e-05],
    [5, 0.1471, 0.7742, 0.1475, 0.7736, 3e-05],
    [6, 0.1460, 0.7961, 0.1467, 0.7862, 3e-05],
    [7, 0.1451, 0.8158, 0.1459, 0.8023, 3e-05],
    [8, 0.1444, 0.8314, 0.1456, 0.8098, 3e-05],
    [9, 0.1438, 0.8471, 0.1453, 0.8164, 3e-05],
    [10, 0.1432, 0.8601, 0.1454, 0.8182, 3e-05],
    [11, 0.1427, 0.8722, 0.1452, 0.8246, 3e-05],
    [12, 0.1422, 0.8847, 0.1452, 0.8219, 3e-05],
    [13, 0.1418, 0.8955, 0.1453, 0.8224, 3e-05],
    [14, 0.1414, 0.9066, 0.1453, 0.8411, 3e-05],
    [15, 0.1410, 0.9158, 0.1459, 0.8113, 3e-05],
    [16, 0.1407, 0.9246, 0.1454, 0.8381, 3e-05],
    [17, 0.1404, 0.9337, 0.1457, 0.8383, 3e-05],
    [18, 0.1401, 0.9418, 0.1462, 0.8387, 3e-05],
    [19, 0.1398, 0.9490, 0.1468, 0.8397, 3e-05],
    [20, 0.1396, 0.9546, 0.1469, 0.8453, 3e-05],
    [21, 0.1394, 0.9599, 0.1472, 0.8411, 3e-05],
    [22, 0.1393, 0.9640, 0.1476, 0.8405, 3e-05],
    [23, 0.1392, 0.9668, 0.1478, 0.8442, 3e-05],
    [24, 0.1391, 0.9696, 0.1483, 0.8397, 3e-05],
    [25, 0.1390, 0.9715, 0.1487, 0.8388, 3e-05],
    [26, 0.1389, 0.9739, 0.1493, 0.8312, 3e-05],
    [27, 0.1389, 0.9755, 0.1494, 0.8362, 3e-05],
    [28, 0.1388, 0.9763, 0.1491, 0.8384, 3e-05],
    [29, 0.1388, 0.9771, 0.1498, 0.8335, 3e-05],
    [30, 0.1388, 0.9784, 0.1496, 0.8437, 3e-05],
    [31, 0.1384, 0.9904, 0.1498, 0.8511, 3e-06],
    [32, 0.1383, 0.9919, 0.1503, 0.8488, 3e-06],
    [33, 0.1383, 0.9922, 0.1506, 0.8521, 3e-06],
    [34, 0.1383, 0.9923, 0.1510, 0.8512, 3e-06],
    [35, 0.1383, 0.9923, 0.1513, 0.8521, 3e-06],
    [36, 0.1383, 0.9923, 0.1515, 0.8531, 3e-06],
    [37, 0.1383, 0.9923, 0.1521, 0.8520, 3e-06],
    [38, 0.1383, 0.9924, 0.1524, 0.8531, 3e-06],
    [39, 0.1383, 0.9924, 0.1526, 0.8516, 3e-06],
    [40, 0.1383, 0.9924, 0.1530, 0.8504, 3e-06],
    [41, 0.1383, 0.9924, 0.1532, 0.8531, 3e-06],
    [42, 0.1383, 0.9924, 0.1535, 0.8526, 3e-06],
    [43, 0.1383, 0.9924, 0.1537, 0.8516, 3e-06],
    [44, 0.1383, 0.9924, 0.1541, 0.8521, 3e-06],
    [45, 0.1382, 0.9924, 0.1541, 0.8523, 3e-06],
    [46, 0.1382, 0.9924, 0.1547, 0.8517, 3e-06],
    [47, 0.1382, 0.9924, 0.1544, 0.8517, 3e-06],
    [48, 0.1382, 0.9924, 0.1547, 0.8529, 3e-06],
    [49, 0.1382, 0.9924, 0.1550, 0.8513, 3e-06],
])

if __name__ == "__main__":
    plt.ion()

    # -----------------------------------------------------------------------
    # Collectively IOU in one figure
    # ----------------------------------------------------------------------

    plt.figure()
    plt.plot(
        base_line_n_iters_5_lateral_rf_size_15x15[:, 0],
        base_line_n_iters_5_lateral_rf_size_15x15[:, 2],
        label='train_baseline',
        linestyle='--',
        color='blue',
        marker='+'
    )
    plt.plot(
        base_line_n_iters_5_lateral_rf_size_15x15[:, 0],
        base_line_n_iters_5_lateral_rf_size_15x15[:, 4],
        label='val_baseline',
        linestyle='-',
        color='blue',
        marker='+'
    )

    plt.plot(
        class_balanced_cross_entropy[:, 0],
        class_balanced_cross_entropy[:, 2],
        label='train_class_balanced_cross_entropy_loss',
        linestyle='--',
        color='red',
        marker='x'
    )
    plt.plot(
        class_balanced_cross_entropy[:, 0],
        class_balanced_cross_entropy[:, 4],
        label='val_class_balanced_cross_entropy_loss',
        linestyle='-',
        color='red',
        marker='x'
    )

    plt.plot(
        class_balanced_attention_loss[:, 0],
        class_balanced_attention_loss[:, 2],
        label='train_class_balanced_attention_cross_entropy_loss',
        linestyle='--',
        color='green',
        marker='d',

    )
    plt.plot(
        class_balanced_attention_loss[:, 0],
        class_balanced_attention_loss[:, 4],
        label='val_class_balanced_attention_cross_entropy_loss',
        linestyle='-',
        color='green',
        marker='d',
    )

    plt.plot(
        double_dataset[:, 0],
        double_dataset[:, 2],
        label='train_double_dataset',
        linestyle='--',
        color='magenta',
        marker = 'o'
    )
    plt.plot(
        double_dataset[:, 0],
        double_dataset[:, 4],
        label='val_double_dataset',
        linestyle='-',
        color='magenta',
        marker='o'
    )

    plt.xlabel("Epoch")
    plt.ylabel("IoU")
    plt.legend()
    plt.grid(True)

    # ---------------------------------------------------------
    import pdb
    pdb.set_trace()
