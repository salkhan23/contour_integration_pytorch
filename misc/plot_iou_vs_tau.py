import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rcParams.update({
    'font.size': 18,
    'lines.linewidth': 3}
)

tau_results = {
    0.1: np.array([
        [0, 0.8932, 0.1076, 0.8458, 0.1637, 0.0001],
        [1, 0.8131, 0.1661, 0.7870, 0.1637, 0.0001],
        [2, 0.7741, 0.1661, 0.7645, 0.1637, 0.0001],
        [3, 0.7593, 0.1661, 0.7556, 0.1637, 0.0001],
        [4, 0.7536, 0.1661, 0.7520, 0.1637, 0.0001],
        [5, 0.7512, 0.1661, 0.7505, 0.1637, 0.0001],
        [6, 0.7501, 0.1661, 0.7499, 0.1637, 0.0001],
        [7, 0.7496, 0.1661, 0.7495, 0.1637, 0.0001],
        [8, 0.7494, 0.1661, 0.7493, 0.1637, 0.0001],
        [9, 0.7493, 0.1661, 0.7492, 0.1637, 0.0001],
        [10, 0.7492, 0.1661, 0.7492, 0.1637, 0.0001],
        [11, 0.7492, 0.1661, 0.7491, 0.1637, 0.0001],
        [12, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [13, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [14, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [15, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [16, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [17, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [18, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [19, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [20, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [21, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [22, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [23, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [24, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [25, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [26, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [27, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [28, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [29, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [30, 0.7491, 0.1661, 0.7491, 0.1637, 0.0001],
        [31, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [32, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [33, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [34, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [35, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [36, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [37, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [38, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [39, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [40, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [41, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [42, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [43, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [44, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [45, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [46, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [47, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [48, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
        [49, 0.7491, 0.1661, 0.7491, 0.1637, 1e-05],
    ]),
    0.2: np.array([
        [0, 0.9004, 0.0995, 0.8599, 0.1576, 0.0001],
        [1, 0.8272, 0.1657, 0.8000, 0.1692, 0.0001],
        [2, 0.7839, 0.1666, 0.7689, 0.1692, 0.0001],
        [3, 0.7646, 0.1666, 0.7585, 0.1692, 0.0001],
        [4, 0.7563, 0.1666, 0.7535, 0.1692, 0.0001],
        [5, 0.7526, 0.1666, 0.7515, 0.1692, 0.0001],
        [6, 0.7508, 0.1666, 0.7505, 0.1692, 0.0001],
        [7, 0.7500, 0.1666, 0.7497, 0.1692, 0.0001],
        [8, 0.7496, 0.1666, 0.7495, 0.1692, 0.0001],
        [9, 0.7494, 0.1666, 0.7493, 0.1692, 0.0001],
        [10, 0.7492, 0.1666, 0.7492, 0.1692, 0.0001],
        [11, 0.7492, 0.1666, 0.7492, 0.1692, 0.0001],
        [12, 0.7492, 0.1666, 0.7491, 0.1692, 0.0001],
        [13, 0.7491, 0.1666, 0.7491, 0.1692, 0.0001],
        [14, 0.7491, 0.1666, 0.7491, 0.1692, 0.0001],
        [15, 0.7491, 0.1666, 0.7491, 0.1692, 0.0001],
        [16, 0.7491, 0.1666, 0.7491, 0.1692, 0.0001],
        [17, 0.7491, 0.1666, 0.7491, 0.1692, 0.0001],
        [18, 0.7491, 0.1674, 0.7491, 0.1702, 0.0001],
        [19, 0.7491, 0.1689, 0.7491, 0.1725, 0.0001],
        [20, 0.7491, 0.1707, 0.7491, 0.1707, 0.0001],
        [21, 0.7491, 0.1784, 0.7491, 0.1833, 0.0001],
        [22, 0.7490, 0.1876, 0.7490, 0.1825, 0.0001],
        [23, 0.7490, 0.1961, 0.7490, 0.2045, 0.0001],
        [24, 0.7489, 0.2029, 0.7489, 0.2021, 0.0001],
        [25, 0.7489, 0.2104, 0.7489, 0.2092, 0.0001],
        [26, 0.7488, 0.2202, 0.7489, 0.2118, 0.0001],
        [27, 0.7488, 0.2283, 0.7488, 0.2298, 0.0001],
        [28, 0.7487, 0.2365, 0.7488, 0.2390, 0.0001],
        [29, 0.7487, 0.2429, 0.7488, 0.2262, 0.0001],
        [30, 0.7486, 0.2493, 0.7488, 0.2393, 0.0001],
        [31, 0.7485, 0.2598, 0.7488, 0.2443, 1e-05],
        [32, 0.7485, 0.2622, 0.7488, 0.2433, 1e-05],
        [33, 0.7485, 0.2635, 0.7488, 0.2437, 1e-05],
        [34, 0.7485, 0.2648, 0.7488, 0.2482, 1e-05],
        [35, 0.7485, 0.2661, 0.7488, 0.2493, 1e-05],
        [36, 0.7485, 0.2672, 0.7488, 0.2473, 1e-05],
        [37, 0.7485, 0.2682, 0.7488, 0.2505, 1e-05],
        [38, 0.7485, 0.2697, 0.7487, 0.2476, 1e-05],
        [39, 0.7484, 0.2705, 0.7487, 0.2454, 1e-05],
        [40, 0.7484, 0.2714, 0.7487, 0.2471, 1e-05],
        [41, 0.7484, 0.2729, 0.7487, 0.2482, 1e-05],
        [42, 0.7484, 0.2734, 0.7487, 0.2469, 1e-05],
        [43, 0.7484, 0.2742, 0.7487, 0.2504, 1e-05],
        [44, 0.7484, 0.2751, 0.7487, 0.2506, 1e-05],
        [45, 0.7484, 0.2762, 0.7487, 0.2526, 1e-05],
        [46, 0.7484, 0.2773, 0.7487, 0.2507, 1e-05],
        [47, 0.7484, 0.2781, 0.7487, 0.2511, 1e-05],
        [48, 0.7484, 0.2791, 0.7487, 0.2526, 1e-05],
        [49, 0.7484, 0.2801, 0.7487, 0.2529, 1e-05],
        ]),
    0.3: np.array([
        [0, 0.9054, 0.0917, 0.8605, 0.1562, 0.0001],
        [1, 0.8306, 0.1668, 0.7975, 0.1562, 0.0001],
        [2, 0.7857, 0.1669, 0.7713, 0.1562, 0.0001],
        [3, 0.7654, 0.1669, 0.7610, 0.1562, 0.0001],
        [4, 0.7567, 0.1669, 0.7541, 0.1562, 0.0001],
        [5, 0.7528, 0.1669, 0.7519, 0.1562, 0.0001],
        [6, 0.7509, 0.1669, 0.7507, 0.1562, 0.0001],
        [7, 0.7500, 0.1670, 0.7495, 0.1564, 0.0001],
        [8, 0.7495, 0.1900, 0.7493, 0.2099, 0.0001],
        [9, 0.7491, 0.2246, 0.7489, 0.2025, 0.0001],
        [10, 0.7488, 0.2503, 0.7487, 0.2377, 0.0001],
        [11, 0.7486, 0.2733, 0.7485, 0.2571, 0.0001],
        [12, 0.7484, 0.2959, 0.7484, 0.2739, 0.0001],
        [13, 0.7483, 0.3136, 0.7484, 0.3016, 0.0001],
        [14, 0.7481, 0.3323, 0.7485, 0.2416, 0.0001],
        [15, 0.7480, 0.3477, 0.7484, 0.3423, 0.0001],
        [16, 0.7479, 0.3643, 0.7482, 0.3004, 0.0001],
        [17, 0.7477, 0.3776, 0.7482, 0.3295, 0.0001],
        [18, 0.7476, 0.3901, 0.7481, 0.3372, 0.0001],
        [19, 0.7475, 0.4023, 0.7481, 0.3630, 0.0001],
        [20, 0.7475, 0.4122, 0.7481, 0.3466, 0.0001],
        [21, 0.7474, 0.4211, 0.7480, 0.3409, 0.0001],
        [22, 0.7473, 0.4316, 0.7483, 0.3777, 0.0001],
        [23, 0.7472, 0.4405, 0.7484, 0.3643, 0.0001],
        [24, 0.7471, 0.4496, 0.7480, 0.3735, 0.0001],
        [25, 0.7471, 0.4572, 0.7480, 0.3774, 0.0001],
        [26, 0.7470, 0.4649, 0.7480, 0.3482, 0.0001],
        [27, 0.7469, 0.4733, 0.7482, 0.3793, 0.0001],
        [28, 0.7469, 0.4805, 0.7480, 0.3738, 0.0001],
        [29, 0.7468, 0.4864, 0.7479, 0.3735, 0.0001],
        [30, 0.7468, 0.4941, 0.7482, 0.3949, 0.0001],
        [31, 0.7465, 0.5189, 0.7479, 0.3928, 1e-05],
        [32, 0.7465, 0.5229, 0.7479, 0.3910, 1e-05],
        [33, 0.7465, 0.5264, 0.7480, 0.3953, 1e-05],
        [34, 0.7464, 0.5298, 0.7480, 0.3965, 1e-05],
        [35, 0.7464, 0.5319, 0.7480, 0.3962, 1e-05],
        [36, 0.7464, 0.5341, 0.7480, 0.3945, 1e-05],
        [37, 0.7464, 0.5369, 0.7480, 0.3968, 1e-05],
        [38, 0.7464, 0.5384, 0.7480, 0.3979, 1e-05],
        [39, 0.7464, 0.5404, 0.7480, 0.3959, 1e-05],
        [40, 0.7463, 0.5421, 0.7480, 0.3954, 1e-05],
        [41, 0.7463, 0.5441, 0.7480, 0.4003, 1e-05],
        [42, 0.7463, 0.5454, 0.7480, 0.3995, 1e-05],
        [43, 0.7463, 0.5476, 0.7480, 0.4010, 1e-05],
        [44, 0.7463, 0.5481, 0.7480, 0.3997, 1e-05],
        [45, 0.7463, 0.5502, 0.7480, 0.4024, 1e-05],
        [46, 0.7463, 0.5516, 0.7480, 0.4001, 1e-05],
        [47, 0.7463, 0.5526, 0.7480, 0.4010, 1e-05],
        [48, 0.7463, 0.5538, 0.7481, 0.4013, 1e-05],
        [49, 0.7462, 0.5552, 0.7481, 0.3999, 1e-05],
    ]),
    0.4: np.array([
        [0, 0.8763, 0.1156, 0.8432, 0.1612, 0.0001],
        [1, 0.8143, 0.1673, 0.7926, 0.1617, 0.0001],
        [2, 0.7776, 0.1673, 0.7674, 0.1617, 0.0001],
        [3, 0.7614, 0.1673, 0.7590, 0.1617, 0.0001],
        [4, 0.7549, 0.1673, 0.7529, 0.1617, 0.0001],
        [5, 0.7519, 0.1673, 0.7509, 0.1617, 0.0001],
        [6, 0.7505, 0.1673, 0.7500, 0.1617, 0.0001],
        [7, 0.7498, 0.1683, 0.7501, 0.1691, 0.0001],
        [8, 0.7494, 0.1927, 0.7493, 0.2120, 0.0001],
        [9, 0.7491, 0.2188, 0.7490, 0.2128, 0.0001],
        [10, 0.7489, 0.2375, 0.7489, 0.1934, 0.0001],
        [11, 0.7487, 0.2538, 0.7487, 0.2437, 0.0001],
        [12, 0.7485, 0.2752, 0.7487, 0.2271, 0.0001],
        [13, 0.7484, 0.2965, 0.7485, 0.2590, 0.0001],
        [14, 0.7482, 0.3163, 0.7486, 0.3160, 0.0001],
        [15, 0.7481, 0.3333, 0.7484, 0.2788, 0.0001],
        [16, 0.7480, 0.3509, 0.7484, 0.2791, 0.0001],
        [17, 0.7479, 0.3630, 0.7482, 0.3222, 0.0001],
        [18, 0.7477, 0.3771, 0.7482, 0.3438, 0.0001],
        [19, 0.7476, 0.3890, 0.7492, 0.3449, 0.0001],
        [20, 0.7475, 0.4013, 0.7482, 0.3484, 0.0001],
        [21, 0.7474, 0.4124, 0.7481, 0.3570, 0.0001],
        [22, 0.7473, 0.4234, 0.7482, 0.3394, 0.0001],
        [23, 0.7473, 0.4319, 0.7480, 0.3691, 0.0001],
        [24, 0.7472, 0.4418, 0.7481, 0.3482, 0.0001],
        [25, 0.7471, 0.4519, 0.7480, 0.3649, 0.0001],
        [26, 0.7470, 0.4594, 0.7483, 0.3936, 0.0001],
        [27, 0.7470, 0.4683, 0.7491, 0.3571, 0.0001],
        [28, 0.7469, 0.4751, 0.7480, 0.3839, 0.0001],
        [29, 0.7468, 0.4830, 0.7481, 0.3933, 0.0001],
        [30, 0.7468, 0.4908, 0.7481, 0.4094, 0.0001],
        [31, 0.7465, 0.5163, 0.7479, 0.3982, 1e-05],
        [32, 0.7465, 0.5221, 0.7479, 0.4001, 1e-05],
        [33, 0.7465, 0.5257, 0.7480, 0.4085, 1e-05],
        [34, 0.7464, 0.5292, 0.7479, 0.4012, 1e-05],
        [35, 0.7464, 0.5326, 0.7479, 0.4052, 1e-05],
        [36, 0.7464, 0.5349, 0.7479, 0.4031, 1e-05],
        [37, 0.7464, 0.5375, 0.7479, 0.4024, 1e-05],
        [38, 0.7464, 0.5399, 0.7480, 0.4063, 1e-05],
        [39, 0.7463, 0.5419, 0.7479, 0.4063, 1e-05],
        [40, 0.7463, 0.5444, 0.7480, 0.4071, 1e-05],
        [41, 0.7463, 0.5460, 0.7479, 0.4041, 1e-05],
        [42, 0.7463, 0.5481, 0.7480, 0.4070, 1e-05],
        [43, 0.7463, 0.5498, 0.7480, 0.4086, 1e-05],
        [44, 0.7463, 0.5512, 0.7479, 0.4063, 1e-05],
        [45, 0.7462, 0.5528, 0.7480, 0.4080, 1e-05],
        [46, 0.7462, 0.5544, 0.7480, 0.4091, 1e-05],
        [47, 0.7462, 0.5554, 0.7479, 0.4058, 1e-05],
        [48, 0.7462, 0.5571, 0.7480, 0.4097, 1e-05],
        [49, 0.7462, 0.5585, 0.7480, 0.4090, 1e-05],
        ]),
    0.5: np.array([
        [0, 0.8577, 0.1414, 0.8067, 0.1642, 0.0001],
        [1, 0.7826, 0.1675, 0.7669, 0.1642, 0.0001],
        [2, 0.7596, 0.1675, 0.7551, 0.1642, 0.0001],
        [3, 0.7530, 0.1675, 0.7516, 0.1642, 0.0001],
        [4, 0.7507, 0.1687, 0.7502, 0.1674, 0.0001],
        [5, 0.7497, 0.1997, 0.7492, 0.1926, 0.0001],
        [6, 0.7492, 0.2306, 0.7489, 0.2265, 0.0001],
        [7, 0.7488, 0.2555, 0.7487, 0.2582, 0.0001],
        [8, 0.7486, 0.2752, 0.7486, 0.2565, 0.0001],
        [9, 0.7484, 0.2984, 0.7484, 0.3095, 0.0001],
        [10, 0.7482, 0.3227, 0.7484, 0.3422, 0.0001],
        [11, 0.7481, 0.3414, 0.7482, 0.3594, 0.0001],
        [12, 0.7479, 0.3627, 0.7482, 0.3742, 0.0001],
        [13, 0.7478, 0.3810, 0.7480, 0.3609, 0.0001],
        [14, 0.7476, 0.3983, 0.7481, 0.3649, 0.0001],
        [15, 0.7475, 0.4151, 0.7480, 0.3956, 0.0001],
        [16, 0.7474, 0.4295, 0.7479, 0.3545, 0.0001],
        [17, 0.7472, 0.4438, 0.7479, 0.3863, 0.0001],
        [18, 0.7471, 0.4585, 0.7478, 0.3983, 0.0001],
        [19, 0.7470, 0.4692, 0.7481, 0.4050, 0.0001],
        [20, 0.7469, 0.4807, 0.7478, 0.3930, 0.0001],
        [21, 0.7468, 0.4923, 0.7478, 0.4142, 0.0001],
        [22, 0.7468, 0.4997, 0.7483, 0.4194, 0.0001],
        [23, 0.7467, 0.5119, 0.7479, 0.4164, 0.0001],
        [24, 0.7466, 0.5198, 0.7479, 0.4162, 0.0001],
        [25, 0.7465, 0.5273, 0.7477, 0.4128, 0.0001],
        [26, 0.7465, 0.5344, 0.7479, 0.4324, 0.0001],
        [27, 0.7464, 0.5396, 0.7477, 0.4203, 0.0001],
        [28, 0.7463, 0.5498, 0.7478, 0.4376, 0.0001],
        [29, 0.7463, 0.5575, 0.7476, 0.4229, 0.0001],
        [30, 0.7462, 0.5640, 0.7478, 0.4326, 0.0001],
        [31, 0.7460, 0.5868, 0.7477, 0.4469, 1e-05],
        [32, 0.7460, 0.5927, 0.7477, 0.4471, 1e-05],
        [33, 0.7459, 0.5963, 0.7477, 0.4459, 1e-05],
        [34, 0.7459, 0.5991, 0.7477, 0.4477, 1e-05],
        [35, 0.7459, 0.6019, 0.7478, 0.4516, 1e-05],
        [36, 0.7459, 0.6043, 0.7477, 0.4475, 1e-05],
        [37, 0.7458, 0.6064, 0.7478, 0.4510, 1e-05],
        [38, 0.7458, 0.6089, 0.7477, 0.4489, 1e-05],
        [39, 0.7458, 0.6105, 0.7478, 0.4523, 1e-05],
        [40, 0.7458, 0.6124, 0.7477, 0.4512, 1e-05],
        [41, 0.7458, 0.6141, 0.7477, 0.4509, 1e-05],
        [42, 0.7458, 0.6154, 0.7477, 0.4534, 1e-05],
        [43, 0.7458, 0.6168, 0.7477, 0.4522, 1e-05],
        [44, 0.7458, 0.6180, 0.7477, 0.4486, 1e-05],
        [45, 0.7457, 0.6194, 0.7477, 0.4515, 1e-05],
        [46, 0.7457, 0.6208, 0.7478, 0.4545, 1e-05],
        [47, 0.7457, 0.6221, 0.7477, 0.4547, 1e-05],
        [48, 0.7457, 0.6230, 0.7477, 0.4518, 1e-05],
        [49, 0.7457, 0.6242, 0.7477, 0.4554, 1e-05],
        ]),
    0.6: np.array([
        [0, 0.8410, 0.1336, 0.7968, 0.1672, 0.0001],
        [1, 0.7774, 0.1674, 0.7620, 0.1672, 0.0001],
        [2, 0.7581, 0.1674, 0.7542, 0.1672, 0.0001],
        [3, 0.7526, 0.1674, 0.7515, 0.1672, 0.0001],
        [4, 0.7506, 0.1674, 0.7505, 0.1672, 0.0001],
        [5, 0.7498, 0.1674, 0.7503, 0.1673, 0.0001],
        [6, 0.7493, 0.1778, 0.7490, 0.2218, 0.0001],
        [7, 0.7490, 0.2253, 0.7490, 0.2442, 0.0001],
        [8, 0.7488, 0.2446, 0.7488, 0.2394, 0.0001],
        [9, 0.7486, 0.2618, 0.7487, 0.2366, 0.0001],
        [10, 0.7485, 0.2766, 0.7485, 0.2918, 0.0001],
        [11, 0.7484, 0.2946, 0.7485, 0.3143, 0.0001],
        [12, 0.7482, 0.3176, 0.7483, 0.3237, 0.0001],
        [13, 0.7480, 0.3412, 0.7483, 0.2848, 0.0001],
        [14, 0.7479, 0.3567, 0.7482, 0.3344, 0.0001],
        [15, 0.7478, 0.3768, 0.7482, 0.3621, 0.0001],
        [16, 0.7476, 0.3925, 0.7480, 0.3770, 0.0001],
        [17, 0.7475, 0.4097, 0.7480, 0.3594, 0.0001],
        [18, 0.7474, 0.4233, 0.7479, 0.3673, 0.0001],
        [19, 0.7473, 0.4366, 0.7480, 0.3971, 0.0001],
        [20, 0.7472, 0.4488, 0.7479, 0.3890, 0.0001],
        [21, 0.7471, 0.4614, 0.7479, 0.3900, 0.0001],
        [22, 0.7470, 0.4712, 0.7480, 0.4113, 0.0001],
        [23, 0.7469, 0.4825, 0.7479, 0.3920, 0.0001],
        [24, 0.7468, 0.4912, 0.7480, 0.4164, 0.0001],
        [25, 0.7467, 0.5031, 0.7479, 0.4121, 0.0001],
        [26, 0.7466, 0.5114, 0.7478, 0.4132, 0.0001],
        [27, 0.7466, 0.5198, 0.7478, 0.4010, 0.0001],
        [28, 0.7465, 0.5282, 0.7478, 0.4244, 0.0001],
        [29, 0.7464, 0.5361, 0.7478, 0.4126, 0.0001],
        [30, 0.7464, 0.5416, 0.7478, 0.4145, 0.0001],
        [31, 0.7462, 0.5664, 0.7478, 0.4366, 1e-05],
        [32, 0.7461, 0.5710, 0.7478, 0.4388, 1e-05],
        [33, 0.7461, 0.5745, 0.7478, 0.4339, 1e-05],
        [34, 0.7461, 0.5783, 0.7478, 0.4372, 1e-05],
        [35, 0.7460, 0.5807, 0.7478, 0.4366, 1e-05],
        [36, 0.7460, 0.5827, 0.7478, 0.4410, 1e-05],
        [37, 0.7460, 0.5858, 0.7478, 0.4407, 1e-05],
        [38, 0.7460, 0.5878, 0.7478, 0.4406, 1e-05],
        [39, 0.7460, 0.5899, 0.7478, 0.4430, 1e-05],
        [40, 0.7460, 0.5920, 0.7478, 0.4448, 1e-05],
        [41, 0.7459, 0.5938, 0.7478, 0.4442, 1e-05],
        [42, 0.7459, 0.5955, 0.7478, 0.4448, 1e-05],
        [43, 0.7459, 0.5971, 0.7478, 0.4468, 1e-05],
        [44, 0.7459, 0.5987, 0.7478, 0.4441, 1e-05],
        [45, 0.7459, 0.5999, 0.7478, 0.4439, 1e-05],
        [46, 0.7459, 0.6012, 0.7478, 0.4402, 1e-05],
        [47, 0.7459, 0.6024, 0.7478, 0.4459, 1e-05],
        [48, 0.7459, 0.6039, 0.7479, 0.4449, 1e-05],
        [49, 0.7459, 0.6049, 0.7479, 0.4450, 1e-05],
        ]),
    0.7: np.array([
        [0, 0.8462, 0.1440, 0.8018, 0.1652, 0.0001],
        [1, 0.7827, 0.1685, 0.7675, 0.1652, 0.0001],
        [2, 0.7608, 0.1685, 0.7557, 0.1652, 0.0001],
        [3, 0.7537, 0.1697, 0.7515, 0.1714, 0.0001],
        [4, 0.7510, 0.2003, 0.7502, 0.2184, 0.0001],
        [5, 0.7497, 0.2349, 0.7492, 0.2518, 0.0001],
        [6, 0.7490, 0.2587, 0.7488, 0.2627, 0.0001],
        [7, 0.7486, 0.2854, 0.7484, 0.2937, 0.0001],
        [8, 0.7484, 0.3088, 0.7484, 0.3381, 0.0001],
        [9, 0.7482, 0.3321, 0.7482, 0.3124, 0.0001],
        [10, 0.7480, 0.3501, 0.7481, 0.3351, 0.0001],
        [11, 0.7478, 0.3729, 0.7480, 0.3345, 0.0001],
        [12, 0.7476, 0.3947, 0.7479, 0.3652, 0.0001],
        [13, 0.7475, 0.4136, 0.7479, 0.4069, 0.0001],
        [14, 0.7473, 0.4352, 0.7478, 0.4007, 0.0001],
        [15, 0.7472, 0.4531, 0.7476, 0.3925, 0.0001],
        [16, 0.7470, 0.4687, 0.7476, 0.4107, 0.0001],
        [17, 0.7469, 0.4818, 0.7476, 0.4392, 0.0001],
        [18, 0.7468, 0.4956, 0.7475, 0.4200, 0.0001],
        [19, 0.7467, 0.5078, 0.7477, 0.4448, 0.0001],
        [20, 0.7466, 0.5211, 0.7476, 0.4045, 0.0001],
        [21, 0.7465, 0.5340, 0.7474, 0.4342, 0.0001],
        [22, 0.7464, 0.5451, 0.7474, 0.4335, 0.0001],
        [23, 0.7463, 0.5564, 0.7474, 0.4511, 0.0001],
        [24, 0.7462, 0.5672, 0.7473, 0.4440, 0.0001],
        [25, 0.7461, 0.5783, 0.7474, 0.4746, 0.0001],
        [26, 0.7460, 0.5875, 0.7474, 0.4803, 0.0001],
        [27, 0.7460, 0.5968, 0.7476, 0.4830, 0.0001],
        [28, 0.7459, 0.6055, 0.7472, 0.4442, 0.0001],
        [29, 0.7458, 0.6165, 0.7473, 0.4905, 0.0001],
        [30, 0.7458, 0.6230, 0.7476, 0.4887, 0.0001],
        [31, 0.7455, 0.6515, 0.7472, 0.4939, 1e-05],
        [32, 0.7455, 0.6572, 0.7472, 0.5000, 1e-05],
        [33, 0.7454, 0.6619, 0.7472, 0.5015, 1e-05],
        [34, 0.7454, 0.6660, 0.7473, 0.5011, 1e-05],
        [35, 0.7454, 0.6692, 0.7472, 0.5030, 1e-05],
        [36, 0.7453, 0.6716, 0.7472, 0.5020, 1e-05],
        [37, 0.7453, 0.6746, 0.7472, 0.5045, 1e-05],
        [38, 0.7453, 0.6770, 0.7472, 0.5026, 1e-05],
        [39, 0.7453, 0.6794, 0.7472, 0.5036, 1e-05],
        [40, 0.7453, 0.6812, 0.7473, 0.5080, 1e-05],
        [41, 0.7453, 0.6832, 0.7472, 0.5072, 1e-05],
        [42, 0.7452, 0.6849, 0.7472, 0.5090, 1e-05],
        [43, 0.7452, 0.6866, 0.7472, 0.5092, 1e-05],
        [44, 0.7452, 0.6877, 0.7472, 0.5108, 1e-05],
        [45, 0.7452, 0.6898, 0.7472, 0.5058, 1e-05],
        [46, 0.7452, 0.6911, 0.7472, 0.5104, 1e-05],
        [47, 0.7452, 0.6927, 0.7473, 0.5126, 1e-05],
        [48, 0.7452, 0.6938, 0.7472, 0.5113, 1e-05],
        [49, 0.7452, 0.6949, 0.7473, 0.5111, 1e-05],
    ]),
    0.8: np.array([
        [0, 0.8310, 0.1425, 0.7908, 0.1712, 0.0001],
        [1, 0.7728, 0.1681, 0.7611, 0.1712, 0.0001],
        [2, 0.7565, 0.1681, 0.7533, 0.1712, 0.0001],
        [3, 0.7519, 0.1691, 0.7506, 0.1753, 0.0001],
        [4, 0.7502, 0.1894, 0.7499, 0.1712, 0.0001],
        [5, 0.7495, 0.2113, 0.7493, 0.2187, 0.0001],
        [6, 0.7491, 0.2255, 0.7490, 0.2533, 0.0001],
        [7, 0.7489, 0.2378, 0.7488, 0.2462, 0.0001],
        [8, 0.7487, 0.2500, 0.7488, 0.2660, 0.0001],
        [9, 0.7486, 0.2616, 0.7487, 0.2440, 0.0001],
        [10, 0.7485, 0.2712, 0.7486, 0.2811, 0.0001],
        [11, 0.7484, 0.2836, 0.7485, 0.2892, 0.0001],
        [12, 0.7483, 0.3015, 0.7484, 0.2992, 0.0001],
        [13, 0.7481, 0.3216, 0.7483, 0.3147, 0.0001],
        [14, 0.7480, 0.3405, 0.7482, 0.3307, 0.0001],
        [15, 0.7479, 0.3607, 0.7481, 0.3571, 0.0001],
        [16, 0.7477, 0.3779, 0.7480, 0.3567, 0.0001],
        [17, 0.7476, 0.3932, 0.7480, 0.3706, 0.0001],
        [18, 0.7475, 0.4084, 0.7484, 0.3909, 0.0001],
        [19, 0.7474, 0.4220, 0.7478, 0.3931, 0.0001],
        [20, 0.7473, 0.4328, 0.7479, 0.3968, 0.0001],
        [21, 0.7472, 0.4454, 0.7479, 0.4184, 0.0001],
        [22, 0.7471, 0.4568, 0.7482, 0.4035, 0.0001],
        [23, 0.7470, 0.4670, 0.7477, 0.4261, 0.0001],
        [24, 0.7469, 0.4792, 0.7477, 0.4182, 0.0001],
        [25, 0.7468, 0.4892, 0.7477, 0.4090, 0.0001],
        [26, 0.7468, 0.4983, 0.7476, 0.4161, 0.0001],
        [27, 0.7467, 0.5090, 0.7477, 0.4364, 0.0001],
        [28, 0.7466, 0.5184, 0.7476, 0.4317, 0.0001],
        [29, 0.7465, 0.5261, 0.7477, 0.4360, 0.0001],
        [30, 0.7465, 0.5344, 0.7478, 0.4444, 0.0001],
        [31, 0.7462, 0.5626, 0.7476, 0.4454, 1e-05],
        [32, 0.7462, 0.5691, 0.7476, 0.4477, 1e-05],
        [33, 0.7461, 0.5739, 0.7476, 0.4447, 1e-05],
        [34, 0.7461, 0.5774, 0.7476, 0.4498, 1e-05],
        [35, 0.7461, 0.5802, 0.7476, 0.4513, 1e-05],
        [36, 0.7460, 0.5836, 0.7476, 0.4527, 1e-05],
        [37, 0.7460, 0.5861, 0.7476, 0.4486, 1e-05],
        [38, 0.7460, 0.5889, 0.7477, 0.4524, 1e-05],
        [39, 0.7460, 0.5911, 0.7476, 0.4524, 1e-05],
        [40, 0.7460, 0.5931, 0.7476, 0.4530, 1e-05],
        [41, 0.7459, 0.5953, 0.7476, 0.4524, 1e-05],
        [42, 0.7459, 0.5971, 0.7476, 0.4532, 1e-05],
        [43, 0.7459, 0.5991, 0.7476, 0.4514, 1e-05],
        [44, 0.7459, 0.6011, 0.7477, 0.4518, 1e-05],
        [45, 0.7459, 0.6031, 0.7476, 0.4540, 1e-05],
        [46, 0.7459, 0.6047, 0.7477, 0.4528, 1e-05],
        [47, 0.7459, 0.6061, 0.7476, 0.4501, 1e-05],
        [48, 0.7458, 0.6076, 0.7476, 0.4556, 1e-05],
        [49, 0.7458, 0.6093, 0.7477, 0.4544, 1e-05],
        ]),
    0.9: np.array([
        [0, 0.8868, 0.1463, 0.8480, 0.1667, 0.0001],
        [1, 0.8121, 0.1666, 0.7863, 0.1667, 0.0001],
        [2, 0.7732, 0.1666, 0.7639, 0.1667, 0.0001],
        [3, 0.7590, 0.1666, 0.7553, 0.1667, 0.0001],
        [4, 0.7534, 0.1750, 0.7518, 0.1709, 0.0001],
        [5, 0.7510, 0.2153, 0.7502, 0.1989, 0.0001],
        [6, 0.7498, 0.2389, 0.7492, 0.2254, 0.0001],
        [7, 0.7491, 0.2607, 0.7499, 0.3090, 0.0001],
        [8, 0.7487, 0.2852, 0.7485, 0.2927, 0.0001],
        [9, 0.7484, 0.3068, 0.7484, 0.3053, 0.0001],
        [10, 0.7482, 0.3229, 0.7483, 0.3166, 0.0001],
        [11, 0.7481, 0.3405, 0.7484, 0.2719, 0.0001],
        [12, 0.7479, 0.3576, 0.7483, 0.2804, 0.0001],
        [13, 0.7478, 0.3695, 0.7481, 0.3394, 0.0001],
        [14, 0.7477, 0.3837, 0.7480, 0.3540, 0.0001],
        [15, 0.7476, 0.3982, 0.7485, 0.3781, 0.0001],
        [16, 0.7475, 0.4143, 0.7480, 0.3400, 0.0001],
        [17, 0.7474, 0.4278, 0.7479, 0.3697, 0.0001],
        [18, 0.7472, 0.4424, 0.7479, 0.3737, 0.0001],
        [19, 0.7471, 0.4570, 0.7482, 0.4032, 0.0001],
        [20, 0.7470, 0.4707, 0.7478, 0.3970, 0.0001],
        [21, 0.7469, 0.4831, 0.7487, 0.3769, 0.0001],
        [22, 0.7468, 0.4941, 0.7480, 0.4135, 0.0001],
        [23, 0.7467, 0.5050, 0.7478, 0.3924, 0.0001],
        [24, 0.7466, 0.5160, 0.7478, 0.3802, 0.0001],
        [25, 0.7465, 0.5250, 0.7477, 0.4024, 0.0001],
        [26, 0.7465, 0.5343, 0.7477, 0.4147, 0.0001],
        [27, 0.7464, 0.5437, 0.7478, 0.4277, 0.0001],
        [28, 0.7463, 0.5510, 0.7477, 0.3923, 0.0001],
        [29, 0.7463, 0.5587, 0.7481, 0.4277, 0.0001],
        [30, 0.7462, 0.5662, 0.7478, 0.4383, 0.0001],
        [31, 0.7460, 0.5934, 0.7477, 0.4416, 1e-05],
        [32, 0.7459, 0.6006, 0.7478, 0.4424, 1e-05],
        [33, 0.7459, 0.6052, 0.7477, 0.4437, 1e-05],
        [34, 0.7458, 0.6086, 0.7478, 0.4451, 1e-05],
        [35, 0.7458, 0.6117, 0.7477, 0.4475, 1e-05],
        [36, 0.7458, 0.6142, 0.7478, 0.4473, 1e-05],
        [37, 0.7458, 0.6171, 0.7478, 0.4426, 1e-05],
        [38, 0.7457, 0.6197, 0.7478, 0.4447, 1e-05],
        [39, 0.7457, 0.6216, 0.7478, 0.4484, 1e-05],
        [40, 0.7457, 0.6238, 0.7479, 0.4491, 1e-05],
        [41, 0.7457, 0.6256, 0.7478, 0.4483, 1e-05],
        [42, 0.7457, 0.6274, 0.7478, 0.4470, 1e-05],
        [43, 0.7457, 0.6291, 0.7478, 0.4489, 1e-05],
        [44, 0.7457, 0.6308, 0.7478, 0.4499, 1e-05],
        [45, 0.7456, 0.6319, 0.7478, 0.4519, 1e-05],
        [46, 0.7456, 0.6337, 0.7478, 0.4498, 1e-05],
        [47, 0.7456, 0.6352, 0.7478, 0.4484, 1e-05],
        [48, 0.7456, 0.6367, 0.7478, 0.4516, 1e-05],
        [49, 0.7456, 0.6384, 0.7478, 0.4515, 1e-05],
    ])
    }

if __name__ == "__main__":

    plt.ion()

    best_train_iou = []
    best_val_iou = []

    best_training_loss = []
    best_val_loss = []

    tau_arr = []

    for key, value in sorted(tau_results.items()):

        validation_iou_arr = value[:, 4]
        train_iou_arr = value[:, 2]

        validation_loss_arr = value[:, 3]
        train_loss_arr = value[:, 1]

        tau_arr.append(key)
        best_train_iou.append(np.max(train_iou_arr))
        best_val_iou.append(np.max(validation_iou_arr))
        best_training_loss.append(np.min(train_loss_arr))
        best_val_loss.append(np.min(validation_loss_arr))

    # Plot best Iou vs Tau
    plt.figure()
    plt.plot(tau_arr, best_train_iou, label='train_iou', marker='x', markersize=10)
    plt.plot(tau_arr, best_val_iou, label='val_iou', marker='x', markersize=10)
    plt.xlabel("a,b=")
    plt.ylabel("IoU")
    plt.legend()

    # Plot lowest loss vs Tau
    plt.figure()
    plt.plot(tau_arr, best_training_loss, label='train_loss', marker='x', markersize=10)
    plt.plot(tau_arr, best_val_loss, label='val_loss', marker='x', markersize=10)
    plt.xlabel("a,b=")
    plt.ylabel("Loss")
    plt.legend()

    # Plot Individual Loss/Iou Curves
    num_keys = len(tau_results.keys())
    single_dim = np.ceil(np.sqrt(num_keys))

    fig1 = plt.figure()
    fig2 = plt.figure()

    for k_idx, key in enumerate(sorted(tau_results.keys())):
        ax1 = fig1.add_subplot(single_dim, single_dim, k_idx + 1)
        ax2 = fig2.add_subplot(single_dim, single_dim, k_idx + 1)

        ax1.plot(
            tau_results[key][:, 0],
            tau_results[key][:, 2],
            label='train_iou')

        ax1.plot(
            tau_results[key][:, 0],
            tau_results[key][:, 4],
            label='val_iou')

        ax1.set_title("rf_size={}".format(key))

        ax2.plot(
            tau_results[key][:, 0],
            tau_results[key][:, 1],
            label='train_loss')

        ax2.plot(
            tau_results[key][:, 0],
            tau_results[key][:, 3],
            label='val_iou_loss')

        # ax2.set_yscale('log')

        ax1.set_title("a,b ={}".format(key))
        ax2.set_title("a,b ={}".format(key))

    ax1.legend()
    ax2.legend()

    fig1.suptitle("Iou Vs Tau (a, b) Individual Curves")
    fig2.suptitle("Loss Vs Tau (a,b) Individual Curves")

    # ----------------------------------------------------------------------
    import pdb
    pdb.set_trace()
