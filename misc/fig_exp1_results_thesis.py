# -------------------------------------------------------------------------------------------------
#  Similar to fig_exp_1_results_v3, but contains more results.
# -------------------------------------------------------------------------------------------------
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rcParams.update({
    'font.size': 18, 'lines.linewidth': 3,
    'lines.markersize': 10,
    'lines.markeredgewidth': 3
})

INVALID_RESULTS = -1000

# -------------------------------------------------------------------------------------------------
# Measured Neurophysiological Results
# -------------------------------------------------------------------------------------------------
monkey_ma = {
    'c_len': np.array([1, 3, 5, 7, 9]),
    'c_len_results': np.array([1.05, 1.41, 1.85, 2.09, 2.26]),
    'rcd': np.array([1.0, 1.2, 1.4, 1.6, 1.9]),
    'spacing_results': np.array([1.97, 1.69, 1.29, 1.17, 1.16])
}

monkey_mb = {
    'c_len': np.array([1, 3, 5, 7, 9]),
    'c_len_results': np.array([1.05, 1.69, 2.14, 2.41, 2.72]),
    'rcd': np.array([1.0, 1.2, 1.4, 1.6, 1.9]),
    'spacing_results': np.array([2.24, 2.19, 1.7, 1.23, 0.98])
}

# Weighted avg results (MA=30 neurons, MB=24 neurons)
neuro_c_len_results = (30 / 54. * monkey_ma['c_len_results']) + (24 / 50. * monkey_mb['c_len_results'])
neuro_space_results = (30 / 54. * monkey_ma['spacing_results']) + (24 / 50. * monkey_mb['spacing_results'])

# -------------------------------------------------------------------------------------------------
# Simulation Results
# -------------------------------------------------------------------------------------------------

# Control -----------------------------------------------------------------------------------------
# ./results/contour_dataset_multiple_runs/control_mp_100_epochs
control_run_1 = {
    'train_acc': 0.6465,
    'validation_acc': 0.6609,
    'no_optimal_stimulus_neurons': np.array([
        0 ,  2,  3,  4,  9, 10, 11, 13, 21, 25,
        32, 33, 34, 35, 38, 45, 47, 48, 50, 51,
        52, 54, 59, 60, 61, 62]),
    'c_len_iou_vs_len_test': np.array([0.9748, 0.6638, 0.8427, 0.8681, 0.8391]),
    'c_len_iou_vs_len_validation': np.array(
        [0.9125751909939936, 0.5633319002196003, 0.6359540986544744, 0.6461498774885854, 0.6245467955159484]),
    'c_len_noise_resp': np.array([
        -1000.   ,     0.   , -1000.   , -1000.   , -1000.   ,     0.   ,     0.001,     0.   ,     0.249, -1000.   ,
        -1000.   , -1000.   ,     0.003, -1000.   ,     0.002,     0.   ,     0.001,     0.   ,     0.   ,     0.   ,
            0.   , -1000.   ,     0.   ,     0.   ,     0.001, -1000.   ,     0.   ,     0.   ,     0.   ,     0.001,
            0.542,     0.   , -1000.   , -1000.   , -1000.   , -1000.   ,     0.   ,     0.   , -1000.   ,     0.005,
            0.   ,     0.249,     0.   ,     0.   ,     0.   , -1000.   ,     0.016, -1000.   , -1000.   ,     0.   ,
        -1000.   , -1000.   , -1000.   ,     0.   , -1000.   ,     0.003,     0.053,     0.   ,     0.   , -1000.   ,
        -1000.   , -1000.   , -1000.   ,     0.142]),

    'c_len_mean_gains': np.array([
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.984,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     1.   ,      0.027,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.997,      1.591,    157.03 ,    248.312,    277.846],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.996,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.991,      0.   ,      0.942,      1.259,      0.613],
        [     0.   ,      0.   ,      0.   ,    811.975,    941.13 ],
        [     0.   ,      0.   ,  33463.182,  77007.088, 109758.581],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.976,      0.   ,     32.51 ,    368.317,   1241.646],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,     72.192,      0.   ,     94.554,     41.846],
        [     0.993,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,  28027.82 ,  52128.713,  52538.277,  51611.602],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,  34248.722,  48508.177,  47849.998,  47313.689],
        [     0.989,    112.435,    322.154,    392.614,    402.286],
        [     1.   ,      0.374,      0.286,      0.25 ,      0.183],
        [     0.978,     35.77 ,     82.157,    147.737,    148.59 ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.998,     36.471,     26.597,     26.204,     23.79 ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     1.   ,      3.085,      3.335,      3.559,      3.524],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,    554.112,   2089.333,   2129.384,   2428.942],
        [     0.   ,  64760.051,  84050.256,  82701.017,  86635.663],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.999,      0.041,      0.224,      0.103,      0.139],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.339,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,   9561.38 ,  55192.824,  58709.946,  58135.936],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.997,     39.568,     57.385,     50.89 ,     74.984],
        [     1.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      1.268,    710.914,   4872.219,   5043.814],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     1.   ,      2.216,      3.26 ,      4.175,      4.28 ]]),
    'spacing_noise_resp': np.array([
        -1000.   ,     0.   , -1000.   , -1000.   , -1000.   ,     0.   ,     0.   ,     0.   ,     0.226, -1000.   ,
        -1000.   , -1000.   ,     0.001, -1000.   ,     0.002,     0.   ,     0.   ,     0.   ,     0.   ,     0.   ,
            0.   , -1000.   ,     0.   ,     0.   ,     0.   , -1000.   ,     0.   ,     0.   ,     0.   ,     0.   ,
            0.535,     0.   , -1000.   , -1000.   , -1000.   , -1000.   ,     0.   ,     0.   , -1000.   ,     0.006,
            0.   ,     0.261,     0.   ,     0.   ,     0.   , -1000.   ,     0.019, -1000.   , -1000.   ,     0.   ,
        -1000.   , -1000.   , -1000.   ,     0.   , -1000.   ,     0.008,     0.042,     0.   ,     0.   , -1000.   ,
        -1000.   , -1000.   , -1000.   ,     0.15 ]),
    'spacing_mean_gains': np.array([
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.   ,     0.   ,     0.   ,    21.046,   216.454,  2697.604,   307.434,   286.477],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.   ,     0.   ,   114.881,  6342.434, 14144.12 , 23153.366, 24008.631, 24573.74 ],
       [    0.   ,     0.   ,    20.469,  3340.559,  6209.212, 15073.7  , 11143.99 , 17040.981],
       [    0.   ,  1847.788,  3571.465, 10845.932,  8239.649, 19777.975, 24842.823, 33028.898],
       [    0.   ,     0.   ,     0.   ,     0.   ,     0.028,     0.421,     0.672,     1.006],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [  836.036,   373.296,   159.731,   159.224,     7.702,    27.881,   129.357,   139.504],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,     0.112,     2.551,    19.723],
       [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,    86.516,   101.804,   241.624],
       [   53.747,  1459.454,   612.507,  1772.398,  1648.435,   970.229,   944.006,  1504.681],
       [ 1149.07 ,  2949.493, 12913.138, 14130.124, 12403.146, 14979.316, 13453.182, 24238.292],
       [ 1726.149,  1065.311,   623.334,     9.837,    64.056,    27.267,   308.835,   354.984],
       [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,     0.   ,     0.   ,     0.   ],
       [17057.721, 21191.012, 13198.856,    98.967,   221.317,   717.52 ,  8779.52 ,  6781.769],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.   ,     0.   ,   153.792,   220.278,   301.294,   945.47 ,   154.179,    39.68 ],
       [    0.   ,  1537.13 ,  3485.427,  3445.666,  7348.615,  6383.912,  4697.635,  9629.555],
       [    0.   ,     0.   ,     6.022,    31.873,    80.005,   178.284,   136.322,   131.851],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [ 2606.996,  1586.88 ,   724.024,  1505.219,   811.748,   625.36 ,   874.085,  1897.45 ],
       [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,    20.132,   186.379,   175.538],
       [48227.151, 44477.14 ,  5561.058,  5207.398,  8350.365,   421.41 ,     0.   ,     0.   ],
       [38038.692, 29949.35 ,  3253.2  ,  6033.863,   670.899,  2218.158,   839.551,  1795.331],
       [    0.23 ,     0.352,     0.151,     0.326,     0.365,     0.457,     0.613,     0.625],
       [ 5839.266,  1965.88 ,  8779.613, 15379.866,  6847.111, 11164.276,  9332.722, 12386.772],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [  282.509,   112.601,   170.358,  2126.631,  6854.084, 19310.167, 22407.226, 33289.653],
       [    0.   ,     0.   ,     0.   ,     0.   ,  6124.274, 13991.188, 12531.403, 11372.603],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [   19.358,    15.398,     9.939,     2.496,     4.781,    22.813,    19.557,    39.73 ],
       [    0.   ,     0.   ,     0.   ,    14.005,   627.098,  3830.4  ,  7926.43 , 12334.645],
       [    3.353,     2.477,     1.583,     1.386,     0.895,     0.957,     0.851,     0.777],
       [    0.   ,     0.   ,     0.   ,   354.695,  1550.31 ,  9646.977, 10793.922, 18667.954],
       [ 1702.765,  7724.795,   205.859,   249.81 ,    56.921,     7.424,     0.   ,     0.   ],
       [83489.447, 45897.197, 18853.625, 21915.074,  4847.881,  6193.837,  3195.336,  4943.696],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.105,     1.121,     3.654,     6.126,     8.874,    11.66 ,     8.738,     6.089],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.   ,     0.   ,     0.   ,     0.   ,  1281.285,  5547.252, 12336.85 , 16734.777],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [59288.318, 37746.956, 44434.361, 54720.77 , 54948.166, 63572.818, 60457.606, 54806.568],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [   23.468,    26.249,    17.98 ,     6.706,    10.435,     7.393,    13.671,    22.026],
       [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,     0.21 ,     1.467,     2.533],
       [ 5160.531, 25355.267, 22450.15 ,  5850.091,  6556.822, 17809.897, 29817.757, 31687.227],
       [    0.   ,     0.   ,     0.   ,    65.193,  4964.603, 13949.671, 18165.39 , 21988.835],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    3.941,     2.977,     3.038,     2.927,     4.111,     3.596,     4.192,     4.07 ]])
}

control_run_2 = {
    'train_acc': 0.7333,
    'validation_acc': 0.7548,
    'no_optimal_stimulus_neurons': np.array([
         1,  3,  4,  5,  6,  7,  9, 11, 15, 18,
        24, 26, 27, 33, 34, 36, 39, 45, 46, 47,
        48, 50, 54, 55, 56, 60, 61]),
    'c_len_iou_vs_len_test': np.array([0.9760, 0.6785, 0.8678, 0.8994, 0.8939]),
    'c_len_iou_vs_len_validation': np.array([0.9250627029618954, 0.6834022638357965, 0.7449386386708283, 0.7844760242242501, 0.7764944069799867]),
    'c_len_noise_resp': np.array([
            0.   , -1000.   ,     0.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ,     0.1  , -1000.   ,
            0.   , -1000.   ,     0.   ,     0.   ,     0.   , -1000.   ,     0.   ,     0.   , -1000.   ,     0.003,
            0.004,     0.   ,     0.   ,     0.002, -1000.   ,     0.003, -1000.   , -1000.   ,     0.   ,     0.   ,
            0.171,     0.   ,     0.248, -1000.   , -1000.   ,     0.003, -1000.   ,     0.   ,     0.29 , -1000.   ,
            0.   ,     0.001,     0.   ,     0.001,     0.042, -1000.   , -1000.   , -1000.   , -1000.   ,     0.   ,
        -1000.   ,     0.004,     0.097,     0.003, -1000.   , -1000.   , -1000.   ,     0.   ,     0.   ,     0.002,
        -1000.   , -1000.   ,     0.   ,     0.   ]),
    'c_len_mean_gains': np.array([
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     1.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      0.   ,    119.221,      0.   ,      0.   ],
        [     0.   ,     97.951,   2474.735,  22707.725,  28839.859],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      0.   ,   4520.544,  27297.609,  41955.802],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.997,      2.053,     34.504,    116.687,    146.263],
        [     0.997,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.994,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.997,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,    329.335,    390.545,    452.949],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     1.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     1.   ,      0.041,      0.005,      0.008,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.997,     11.583,     35.729,     50.515,     52.496],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,  21092.258,  91617.438, 135849.864, 151823.399],
        [     1.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.989,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      0.   ,      0.   ,    508.819,    349.813],
        [     0.991,      6.93 ,    258.905,    567.678,    615.3  ],
        [     1.   ,      6.231,     11.821,     11.808,     11.96 ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,     40.539,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.998,      0.   ,      0.   ,      0.   ,      0.421],
        [     1.   ,      2.369,      2.763,      2.964,      2.555],
        [     0.997,     24.595,     49.278,     56.124,     54.233],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,  92266.001, 144025.048, 144842.233, 145882.847],
        [     0.995,     63.859,     33.953,     27.4  ,     33.936],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ]]),
    'spacing_noise_resp': np.array([
            0.   , -1000.   ,     0.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ,     0.106, -1000.   ,
            0.   , -1000.   ,     0.   ,     0.   ,     0.   , -1000.   ,     0.   ,     0.   , -1000.   ,     0.005,
            0.008,     0.   ,     0.   ,     0.002, -1000.   ,     0.005, -1000.   , -1000.   ,     0.   ,     0.   ,
            0.151,     0.   ,     0.244, -1000.   , -1000.   ,     0.003, -1000.   ,     0.   ,     0.304, -1000.   ,
            0.   ,     0.001,     0.   ,     0.   ,     0.037, -1000.   , -1000.   , -1000.   , -1000.   ,     0.   ,
        -1000.   ,     0.   ,     0.063,     0.003, -1000.   , -1000.   , -1000.   ,     0.   ,     0.   ,     0.005,
        -1000.   , -1000.   ,     0.002,     0.   ]),
    'spacing_mean_gains': np.array([
        [     0.   ,      0.   ,    129.06 ,   2266.563,  12114.942,   8376.547,  10639.908,  14056.522],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      2.711,    854.611,   2795.237,  11127.781,  19439.47 ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.014,      0.473,      0.84 ,      1.135],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,     51.066,   7603.281,  15199.988,  16381.136,  16421.671,  16229.799],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,    172.82 ,     84.072,   1005.179,    828.726,   3863.609,   2479.5  ,   4399.1  ],
        [     0.   ,    219.989,    735.939,    136.868,      0.   ,    228.714,    351.515,    702.767],
        [ 23543.913,  13973.611,  26367.655,  24664.919,  22202.16 ,  21537.948,  18461.512,  18315.308],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ,      0.   ,     51.506,    624.105],
        [  4755.502,   4747.011,    424.036,    444.363,    267.846,   1797.   ,   2162.316,   3274.97 ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [    64.85 ,     58.529,     69.816,     69.727,     84.789,     72.728,     58.1  ,     66.33 ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ,      0.007,      0.368,      0.614],
        [     0.   ,      0.   ,      0.   ,      0.   ,      5.17 ,   8156.47 ,   6569.177,   8535.594],
        [     0.   ,      0.   ,      0.   ,      0.   ,     98.573,     88.214,    626.85 ,    458.207],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.07 ,      2.622,     30.701,     73.382],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.087,      0.239,      0.357,      1.813,      1.493],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [   676.762,    686.618,   3262.874,  12344.955,  21957.582,  44642.67 ,  50079.095,  57250.654],
        [     0.   ,      0.   ,      0.   ,     12.614,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      0.024,      0.087,      0.055,      0.298,      0.345,      0.606,      1.01 ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ,      0.   ,    255.508,     45.069],
        [     0.001,      0.   ,      0.   ,      0.035,      0.116,      0.329,      0.276,      0.217],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [    59.241,     25.687,     50.871,     38.159,     54.625,     41.636,     45.238,     58.559],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [137617.525,  57740.042,  42577.487,   1571.138,   2868.924,   3661.127,    894.278,   2530.574],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.087,      0.345,      0.345,      0.304],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,    141.432,   3505.56 ,  15804.303,  25607.243,  29989.317],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.056,     36.216,     76.283,     77.056],
        [   785.141,   1123.739,   1423.711,   2885.245,  10856.161,  13918.73 ,  15401.98 ,  16606.374],
        [  1296.939,    653.724,    164.606,     82.375,     43.795,     83.286,    129.778,    262.765],
        [    13.879,      6.186,      5.155,      4.243,      1.438,      2.772,      1.958,      1.089],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,    304.786,   1362.814,   3765.67 ,   5130.509,   7425.65 ,  13989.788,  16376.234],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,    239.342,   1232.722,   4218.252,   3091.835],
        [     3.986,      4.554,      2.589,      2.252,      1.819,      2.05 ,      1.976,      2.617],
        [    63.436,     24.768,     21.881,     47.573,     58.945,     63.327,     60.702,     63.216],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,    119.292,   1889.158,   3513.901,   5531.096],
        [147216.179, 106538.004,  80267.374,  40240.034,  33472.374,  32897.196,  29243.354,  40337.559],
        [    10.107,     35.706,     12.217,     19.508,      7.517,     25.069,     33.451,     47.096],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ,     14.547,     85.183,     73.149],
        [     0.   ,      0.   ,      0.   ,    140.275,   4906.673,  13611.015,  16902.96 ,  22895.964]])
}

control_run_3 = {
    'train_acc': 0.7359,
    'validation_acc': 0.7579,
    'no_optimal_stimulus_neurons': np.array([
         2,  4,  5,  7,  8,  9, 13, 14, 16, 18,
        19, 21, 23, 25, 26, 28, 29, 31, 34, 35,
        39, 40, 43, 44, 45, 52, 60, 62]),
    'c_len_iou_vs_len_test': np.array([0.9659, 0.6292, 0.8880, 0.9116, 0.8839]),
    'c_len_iou_vs_len_validation': np.array([0.9047651636406044, 0.6779810119091507, 0.7530636259828952, 0.7803759515427828, 0.7810084234287842]),
    'c_len_noise_resp': np.array([
           0.   ,     0.   , -1000.   ,     0.019, -1000.   , -1000.   ,     0.   , -1000.   , -1000.   , -1000.   ,
           0.   ,     0.001,     0.002, -1000.   , -1000.   ,     0.   , -1000.   ,     0.008, -1000.   , -1000.   ,
           0.   , -1000.   ,     0.   , -1000.   ,     0.007, -1000.   , -1000.   ,     0.001, -1000.   , -1000.   ,
           0.   , -1000.   ,     0.   ,     0.   , -1000.   , -1000.   ,     0.   ,     0.001,     0.171, -1000.   ,
       -1000.   ,     0.117,     0.   , -1000.   , -1000.   , -1000.   ,     0.023,     0.362,     0.   ,     0.   ,
           0.   ,     0.   , -1000.   ,     0.   ,     0.   ,     0.298,     0.   ,     0.002,     0.   ,     0.   ,
       -1000.   ,     0.   , -1000.   ,     0.021]),
    'c_len_mean_gains': np.array([
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.848,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.999,     11.118,     17.041,     16.12 ,     16.02 ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,     39.607,     75.375],
        [     0.992,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.994,     60.723,     86.071,     55.98 ,     62.024],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,  67928.823, 124685.347, 129779.146, 131174.176],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.999,      0.103,      0.   ,      1.067,      0.033],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.895,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.999,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.983,    463.941,   1172.719,   1422.214,   1263.751],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.993,     13.549,      0.366,      0.453,      1.025],
        [     1.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     1.   ,      2.528,      0.992,      0.809,      0.688],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     1.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     1.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      0.   ,     35.552,    188.009,    250.795],
        [     0.   ,   1862.457,  11787.167,  12377.495,  14268.477],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     1.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.995,     22.815,    294.759,    469.433,    485.362],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.933,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,    357.903,    869.573,   5582.609],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     1.   ,      0.   ,      0.   ,      0.   ,      0.   ]]),
    'spacing_noise_resp': np.array([
           0.   ,     0.   , -1000.   ,     0.015, -1000.   , -1000.   ,     0.   , -1000.   , -1000.   , -1000.   ,
           0.   ,     0.004,     0.001, -1000.   , -1000.   ,     0.   , -1000.   ,     0.   , -1000.   , -1000.   ,
           0.   , -1000.   ,     0.   , -1000.   ,     0.008, -1000.   , -1000.   ,     0.003, -1000.   , -1000.   ,
           0.   , -1000.   ,     0.002,     0.   , -1000.   , -1000.   ,     0.   ,     0.001,     0.196, -1000.   ,
       -1000.   ,     0.103,     0.   , -1000.   , -1000.   , -1000.   ,     0.018,     0.341,     0.   ,     0.   ,
           0.   ,     0.   , -1000.   ,     0.   ,     0.   ,     0.315,     0.   ,     0.005,     0.   ,     0.   ,
       -1000.   ,     0.   , -1000.   ,     0.015]),
    'spacing_mean_gains': np.array([
        [    0.   ,     0.   ,     0.   ,     0.   ,     1.26 ,    43.498,   166.376,   352.475],
        [    0.   ,     0.   ,     0.   ,     0.363,   105.144,   258.78 ,   320.571,   310.942],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [   22.159,    19.757,    13.427,     7.865,     4.328,     6.277,     4.468,     4.879],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,   314.114,  4107.633, 10827.598, 15399.974, 15058.754, 14552.105],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [  154.011,     0.   ,     0.   ,   296.99 ,    31.65 ,    88.977,   191.099,  1290.197],
        [    0.   ,     0.   ,     0.011,     1.046,    32.89 ,    41.753,    51.329,    43.262],
        [  118.731,   313.293,   277.673,   123.499,    79.903,    25.895,    67.976,    94.187],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [ 5558.843,  3575.414,  2098.396,    53.68 ,   147.137,    87.123,    26.091,    37.759],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.483,     8.037,   213.876,   508.52 ,  1053.333,  1337.695,  1425.584,  1296.899],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,   501.598, 10462.223, 16024.852, 20898.823],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,    44.833,   205.413,   175.545,   599.917,   149.284,   198.052],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     5.252,    23.905,    29.176,    26.695,    24.693],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [  312.559,   152.932,   108.863,    35.853,    28.397,    35.546,    37.583,    49.814],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,   532.669,   838.754,  3452.335,  8650.106, 18254.584, 18734.722],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     1.467,     5.978,    30.256,   116.814,   169.484,   207.804],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,    32.634,   374.84 ,   487.35 ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,  3816.904, 17449.932, 18108.143, 20831.124, 20040.943, 14953.915, 11833.997],
        [    3.549,     5.098,    98.123,   182.386,    78.802,   442.475,   339.552,   706.747],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.279,     0.626,     1.471,     1.456],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.816,     3.147,     1.388,     0.54 ,     0.539,     0.624,     1.59 ,     1.89 ],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,   417.253,   563.845,   217.713],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     0.239,     0.123,     0.12 ,     0.028,     0.305],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,     0.105,     0.275,     0.401],
        [    0.   ,     0.   ,  7779.398, 25526.206, 31178.275, 35984.482, 27736.414, 20033.613],
        [  293.545,   254.854,  2924.515, 13329.301, 33915.428, 45638.534, 47266.74 , 48932.314],
        [11332.047, 11334.028, 14470.739, 27481.628, 37602.003, 55115.122, 61763.836, 70343.144],
        [    0.   ,     0.   ,     0.   ,     0.   ,  2445.585,  6809.147, 12369.445, 10637.89 ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,   675.539,  5249.046, 11845.645, 18385.532],
        [    0.   ,     0.   ,   613.324,  1209.964,  1647.539,  1788.107,  4541.956,  7057.087],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,     0.03 ,     0.154,     0.757],
        [    0.   ,     0.   ,     0.   ,  1131.313,  4099.624,  5712.578,  7148.157, 11523.175],
        [  172.953,   145.069,   129.356,    89.418,    46.564,    14.957,    17.08 ,     1.872],
        [    0.   ,     0.   ,    55.956,   464.823,  2072.74 , 13219.428, 21533.946, 27811.369],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,   427.183,   753.55 ,  1628.96 ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [  709.445,  1192.715,  1521.589,  2911.438, 14309.289, 18711.654, 17460.23 , 20401.145],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.011,     2.028,     5.772,     9.441]]),
}

control_run_4 = {
    'train_acc':  0.7335,
    'validation_acc':  0.7541,
    'no_optimal_stimulus_neurons': np.array([
         0,  1,  2,  6,  8,  9, 12, 13, 14, 15,
        16, 18, 19, 23, 24, 26, 28, 29, 30, 31,
        34, 36, 39, 44, 46, 47, 52, 58, 59, 61,
        63]),
    'c_len_iou_vs_len_test': np.array([0.9576, 0.6758, 0.8852, 0.8930, 0.8855]),
    'c_len_iou_vs_len_validation': np.array([0.886030696436228, 0.6800912767002046, 0.7472104929953275, 0.7798420286323562, 0.7697141594235746]),
    'c_len_noise_resp': np.array([
        -1000.   , -1000.   , -1000.   ,     0.02 ,     0.   ,     0.002, -1000.   ,     0.002, -1000.   , -1000.   ,
            0.242,     0.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ,     0.025, -1000.   , -1000.   ,
            0.   ,     0.   ,     0.   , -1000.   , -1000.   ,     0.   , -1000.   ,     0.   , -1000.   , -1000.   ,
        -1000.   , -1000.   ,     0.001,     0.003, -1000.   ,     0.392, -1000.   ,     0.   ,     0.   , -1000.   ,
            0.003,     0.   ,     0.   ,     0.001, -1000.   ,     0.001, -1000.   , -1000.   ,     0.   ,     0.002,
            0.   ,     0.005, -1000.   ,     0.256,     0.   ,     0.   ,     0.   ,     0.001, -1000.   , -1000.   ,
            0.   , -1000.   ,     0.003, -1000.   ]),
    'c_len_mean_gains': np.array([
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.999,      0.622,      0.265,      0.361,      0.258],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.996,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.995,      1.195,     71.128,    348.871,    447.279],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     1.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      3.643,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     1.   ,      0.205,      0.282,      0.28 ,      0.144],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,    106.861,    160.842,      0.   ,    125.066],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.956,      6.033,      9.632,      2.016,      7.418],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,     29.815],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.991,      0.505,      0.   ,      0.   ,      0.   ],
        [     0.996,     11.084,    100.015,    115.357,    125.093],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     1.   ,      0.908,      1.198,      1.27 ,      1.181],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.997,     85.92 ,    138.679,    147.863,    146.314],
        [     0.   ,  40541.906,  80111.932,  90176.483,  92112.851],
        [     0.   ,    188.119,   3270.533,   4212.703,   3845.285],
        [     0.993,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.985,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.994,      0.468,      0.   ,      0.   ,      0.   ],
        [     0.093,   2218.363,   1226.799,   1506.635,   1312.1  ],
        [     0.998,      0.069,      0.024,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     1.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.   ,    598.1  ,  26170.74 ,  92199.127, 114278.399],
        [     0.   ,    447.668,   1888.206,   1616.335,   2052.299],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [     0.987,      3.071,      1.099,      2.513,      1.908],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.   ,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ],
        [     0.997,      0.   ,      0.   ,      0.   ,      0.   ],
        [ -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ,  -1000.   ]]),
    'spacing_noise_resp': np.array([
        -1000.   , -1000.   , -1000.   ,     0.017,     0.   ,     0.001, -1000.   ,     0.   , -1000.   , -1000.   ,
            0.227,     0.002, -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ,     0.015, -1000.   , -1000.   ,
            0.002,     0.   ,     0.004, -1000.   , -1000.   ,     0.   , -1000.   ,     0.   , -1000.   , -1000.   ,
        -1000.   , -1000.   ,     0.   ,     0.   , -1000.   ,     0.383, -1000.   ,     0.001,     0.   , -1000.   ,
            0.001,     0.   ,     0.   ,     0.003, -1000.   ,     0.002, -1000.   , -1000.   ,     0.   ,     0.002,
            0.   ,     0.007, -1000.   ,     0.263,     0.003,     0.   ,     0.   ,     0.004, -1000.   , -1000.   ,
            0.   , -1000.   ,     0.002, -1000.   ]),
    'spacing_mean_gains': np.array([
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.429,     0.049,     0.515,     1.166,     1.352,     2.779,     2.172,     1.595],
       [    0.   ,     0.   ,   153.406,     0.   ,   367.012,     0.   ,    74.927,   472.673],
       [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,     0.673,     3.941,   112.984],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [69618.408, 45939.549,  2558.16 ,  7629.365,  2741.345,  6605.2  ,  8262.588,  7199.648],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,     0.042,     0.149,     0.128],
       [    0.   ,     0.   ,     0.   ,     2.851,     1.638,     1.381,     5.079,    12.898],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.387,     1.67 ,     2.947,     5.625,    10.408,    10.307,    10.647,    11.128],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.   ,    14.686,     4.099,    10.197,     8.328,    30.909,    58.961,    65.886],
       [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,  1504.798,  3489.471,  6840.166],
       [    0.   ,     0.429,     2.862,     4.203,     3.959,     9.248,    10.402,     8.285],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,   196.184,  1532.137,  2636.8  ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.   ,    25.119,   726.59 ,  8303.789, 14807.551, 16826.092, 16596.98 , 17370.792],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.   ,     0.   ,   199.259,  6557.384, 10654.269, 11446.532,  3563.867,  8086.903],
       [30614.483, 35678.832, 16169.522, 11261.648,  8194.374,  8673.153, 14319.686, 23412.555],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    1.189,     1.229,     0.558,     0.297,     0.269,     0.252,     0.277,     0.252],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.   ,     0.046,    10.465,   107.26 ,   173.071,   177.814,   201.404,   283.647],
       [    0.   ,     0.   ,     4.446,    16.875,   115.584,   253.906,   248.029,   201.591],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [  365.01 ,   239.717,   221.966,   126.272,    68.481,    73.189,   110.015,   129.396],
       [85372.044, 63144.838, 63688.396, 38323.134, 30534.982, 36610.201, 46681.48 , 49009.681],
       [ 3421.795, 12170.405,  1241.496,   410.084,   130.447,   628.828,  2660.344,  4104.471],
       [    0.   ,     0.533,     0.856,     7.185,    14.458,    50.073,    88.822,   104.799],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.   ,     0.   ,     0.   ,     0.   ,     0.413,     6.731,     8.974,    15.208],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.   ,     0.   ,     0.548,     2.712,    13.956,    65.837,   167.09 ,   290.85 ],
       [    0.   ,     1.241,     3.401,    13.812,    40.646,    88.622,    88.732,    84.816],
       [   72.894,   116.36 ,   307.016,   422.986,   953.662,  1029.177,   976.813,  1082.168],
       [    0.1  ,     0.138,     2.836,     6.743,    15.876,    14.592,    22.235,    27.412],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.   ,     0.   ,     0.   ,     0.   ,     0.142,     0.606,     1.055,     1.301],
       [  266.144,   223.871,   203.589,   137.326,   105.38 ,    67.329,    44.395,    60.031],
       [ 1398.09 ,  5402.143,  7971.594, 12741.401,  9920.098,  6410.366,  4088.712,  5057.248],
       [    0.   ,     0.   ,  3903.184, 24120.882, 35704.995, 44808.429, 46463.875, 42765.446],
       [    0.916,    48.288,    32.073,    14.184,     9.145,    22.649,    37.264,    47.209],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.   ,     0.   ,     5.477,     0.   ,     0.   ,   214.076,   331.643,  2647.583],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
       [    0.   ,     0.   ,     0.   ,     0.718,     4.996,    19.694,    16.258,    15.191],
       [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ]])
}

control_run_5 = {
    'train_acc': 0.7317,
    'validation_acc': 0.7527,
    'no_optimal_stimulus_neurons': np.array([
         1,  3,  6,  7,  8, 15, 16, 17, 20, 21,
        22, 24, 25, 28, 29, 30, 31, 38, 40, 42,
        43, 46, 49, 50, 52, 55, 58, 59, 60, 63]),
    'c_len_iou_vs_len_test': np.array([0.9859, 0.3921, 0.6833, 0.7449, 0.7810]),
    'c_len_iou_vs_len_validation': np.array([0.9359878462973029, 0.6645097532426917, 0.750828152507529, 0.7806255992892602, 0.7731483300046875]),
    'c_len_noise_resp': np.array([
           0.26 , -1000.   ,     0.   , -1000.   ,     0.   ,     0.   , -1000.   , -1000.   , -1000.   ,     0.   ,
           0.   ,     0.   ,     0.   ,     0.   ,     0.004, -1000.   , -1000.   , -1000.   ,     0.419,     0.   ,
       -1000.   , -1000.   , -1000.   ,     0.   , -1000.   , -1000.   ,     0.   ,     0.   , -1000.   , -1000.   ,
       -1000.   , -1000.   ,     0.055,     0.   ,     0.001,     0.   ,     0.031,     0.   , -1000.   ,     0.   ,
       -1000.   ,     0.   , -1000.   , -1000.   ,     0.   ,     0.   , -1000.   ,     0.002,     0.   , -1000.   ,
       -1000.   ,     0.   , -1000.   ,     0.   ,     0.   , -1000.   ,     0.   ,     0.   , -1000.   , -1000.   ,
       -1000.   ,     0.001,     0.   , -1000.   ]),
    'c_len_mean_gains': np.array([
        [    1.   ,     0.12 ,     0.   ,     0.   ,     0.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.965,     0.   ,     0.   ,     0.   ,     0.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ],
        [    0.968,     0.   ,     0.   ,     0.   ,     0.   ],
        [    0.   ,     0.   ,     6.772,     0.   ,   255.875],
        [    0.   ,     0.   ,   150.714,   161.974,    79.425],
        [    0.998,     0.   ,     0.   ,     0.   ,     0.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    1.   ,     0.094,     0.   ,     0.   ,     0.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,    99.349,   154.463,    38.245,   263.469],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ],
        [    0.971,     0.   ,     0.   ,     0.   ,     0.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    1.   ,     5.758,     9.756,    10.225,    10.135],
        [    0.98 ,     0.   ,     0.   ,     0.   ,     0.   ],
        [    0.99 ,     0.   ,     0.   ,     0.   ,     0.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ],
        [    1.   ,     0.733,     0.29 ,     0.499,     0.838],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,   241.978,  2633.414, 19452.598, 26307.422],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.749,     0.   ,  2945.077, 13075.309, 18460.075],
        [    0.   ,     0.   ,   260.627,   502.713,   725.76 ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.995,    32.378,    82.186,    87.065,    97.698],
        [    0.   ,   644.048,  6225.409,  6803.197,  7711.245],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ],
        [    0.   ,   784.602,  3193.306,  4295.48 ,  4663.599],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ],
        [    0.959,     0.   ,     0.   ,     0.   ,     0.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.989,     0.768,     0.357,     3.538,     3.993],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   ]]),
    'spacing_noise_resp': np.array([
            0.259, -1000.   ,     0.001, -1000.   ,     0.   ,     0.   , -1000.   , -1000.   , -1000.   ,     0.   ,
            0.   ,     0.002,     0.   ,     0.   ,     0.001, -1000.   , -1000.   , -1000.   ,     0.425,     0.   ,
        -1000.   , -1000.   , -1000.   ,     0.001, -1000.   , -1000.   ,     0.   ,     0.   , -1000.   , -1000.   ,
        -1000.   , -1000.   ,     0.056,     0.   ,     0.   ,     0.   ,     0.027,     0.   , -1000.   ,     0.   ,
        -1000.   ,     0.   , -1000.   , -1000.   ,     0.   ,     0.   , -1000.   ,     0.   ,     0.   , -1000.   ,
        -1000.   ,     0.   , -1000.   ,     0.   ,     0.   , -1000.   ,     0.   ,     0.002, -1000.   , -1000.   ,
        -1000.   ,     0.004,     0.   , -1000.   ]),
    'spacing_mean_gains': np.array([
        [    0.   ,     0.   ,     0.003,     0.209,     0.712,     0.94 ,     1.139,     1.277],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,    24.71 ,    70.01 ,   109.997,   180.396,   212.425,   214.55 ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     2.823,    87.399,   202.753,   157.103,   365.011,   182.444],
        [    0.   ,     0.   ,     0.   ,     1.492,    52.946,    36.747,     0.071,     0.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,   112.397,   216.565,   167.944,   134.025,   706.105],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,    22.015,   219.233,   213.889],
        [    0.   ,     0.   ,     0.   ,     0.   ,     2.734,    74.267,    60.557,    96.1  ],
        [  325.335, 14883.817, 11325.875, 18005.627, 13983.322,  7359.528, 10529.689,  8258.103],
        [    0.   ,    34.709,   334.466,  1084.335,  1856.848,  2873.388,  3639.483,  4522.206],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,     1.61 ,    44.409,    21.63 ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.008,     0.428,     0.439,     0.235],
        [    0.   ,  1067.997,  3873.511, 18133.641, 19722.265, 28186.967, 26891.33 , 34689.357],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,   137.442,   264.198,   281.057,   175.957,   112.458,   117.184,   241.881],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,   685.761,  7348.846, 12786.377, 21328.873],
        [    0.   ,     0.   ,     0.711,    56.24 ,   597.173,  1293.608,  1735.151,  2230.58 ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    9.819,     3.369,     1.582,     1.837,     3.403,     5.51 ,     5.651,     6.976],
        [    0.   ,     0.   ,    95.215,  4617.842, 16607.293, 40895.926, 54122.865, 65592.183],
        [    0.   ,     0.   ,    11.14 ,     8.4  ,    17.638,     3.545,    38.487,   221.944],
        [    0.   ,     0.   ,    90.745,  1637.986,  1769.742,  5042.822,  4844.177,  8005.284],
        [    0.649,     0.105,     0.183,     1.303,     2.942,     4.978,     6.133,     8.621],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,     0.   ,     0.   ,    79.033],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [18960.618, 38604.815, 23604.808, 22958.999, 19773.163, 45888.234, 37133.571, 45712.499],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,  1109.196,  8465.992, 14817.914],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [51705.231, 34307.876, 28573.573, 10966.856, 15505.153, 10042.35 ,  7368.657, 21999.347],
        [  494.831,     7.408,    71.779,   268.618,   268.16 ,   617.511,   850.167,  1128.081],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [18173.132, 19140.143, 23703.397, 25982.652, 31650.787, 48833.383, 60994.129, 72656.067],
        [ 4932.275,  5846.184, 10493.101, 17966.128,  4777.31 , 17936.577, 20419.019, 23768.321],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,     0.   ,     0.   ,     0.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,     0.   ,  4391.622, 26873.053, 28410.867],
        [ 4633.705, 10588.134, 14385.536, 23552.883, 26265.952, 37364.068, 44229.492, 52358.944],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.   ,     0.   ,     0.   ,     0.   ,   150.624,  3673.794,  8858.009, 14091.979],
        [    0.   ,     0.   ,     0.404,     1.468,    33.979,    90.216,   130.805,   181.377],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ],
        [    0.403,    19.727,    26.717,    35.276,    46.775,    60.668,    74.767,    87.636],
        [    0.   ,    81.046,     0.   ,     0.   ,     8.558,    99.117,  1141.882, 10096.963],
        [-1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   , -1000.   ]])
}

# Model ---------------------------------------------------------------------------------
# Results from
# ./results/contour_dataset_multiple_runs/positive_lateral_weights_with_BN_best_gain_curves
model_run_1 = {
    'train_acc': 0.8755,
    'validation_acc': 0.8481,
    'no_optimal_stimulus_neurons': np.array([11, 12, 13, 19, 24, 31, 40, 45, 47, 56, 57, 59, 60, 62, 63]),
    'c_len_iou_vs_len_test': np.array([0.9743, 0.4532, 0.8490, 0.9048, 0.9203]),
    'c_len_noise_resp': np.array([
        1.369, 3.125, 0.607, 2.016, 0.685, 1.411, 0.151, 1.525, 0.246, 3.104,
        0.99, -1000, -1000, -1000, 2.875, 1.304, 1.354, 1.212, 1.523, -1000,
        1.235, 1.776, 1.367, 0.225, -1000, 0.649, 2.311, 2.038, 0.034, 3.026,
        1.821, -1000, 0.665, 2.275, 2.243, 1.525, 0.69, 2.253, 1.602, 0.003,
        -1000, 1.988, 3.085, 1.275, 1.103, -1000, 0.002, -1000, 1.783, 1.143,
        0.265, 0.755, 1.239, 0.061, 1.787, 2.188, -1000, -1000, 0.993, -1000,
        -1000, 1.465, -1000, -1000]),
    'c_len_mean_gains': np.array([
        [1., 1.543, 2.83, 3.146, 3.172],
        [1., 1.067, 1.148, 1.164, 1.163],
        [1., 0.681, 1.355, 1.565, 1.582],
        [1., 2.131, 3.484, 4.173, 4.312],
        [1., 2.259, 4.189, 5.135, 5.728],
        [1., 2.641, 4.467, 4.912, 5.044],
        [1., 4.738, 19.118, 29.065, 32.],
        [1., 0.619, 0.59, 0.565, 0.566],
        [1., 0.07, 5.951, 8.268, 8.674],
        [1., 1.162, 1.364, 1.42, 1.389],
        [1., 1.648, 2.361, 2.697, 2.739],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.175, 1.352, 1.415, 1.395],
        [1., 0.823, 0.861, 0.938, 0.898],
        [1., 1.261, 1.783, 1.986, 1.965],
        [1., 1.707, 2.952, 3.615, 3.563],
        [1., 0.931, 1.344, 1.491, 1.508],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.826, 3.782, 4.95, 4.978],
        [1., 1.62, 3.016, 3.562, 3.807],
        [1., 0.331, 0.4, 0.482, 0.506],
        [1., 0.63, 2.155, 2.594, 2.845],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 3.449, 5.939, 6.437, 6.407],
        [1., 0.738, 0.838, 1.024, 0.994],
        [1., 1.405, 1.634, 1.658, 1.713],
        [1., 0.963, 10.044, 23.358, 29.038],
        [1., 1.188, 1.7, 1.988, 2.015],
        [1., 1.632, 2.347, 2.617, 2.737],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.215, 0.925, 1.839, 1.965],
        [1., 0.797, 0.941, 1.041, 1.106],
        [1., 1.137, 1.246, 1.35, 1.39],
        [1., 0.637, 0.9, 0.949, 0.954],
        [1., 1.894, 2.869, 3.165, 3.204],
        [1., 1.085, 1.435, 1.556, 1.579],
        [1., 1.142, 1.539, 1.759, 1.892],
        [0.996, 377.847, 1051.226, 1168.808, 1166.792],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.708, 0.776, 0.834, 0.837],
        [1., 1.086, 1.184, 1.298, 1.413],
        [1., 0.876, 0.958, 0.989, 0.99],
        [1., 0.899, 1.063, 1.205, 1.26],
        [-1000., -1000., -1000., -1000., -1000.],
        [0.994, 0., 0., 0., 0.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.125, 1.504, 1.636, 1.592],
        [1., 2.114, 4.325, 5.39, 5.666],
        [1., 1.524, 3.684, 4.982, 5.203],
        [1., 0.61, 1.421, 2.447, 2.709],
        [1., 1.176, 1.77, 1.987, 1.989],
        [1., 0.106, 5.963, 37.128, 58.776],
        [1., 0.368, 0.665, 0.988, 1.095],
        [1., 0.38, 0.681, 0.91, 0.967],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.781, 0.815, 0.679, 0.653],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.292, 2.704, 4.188, 4.705],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.]]),
    'spacing_noise_resp': np.array([
        1.394, 3.152, 0.627, 2.042, 0.704, 1.437, 0.154, 1.545, 0.244, 3.003,
        1.08, -1000, -1000, -1000, 2.828, 1.388, 1.365, 1.259, 1.563, -1000,
        1.283, 1.826, 1.359, 0.187, -1000, 0.617, 2.341, 2.062, 0.077, 3.096,
        1.837, -1000, 0.644, 2.308, 2.322, 1.556, 0.692, 2.238, 1.663, 0.,
        -1000, 2.01, 3.155, 1.302, 1.15, -1000, 0.006, -1000, 1.75, 1.098,
        0.258, 0.703, 1.22, 0.072, 1.776, 2.116, -1000, -1000, 0.997, -1000,
        -1000, 1.481, -1000, -1000]),
    'spacing_mean_gains': np.array([
        [3.11, 2.247, 1.43, 1.573, 1.089, 0.996, 0.934, 0.906],
        [1.153, 0.81, 0.647, 0.563, 0.499, 0.488, 0.498, 0.498],
        [1.507, 0.499, 0.241, 0.484, 0.749, 1.053, 1.289, 1.417],
        [4.1, 1.977, 1.798, 1.35, 1.152, 0.721, 0.665, 0.654],
        [5.068, 4.662, 1.415, 0.356, 0.335, 0.466, 0.47, 0.353],
        [4.831, 2.501, 1.844, 2.103, 0.595, 0.328, 0.073, 0.002],
        [28.371, 18.885, 14.975, 10.429, 5.347, 2.062, 2.33, 2.217],
        [0.563, 0.18, 0.268, 0.492, 0.72, 0.81, 0.866, 0.859],
        [8.122, 2.247, 0.489, 0.54, 0., 0.041, 0.25, 1.579],
        [1.474, 0.687, 0.11, 0.164, 0.017, 0.01, 0.003, 0.002],
        [2.517, 1.597, 1.021, 0.784, 0.538, 0.377, 0.211, 0.137],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.443, 0.476, 0.363, 0.346, 0.203, 0.153, 0.077, 0.052],
        [0.896, 0., 0., 0., 0., 0., 0., 0.],
        [1.94, 1.234, 0.409, 0.014, 0.009, 0.001, 0., 0.],
        [3.456, 2.541, 1.196, 0.995, 1.274, 1.03, 1.011, 1.005],
        [1.441, 0.626, 0.03, 0.189, 0.088, 0.024, 0.002, 0.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [4.777, 3.936, 2.9, 1.592, 1.273, 1.043, 0.887, 0.86],
        [3.507, 1.912, 1.687, 1.41, 1.423, 0.971, 1.045, 1.019],
        [0.485, 0.245, 0.614, 0.837, 0.937, 0.849, 0.938, 0.993],
        [3.144, 2.688, 3.637, 4.176, 4.358, 4.798, 4.715, 4.601],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [6.778, 3.995, 2.305, 0.367, 0.396, 0.109, 0.004, 0.],
        [0.969, 0.461, 0.403, 0.611, 0.338, 0.559, 0.597, 0.616],
        [1.667, 0.804, 0.181, 0.243, 0.175, 0.105, 0.023, 0.01],
        [9.65, 3.237, 8.524, 4.924, 3.6, 5.315, 4.605, 3.134],
        [1.945, 0.898, 0.323, 0.35, 0.023, 0.015, 0.002, 0.001],
        [2.651, 1.324, 0.881, 1.08, 0.455, 0.507, 0.348, 0.352],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.895, 0.748, 0.977, 1.695, 1.069, 1.435, 1.389, 1.506],
        [1.025, 0.006, 0., 0.018, 0.067, 0.128, 0.125, 0.045],
        [1.276, 0.407, 0.103, 0.307, 0.34, 0.362, 0.312, 0.269],
        [0.919, 0.244, 0.043, 0.109, 0.044, 0.043, 0.025, 0.027],
        [3.116, 1.996, 0.351, 0.35, 0.206, 0.018, 0.014, 0.],
        [1.549, 0.788, 0.449, 0.333, 0.246, 0.207, 0.154, 0.208],
        [1.755, 1.295, 1.219, 1.117, 0.887, 0.674, 0.648, 0.626],
        [310963.068, 279441.785, 254081.034, 191738.613, 151563.616, 133972.565, 116807.292, 109080.603],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [0.838, 0.716, 0.748, 0.701, 0.687, 0.74, 0.792, 0.793],
        [1.276, 0.316, 0.037, 0.114, 0.188, 0.208, 0.138, 0.106],
        [0.956, 0.761, 0.821, 0.961, 0.917, 0.903, 0.84, 0.807],
        [1.135, 0.424, 0.054, 0.413, 0.726, 0.922, 0.895, 0.96],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [0.025, 0.187, 6.766, 32.547, 89.956, 175.938, 204.784, 216.891],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.596, 1.007, 0.681, 0.417, 0.287, 0.201, 0.235, 0.198],
        [5.622, 2.44, 1.055, 0.272, 0.263, 0.002, 0.004, 0.],
        [4.964, 6.951, 5.77, 6.318, 6.446, 6.572, 6.872, 7.223],
        [2.452, 1.34, 1.655, 1.467, 0.893, 1.059, 0.973, 0.886],
        [1.999, 0.592, 0.115, 0.3, 0.347, 0.642, 0.608, 1.089],
        [33.677, 24.522, 28.407, 17.008, 20.054, 11.426, 11.455, 9.444],
        [0.989, 0.002, 0., 0.008, 0.004, 0.058, 0.035, 0.04],
        [0.924, 0.421, 0.146, 0.128, 0.255, 0.241, 0.234, 0.269],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [0.812, 0.289, 0.396, 0.248, 0.149, 0.041, 0.002, 0.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [4.206, 2.727, 2.314, 1.719, 1.578, 1.336, 1.2, 1.075],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.]])
}

model_run_2 = {
    'train_acc': 0.8735,
    'validation_acc': 0.8420,
    'no_optimal_stimulus_neurons': np.array(
        [0, 2, 9, 10, 11, 12, 13, 14, 15, 20, 23, 24, 27, 30, 33, 36, 37, 39, 42, 43, 44, 47, 48, 52, 57, 58, 59]),
    'c_len_iou_vs_len_test': np.array([0.9049, 0.7826, 0.8932, 0.9259, 0.9322]),
    'c_len_noise_resp': np.array([
        -1000., 2.645, -1000., 0.673, 1.254, 0.092, 0.99, 0., 0.528, -1000.,
        -1000., -1000., -1000., -1000., -1000., -1000., 0.418, 0.765, 1.022, 1.332,
        -1000., 0.617, 0.997, -1000., -1000., 0., 0.245, -1000., 1.716, 0.543,
        -1000., 0.581, 1.203, -1000., 0.748, 0., -1000., -1000., 1.502, -1000.,
        1.164, 0.418, -1000., -1000., -1000., 2.281, 0.317, -1000., -1000., 1.011,
        1.321, 1.473, -1000., 2.954, 0.872, 1.162, 1.074, -1000., -1000., -1000.,
        0.008, 3.593, 0.362, 0.019]),
    'c_len_mean_gains': np.array([
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.399, 1.799, 1.847, 1.835],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.963, 3.329, 3.823, 3.811],
        [1., 1.701, 2.545, 2.733, 2.675],
        [1., 11.743, 42.724, 70.409, 85.73],
        [1., 2.185, 5.231, 6.897, 7.297],
        [0.861, 273.211, 3486.534, 3782.585, 4030.018],
        [1., 0., 0., 0., 0.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 2.254, 5.685, 6.312, 6.526],
        [1., 0.002, 0.022, 0.048, 0.068],
        [1., 0.524, 0.403, 0.549, 0.537],
        [1., 1.495, 2.59, 2.887, 2.918],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 5.368, 12.709, 16.376, 16.792],
        [1., 0., 0., 0.003, 0.002],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [0., 22593.705, 116284.805, 139115.09, 153244.406],
        [1., 0.876, 3.849, 5.707, 6.342],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.837, 2.381, 2.423, 2.426],
        [1., 6.547, 10.74, 11.889, 11.934],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.193, 0.578, 0.771, 0.82],
        [1., 0.752, 1.54, 1.849, 2.013],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.015, 0.019, 0.058, 0.057],
        [0., 64428.754, 187069.152, 190514.685, 182925.853],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 3.994, 6.835, 7.735, 7.828],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.694, 1.031, 1.179, 1.283],
        [1., 0.003, 0.095, 0.368, 0.314],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.345, 1.736, 1.847, 1.813],
        [1., 0., 0., 0.016, 0.044],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.03, 0.852, 1.468, 1.55],
        [1., 0.349, 0.595, 0.64, 0.594],
        [1., 1.694, 2.776, 3.18, 3.252],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.936, 1.352, 1.493, 1.457],
        [1., 0.083, 0.221, 0.412, 0.292],
        [1., 1.875, 3.46, 3.847, 3.876],
        [1., 0.095, 0.037, 0.055, 0.048],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [0.999, 0., 2.712, 152.407, 192.805],
        [1., 0.659, 0.788, 0.968, 0.977],
        [1., 10.435, 15.921, 17.278, 17.838],
        [0.999, 13.708, 73.42, 83.13, 92.535]]),
    'spacing_noise_resp': np.array([
        -1000., 2.613, -1000., 0.747, 1.304, 0.109, 0.981, 0., 0.509, -1000.,
        -1000., -1000., -1000., -1000., -1000., -1000., 0.388, 0.757, 1.032, 1.317,
        -1000., 0.687, 0.983, -1000., -1000., 0., 0.209, -1000., 1.736, 0.557,
        -1000., 0.603, 1.254, -1000., 0.793, 0.001, -1000., -1000., 1.589, -1000.,
        1.172, 0.447, -1000., -1000., -1000., 2.283, 0.321, -1000., -1000., 1.008,
        1.358, 1.486, -1000., 2.916, 0.764, 1.179, 1.082, -1000., -1000., -1000.,
        0.007, 3.555, 0.341, 0.025]),
    'spacing_mean_gains': np.array([
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.864, 1.103, 1.035, 0.837, 0.747, 0.678, 0.671, 0.659],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [3.432, 2.653, 2.571, 1.925, 1.565, 1.386, 1.224, 1.151],
        [2.601, 1.961, 1.222, 0.825, 0.741, 0.364, 0.27, 0.153],
        [60.357, 51.701, 37.641, 30.426, 12.631, 9.017, 6.529, 6.913],
        [6.839, 4.93, 3.093, 2.665, 2.24, 1.815, 1.612, 1.567],
        [28008.071, 79811.95, 130527.906, 113696.087, 98388.086, 88032.41, 105553.096, 123119.668],
        [0., 0., 0.025, 0.261, 0.25, 0.966, 1.115, 1.088],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [6.903, 3.856, 1.837, 2.617, 0.931, 0.902, 1.26, 1.265],
        [0.034, 0.114, 0.163, 0.048, 0.223, 0.578, 0.753, 0.781],
        [0.529, 0.742, 1.036, 1.061, 0.845, 0.729, 0.665, 0.64],
        [2.889, 0.914, 0.386, 0.425, 0.48, 0.382, 0.428, 0.499],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [14.868, 7.049, 5.127, 2.682, 1.698, 1.361, 1.101, 1.068],
        [0.002, 0., 0.053, 0.593, 0.968, 1.171, 1.217, 1.24],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [143705.804, 142380.351, 95102.281, 29003.547, 11457.482, 10382.458, 1637.545, 1431.667],
        [6.375, 6.817, 7.146, 4.096, 2.578, 2.514, 2.51, 2.742],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.425, 1.622, 1.178, 0.986, 0.775, 0.516, 0.456, 0.38],
        [11.45, 10.158, 6.723, 3.853, 2.46, 1.578, 1.444, 1.269],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [0.859, 0.722, 0.378, 0.931, 1.036, 0.895, 0.634, 0.487],
        [1.723, 0.758, 0.234, 0.13, 0.229, 0.263, 0.372, 0.407],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [0.049, 0.539, 1.112, 1.337, 1.597, 1.728, 1.79, 1.863],
        [3614.457, 2191.407, 2440.634, 2224.925, 2115.744, 1544.619, 1122.481, 1120.497],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [7.293, 5.686, 4.407, 2.749, 1.852, 1.772, 1.579, 1.513],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.185, 0.613, 0.413, 0.299, 0.317, 0.288, 0.254, 0.209],
        [0.203, 0.081, 1.351, 2.549, 3.279, 3.206, 2.898, 2.812],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.785, 1.327, 0.865, 0.748, 0.623, 0.401, 0.324, 0.272],
        [0.013, 0.286, 0.512, 0.963, 1.327, 1.708, 1.825, 2.388],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.455, 1.685, 0.983, 1.38, 1.295, 1.123, 1.455, 1.457],
        [0.638, 0.685, 0.582, 0.658, 0.628, 0.665, 0.711, 0.73],
        [3.212, 1.801, 0.862, 0.572, 0.333, 0.064, 0.061, 0.092],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.51, 0.479, 0.448, 0.278, 0.202, 0.157, 0.195, 0.179],
        [0.428, 0.449, 0., 0., 0., 0., 0., 0.],
        [3.752, 2.982, 1.988, 1.549, 1.33, 1.332, 1.391, 1.432],
        [0.063, 0.048, 0.052, 0.152, 0.12, 0.158, 0.17, 0.15],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [162.612, 174.728, 87.11, 78.151, 37.626, 62.312, 81.465, 111.716],
        [0.972, 0.468, 0.4, 0.474, 0.371, 0.416, 0.386, 0.349],
        [18.45, 10.57, 6.18, 3.522, 2.141, 0.243, 0.001, 0.],
        [65.129, 61.823, 67.109, 26.065, 34.919, 36.413, 47.813, 52.661]])
}

model_run_3 = {
    'train_acc': 0.8695,
    'validation_acc': 0.8419,
    'no_optimal_stimulus_neurons': np.array(
        [0, 1, 4, 5, 10, 11, 13, 14, 15, 24, 25, 28, 29, 31, 32, 33, 34, 35, 37, 42, 44, 45, 48, 50, 52, 54, 56, 57, 58,
         59, 60, 62]),
    'c_len_iou_vs_len_test': np.array([0.9194, 0.6298, 0.9020, 0.9390, 0.9387]),
    'c_len_noise_resp': np.array([
        -1000., -1000., 1.313, 0.342, -1000., -1000., 1.485, 0., 1.185, 0.72,
        -1000., -1000., 1.331, -1000., -1000., -1000., 2.046, 1.377, 1.569, 2.682,
        1.135, 0.746, 1.425, 1.237, -1000., -1000., 1.953, 2.489, -1000., -1000.,
        0.903, -1000., -1000., -1000., -1000., -1000., 1.977, -1000., 1.548, 0.002,
        1.707, 1.543, -1000., 0.475, -1000., -1000., 0.625, 1.909, -1000., 1.543,
        -1000., 2.521, -1000., 1.219, -1000., 1.033, -1000., -1000., -1000., -1000.,
        -1000., 1.367, -1000., 0.319]),
    'c_len_mean_gains': np.array([
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.121, 1.357, 1.457, 1.464],
        [1., 0.547, 2.09, 4.562, 5.122],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.615, 2.593, 2.972, 3.051],
        [0., 0., 0., 0., 0.],
        [1., 0.574, 0.82, 0.843, 0.863],
        [1., 0.173, 0.084, 0.055, 0.062],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.082, 1.23, 1.279, 1.341],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.047, 1.185, 1.271, 1.263],
        [1., 0.432, 0.451, 0.507, 0.473],
        [1., 1.742, 2.602, 2.938, 3.053],
        [1., 1.402, 1.697, 1.767, 1.779],
        [1., 1.349, 2.303, 3.065, 3.182],
        [1., 0.719, 0.906, 0.987, 0.998],
        [1., 1.086, 1.448, 1.63, 1.65],
        [1., 1.164, 1.443, 1.468, 1.48],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.749, 1.268, 1.548, 1.56],
        [1., 1.091, 1.661, 2.002, 2.071],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 3.85, 6.518, 7.375, 7.51],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.911, 1.169, 1.35, 1.372],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.604, 0.477, 0.514, 0.512],
        [0.995, 845.626, 2884.117, 3568.933, 3688.661],
        [1., 1.752, 2.788, 3.151, 3.203],
        [1., 0.443, 0.788, 0.895, 0.842],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 2.238, 3.448, 3.651, 3.684],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.154, 3.187, 4.102, 4.29],
        [1., 1.313, 1.545, 1.607, 1.607],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.852, 2.437, 2.444, 2.446],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.953, 1.091, 1.114, 1.107],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.707, 2.662, 3.054, 3.083],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.48, 1.905, 2.014, 2.062],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.809, 1.808, 2.468, 2.621],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.247, 1.7, 2.769, 2.732]]),
    'spacing_noise_resp': np.array([
        -1000., -1000., 1.311, 0.389, -1000., -1000., 1.481, 0., 1.171, 0.746,
        -1000., -1000., 1.326, -1000., -1000., -1000., 2.073, 1.351, 1.555, 2.658,
        1.119, 0.766, 1.443, 1.229, -1000., -1000., 1.886, 2.514, -1000., -1000.,
        0.914, -1000., -1000., -1000., -1000., -1000., 1.983, -1000., 1.651, 0.002,
        1.711, 1.513, -1000., 0.487, -1000., -1000., 0.644, 1.92, -1000., 1.511,
        -1000., 2.546, -1000., 1.243, -1000., 1.1, -1000., -1000., -1000., -1000.,
        -1000., 1.383, -1000., 0.354]),
    'spacing_mean_gains': np.array([
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.451, 0.892, 0.571, 0.463, 0.355, 0.309, 0.31, 0.29],
        [3.686, 0.22, 1.055, 1.887, 1.102, 0.582, 0.377, 0.295],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.98, 2.184, 1.7, 1.341, 1.146, 1.051, 1.084, 1.148],
        [0., 0., 0., 121.892, 2264.283, 4134.77, 6578.282, 7643.491],
        [0.862, 0.369, 0.092, 0.128, 0.212, 0.252, 0.378, 0.466],
        [0.064, 0.296, 0.002, 0., 0., 0., 0., 0.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.309, 1.045, 0.957, 0.894, 0.833, 0.806, 0.795, 0.788],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.246, 0.721, 0.609, 0.581, 0.56, 0.529, 0.519, 0.522],
        [0.475, 0.322, 0.264, 0.32, 0.441, 0.511, 0.597, 0.595],
        [3.005, 1.442, 0.568, 0.304, 0.123, 0.03, 0.07, 0.072],
        [1.782, 1.203, 0.894, 0.685, 0.624, 0.575, 0.527, 0.514],
        [3.089, 2.323, 2.114, 2.28, 1.327, 1.262, 1.296, 1.137],
        [0.96, 1.116, 1.274, 1.408, 1.252, 1.233, 1.282, 1.311],
        [1.581, 1.21, 0.537, 0.41, 0.236, 0.162, 0.148, 0.167],
        [1.476, 1.229, 1.115, 1.099, 1.151, 1.192, 1.167, 1.16],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.575, 0.877, 0.641, 0.629, 0.601, 0.574, 0.595, 0.693],
        [2.007, 1.411, 0.845, 0.58, 0.751, 0.64, 0.677, 0.656],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [7.21, 6.295, 2.955, 1.192, 0.802, 0.598, 0.328, 0.207],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.315, 0.602, 0.388, 0.506, 0.369, 0.361, 0.272, 0.21],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [0.459, 0.592, 0.696, 0.783, 0.857, 0.955, 1.029, 1.07],
        [3167.361, 1410.699, 1193.24, 494.32, 415.883, 361.806, 360.994, 369.15],
        [3.139, 1.409, 1.13, 0.594, 0.414, 0.247, 0.237, 0.248],
        [0.827, 0.439, 0.207, 0.272, 0.272, 0.295, 0.35, 0.382],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [3.496, 3.313, 3.812, 3.285, 2.608, 2.13, 1.896, 1.658],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [3.94, 2.813, 2.319, 1.676, 0.931, 0.893, 1.042, 1.101],
        [1.606, 1.029, 0.713, 0.568, 0.365, 0.237, 0.203, 0.195],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.531, 1.652, 0.736, 0.819, 0.281, 0.185, 0.13, 0.118],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.087, 0.715, 0.458, 0.428, 0.245, 0.197, 0.187, 0.187],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.997, 2.236, 1.526, 0.826, 0.771, 0.385, 0.387, 0.396],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.899, 1.315, 1.52, 1.283, 1.183, 1.146, 1.138, 1.063],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.509, 1.367, 1.022, 0.987, 0.584, 0.443, 0.394, 0.395],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.28, 2.111, 3.333, 3.041, 2.966, 2.685, 2.942, 2.744]])
}

model_run_4 = {
    'train_acc': 0.8772,
    'validation_acc': 0.8489,
    'no_optimal_stimulus_neurons': np.array(
        [0, 3, 10, 11, 12, 13, 16, 17, 18, 19, 20, 23, 24, 25, 31, 35, 36, 37, 40, 42, 43, 44, 47, 48, 50, 52, 56, 58,
         59, 62, 63]),
    'c_len_iou_vs_len_test': np.array([0.9670, 0.7289, 0.9121, 0.9328, 0.9212]),
    'c_len_noise_resp': np.array([
        -1000., 3.308, 1.22, -1000., 0.723, 0.472, 1.692, 1.334, 2.411, 2.385,
        -1000., -1000., -1000., -1000., 2.607, 1.142, -1000., -1000., -1000., -1000.,
        -1000., 0.792, 1.328, -1000., -1000., -1000., 1.391, 3.235, 1.495, 0.774,
        1.218, -1000., 1.085, 0.96, 1.515, -1000., -1000., -1000., 1.908, 1.724,
        -1000., 0.525, -1000., -1000., -1000., 1.195, 0.871, -1000., -1000., 1.338,
        -1000., 1.83, -1000., 1.142, 0.38, 0.088, -1000., 1.743, -1000., -1000.,
        0., 1.41, -1000., -1000.]),
    'c_len_mean_gains': np.array([
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.538, 0.523, 0.631, 0.694],
        [1., 1.26, 1.651, 1.888, 1.961],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 4.943, 9.17, 9.958, 10.011],
        [1., 0.402, 1.255, 1.653, 1.676],
        [1., 1.412, 3.136, 4.367, 4.874],
        [1., 4.13, 8.22, 11.059, 12.105],
        [1., 0.497, 0.543, 0.566, 0.562],
        [1., 1.106, 1.732, 2.524, 2.999],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 2.097, 3.588, 4.132, 4.21],
        [1., 0.031, 0.574, 1.136, 1.138],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.883, 5.095, 6.752, 7.269],
        [1., 0.75, 1.027, 1.203, 1.211],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.318, 2.021, 2.277, 2.427],
        [1., 0.834, 1.22, 1.628, 1.784],
        [1., 2.809, 4.114, 4.67, 4.812],
        [1., 1.001, 1.517, 1.788, 1.848],
        [1., 0.516, 0.531, 0.444, 0.425],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.332, 2.303, 2.976, 3.154],
        [1., 0.926, 1.76, 2.18, 2.257],
        [1., 0.82, 0.941, 1.022, 1.039],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.456, 0.744, 0.951, 1.063],
        [1., 0.935, 1.906, 3.231, 4.248],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.684, 5.049, 6.949, 7.429],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 2.193, 4.267, 4.837, 5.077],
        [1., 0.46, 0.758, 0.885, 0.963],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 2.37, 6.213, 7.268, 7.712],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 3.287, 5.431, 6.646, 7.055],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 2.143, 3.467, 4.115, 4.219],
        [1., 0.352, 5.249, 7.751, 8.342],
        [1., 38.699, 83.483, 105.342, 113.197],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.914, 0.922, 1.001, 1.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [0., 0., 0., 0., 0.],
        [1., 1.679, 3.47, 4.338, 4.857],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.]]),
    'spacing_noise_resp': np.array([
        -1000., -1000., 1.311, 0.389, -1000., -1000., 1.481, 0., 1.171, 0.746,
        -1000., -1000., 1.326, -1000., -1000., -1000., 2.073, 1.351, 1.555, 2.658,
        1.119, 0.766, 1.443, 1.229, -1000., -1000., 1.886, 2.514, -1000., -1000.,
        0.914, -1000., -1000., -1000., -1000., -1000., 1.983, -1000., 1.651, 0.002,
        1.711, 1.513, -1000., 0.487, -1000., -1000., 0.644, 1.92, -1000., 1.511,
        -1000., 2.546, -1000., 1.243, -1000., 1.1, -1000., -1000., -1000., -1000.,
        -1000., 1.383, -1000., 0.354]),
    'spacing_mean_gains': np.array([
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.451, 0.892, 0.571, 0.463, 0.355, 0.309, 0.31, 0.29],
        [3.686, 0.22, 1.055, 1.887, 1.102, 0.582, 0.377, 0.295],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.98, 2.184, 1.7, 1.341, 1.146, 1.051, 1.084, 1.148],
        [0., 0., 0., 121.892, 2264.283, 4134.77, 6578.282, 7643.491],
        [0.862, 0.369, 0.092, 0.128, 0.212, 0.252, 0.378, 0.466],
        [0.064, 0.296, 0.002, 0., 0., 0., 0., 0.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.309, 1.045, 0.957, 0.894, 0.833, 0.806, 0.795, 0.788],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.246, 0.721, 0.609, 0.581, 0.56, 0.529, 0.519, 0.522],
        [0.475, 0.322, 0.264, 0.32, 0.441, 0.511, 0.597, 0.595],
        [3.005, 1.442, 0.568, 0.304, 0.123, 0.03, 0.07, 0.072],
        [1.782, 1.203, 0.894, 0.685, 0.624, 0.575, 0.527, 0.514],
        [3.089, 2.323, 2.114, 2.28, 1.327, 1.262, 1.296, 1.137],
        [0.96, 1.116, 1.274, 1.408, 1.252, 1.233, 1.282, 1.311],
        [1.581, 1.21, 0.537, 0.41, 0.236, 0.162, 0.148, 0.167],
        [1.476, 1.229, 1.115, 1.099, 1.151, 1.192, 1.167, 1.16],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.575, 0.877, 0.641, 0.629, 0.601, 0.574, 0.595, 0.693],
        [2.007, 1.411, 0.845, 0.58, 0.751, 0.64, 0.677, 0.656],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [7.21, 6.295, 2.955, 1.192, 0.802, 0.598, 0.328, 0.207],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.315, 0.602, 0.388, 0.506, 0.369, 0.361, 0.272, 0.21],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [0.459, 0.592, 0.696, 0.783, 0.857, 0.955, 1.029, 1.07],
        [3167.361, 1410.699, 1193.24, 494.32, 415.883, 361.806, 360.994, 369.15],
        [3.139, 1.409, 1.13, 0.594, 0.414, 0.247, 0.237, 0.248],
        [0.827, 0.439, 0.207, 0.272, 0.272, 0.295, 0.35, 0.382],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [3.496, 3.313, 3.812, 3.285, 2.608, 2.13, 1.896, 1.658],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [3.94, 2.813, 2.319, 1.676, 0.931, 0.893, 1.042, 1.101],
        [1.606, 1.029, 0.713, 0.568, 0.365, 0.237, 0.203, 0.195],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.531, 1.652, 0.736, 0.819, 0.281, 0.185, 0.13, 0.118],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.087, 0.715, 0.458, 0.428, 0.245, 0.197, 0.187, 0.187],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.997, 2.236, 1.526, 0.826, 0.771, 0.385, 0.387, 0.396],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.899, 1.315, 1.52, 1.283, 1.183, 1.146, 1.138, 1.063],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.509, 1.367, 1.022, 0.987, 0.584, 0.443, 0.394, 0.395],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.28, 2.111, 3.333, 3.041, 2.966, 2.685, 2.942, 2.744]])
}

model_run_5 = {
    'train_acc': 0.8710,
    'validation_acc': 0.8432,
    'no_optimal_stimulus_neurons': np.array(
        [0, 3, 4, 10, 11, 13, 16, 17, 19, 30, 31, 32, 33, 35, 36, 37, 42, 43, 45, 48, 49, 52, 56, 57, 58, 59, 62]),
    'c_len_iou_vs_len_test': np.array([0.9633, 0.5063, 0.8410, 0.8820, 0.9086]),
    'c_len_noise_resp': np.array([
        -1000., 2.322, 1.221, -1000., -1000., 0.902, 0.441, 1.128, 2.08, 0.815,
        -1000., -1000., 1.233, -1000., 1.449, 1.115, -1000., -1000., 0.513, -1000.,
        0.477, 2.111, 1.417, 0.061, 3.426, 1.77, 1.37, 0., 0.033, 0.24,
        -1000., -1000., -1000., -1000., 1.498, -1000., -1000., -1000., 1.875, 0.274,
        2.097, 2.388, -1000., -1000., 0.664, -1000., 1.303, 0.015, -1000., -1000.,
        0.828, 0.056, -1000., 0.632, 2.419, 1.598, -1000., -1000., -1000., -1000.,
        0.51, 1.561, -1000., 0.004]),
    'c_len_mean_gains': np.array([
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.967, 1.033, 1.071, 1.065],
        [1., 0.846, 1.226, 1.292, 1.302],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.815, 2.483, 2.674, 2.719],
        [1., 0.057, 1.607, 3.351, 3.992],
        [1., 0.941, 1.388, 1.649, 1.683],
        [1., 1., 1.366, 1.467, 1.463],
        [1., 2.048, 3.184, 3.893, 4.004],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.025, 1.251, 1.378, 1.374],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.325, 1.916, 1.979, 2.055],
        [1., 1.414, 2.828, 3.35, 3.452],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 2.52, 4.522, 6.692, 7.01],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 2.707, 5.312, 5.72, 5.959],
        [1., 1.118, 2.424, 3.361, 3.629],
        [1., 1.269, 1.781, 1.94, 1.987],
        [1., 0.016, 8.464, 42.2, 56.557],
        [1., 1.151, 1.321, 1.394, 1.446],
        [1., 1.339, 2.025, 2.253, 2.304],
        [1., 0.006, 0.358, 0.753, 0.85],
        [0.975, 0., 0., 0., 0.],
        [1., 4.388, 29.426, 33.897, 30.659],
        [1., 4.376, 12.423, 14.686, 15.022],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.239, 1.735, 1.965, 2.102],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.796, 1.242, 1.472, 1.484],
        [1., 1.909, 5.982, 7.228, 7.506],
        [1., 1.271, 1.774, 1.871, 1.871],
        [1., 1.238, 1.85, 2.032, 2.034],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.615, 1.241, 1.456, 1.451],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.38, 0.556, 0.884, 0.936],
        [0.999, 12.083, 55.729, 76.656, 79.835],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.659, 1.864, 2.462, 2.427],
        [1., 0.678, 16.365, 32.82, 41.329],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 0.182, 2.173, 3.224, 3.362],
        [1., 1.094, 1.515, 1.666, 1.692],
        [1., 1.232, 1.935, 2.418, 2.511],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000.],
        [1., 1.775, 6.753, 9.108, 9.289],
        [1., 1.319, 2.782, 4.087, 4.442],
        [-1000., -1000., -1000., -1000., -1000.],
        [0.997, 361.205, 926.721, 1124.718, 1116.109]]),
    'spacing_noise_resp': np.array([
        -1000., 2.336, 1.17, -1000., -1000., 0.902, 0.407, 1.158, 2.198, 0.862,
        -1000., -1000., 1.232, -1000., 1.439, 1.046, -1000., -1000., 0.562, -1000.,
        0.515, 2.027, 1.417, 0.037, 3.43, 1.74, 1.372, 0., 0.028, 0.233,
        -1000., -1000., -1000., -1000., 1.533, -1000., -1000., -1000., 1.905, 0.283,
        2.083, 2.37, -1000., -1000., 0.622, -1000., 1.372, 0.012, -1000., -1000.,
        0.841, 0.055, -1000., 0.643, 2.314, 1.584, -1000., -1000., -1000., -1000.,
        0.508, 1.448, -1000., 0.]),
    'spacing_mean_gains': np.array([
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.073, 0.78, 0.626, 0.574, 0.584, 0.598, 0.608, 0.616],
        [1.332, 0.675, 0.32, 0.413, 0.494, 0.471, 0.474, 0.478],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.671, 1.787, 1.303, 1.041, 0.959, 0.901, 0.882, 0.881],
        [3.791, 3.667, 2.724, 2.335, 2.288, 2.505, 2.928, 3.596],
        [1.626, 1.205, 1.349, 1.438, 1.48, 1.524, 1.579, 1.657],
        [1.385, 0.576, 0.069, 0.13, 0.105, 0.123, 0.097, 0.084],
        [3.685, 2.102, 1.118, 0.47, 0.271, 0.173, 0.179, 0.185],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.354, 1.251, 1.135, 1.075, 1.044, 1.07, 1.137, 1.154],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.981, 1.85, 1.207, 1.05, 0.842, 0.885, 0.82, 0.772],
        [3.47, 2.574, 1.651, 0.963, 0.998, 0.971, 0.956, 0.985],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [6.1, 4.179, 4., 3., 2.035, 2.288, 2.152, 2.204],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [5.416, 2.299, 0.874, 0.983, 0.388, 0.83, 1.296, 1.588],
        [3.441, 2.095, 1.712, 1.438, 1.056, 0.856, 0.833, 0.843],
        [1.959, 1.45, 1.156, 1.154, 0.929, 0.88, 0.886, 0.91],
        [69.751, 46.948, 32.986, 26.551, 1., 6.153, 2.707, 2.957],
        [1.413, 0.524, 0.156, 0.108, 0.027, 0.023, 0.017, 0.013],
        [2.239, 1.195, 0.768, 0.199, 0.024, 0., 0., 0.],
        [0.756, 0.549, 0.393, 0.671, 0.959, 1.179, 1.217, 1.228],
        [0., 0., 0., 0., 0., 91746.316, 120537.168, 133302.288],
        [37.309, 48.305, 43.452, 1.368, 5.107, 1.725, 1.845, 1.069],
        [15.199, 11.574, 6.145, 7.691, 4.062, 2.927, 2.542, 3.185],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.971, 1.171, 0.655, 0.591, 0.426, 0.438, 0.462, 0.509],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.429, 1.234, 1.063, 1.17, 1.07, 1.013, 1.066, 1.084],
        [7.155, 5.559, 4.48, 0.862, 0.95, 1.406, 1.937, 2.429],
        [1.863, 0.926, 0.506, 0.595, 0.219, 0.146, 0.112, 0.083],
        [2.03, 1.572, 1.272, 1.056, 1.123, 0.894, 0.972, 1.029],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [1.569, 0.825, 1.158, 1.371, 0.676, 0.619, 0.749, 0.91],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [0.804, 0.074, 0.02, 0., 0., 0.003, 0.136, 0.25],
        [100.196, 88.547, 111.598, 101.869, 88.037, 95.323, 101.045, 99.352],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.427, 2.061, 0.658, 0.715, 0.842, 0.681, 0.918, 1.013],
        [34.121, 21.715, 27.957, 32.062, 27.612, 30.58, 29.595, 27.253],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [2.974, 2.889, 0.929, 0.809, 0.003, 0., 0.004, 0.161],
        [1.75, 0.581, 0.15, 0.241, 0.303, 0.343, 0.332, 0.334],
        [2.438, 1.951, 1.574, 1.343, 1.514, 1.276, 1.229, 1.204],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [9.054, 0.823, 0.885, 1.138, 1.675, 1.713, 1.64, 1.665],
        [4.486, 3.479, 1.601, 0.778, 0.742, 0.745, 0.818, 0.782],
        [-1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.],
        [404659.905, 384661.943, 317206.172, 205694.121, 134455.447, 136037.688, 128622.146, 112848.379]])
}


# ---------------------------------------------------------------------------------------
def get_filtered_idx_arr_max_gain(gains_arr, max_gain=20.0):
    """
    Get all  neurons with any gain less than 20 and that are responsive (gains are not all zero)
    and for whom the optimal stimulus was found (does not contain INVALID_RESULTS)
    :param
    :return:
    """
    idx_arr = []

    for idx, gains in enumerate(gains_arr):
        if np.all(gains <= max_gain) and not np.all(gains == 0) and not np.any(gains == INVALID_RESULTS):
            idx_arr.append(idx)
            # print(idx, gains)

    return idx_arr


def get_population_averages(results_dict_list, verbose=0):
    """

    Find the population average gain vs len and vs. spacing results for all runs in results_dict_list

    :param verbose:
    :param results_dict_list:
    :return:
    """
    filtered_c_len_results = []
    filtered_space_results = []

    for r_idx, results_dict in enumerate(results_dict_list):
        valid_clen_idxs = get_filtered_idx_arr_max_gain(results_dict['c_len_mean_gains'])
        valid_space_idxs = get_filtered_idx_arr_max_gain(results_dict['spacing_mean_gains'])

        # Process results only for those neurons for whom both sets of results is valid
        valid_idxs = set(valid_clen_idxs) & set(valid_space_idxs)
        valid_idxs = list(valid_idxs)

        if verbose > 0:
            print("Run {}: Optimal Stimulus found for {} Neurons. Valid: Clen {}, Space {}, Both {}".format(
                r_idx, 64 - len(results_dict['no_optimal_stimulus_neurons']),
                len(valid_clen_idxs), len(valid_space_idxs), len(valid_idxs)))

        filtered_c_len_results.extend(results_dict['c_len_mean_gains'][valid_idxs, ])
        filtered_space_results.extend(results_dict['spacing_mean_gains'][valid_idxs, ])

    filtered_c_len_results = np.array(filtered_c_len_results)
    filtered_space_results = np.array(filtered_space_results)

    return np.mean(filtered_c_len_results, 0), np.std(filtered_c_len_results, 0), filtered_c_len_results.shape[0], \
        np.mean(filtered_space_results, 0), np.std(filtered_space_results, 0), filtered_space_results.shape[0]


def plot_individual_run_curves(results_dict_list, label=None):
    """
    Plot the clen and spacing results of individual runs separately
    :param results_dict_list:
    :param label:
    :return:
    """

    f, ax_arr = plt.subplots(1, 2, figsize=(10, 5))

    for r_idx, results_dict in enumerate(results_dict_list):

        # print("Plotting results [{}/{}]".format(r_idx, len(results_dict_list)))

        c_len_means, c_len_stds, c_len_n, space_means, space_stds, space_n = \
            get_population_averages([results_dict])

        if c_len_n != 0:
            ax_arr[0].plot(c_len_arr, c_len_means, label='run {} (N={})'.format(r_idx, c_len_n))
        if space_n != 0:
            ax_arr[1].plot(spacing_arr, space_means, label='run {} (N={})'.format(r_idx, space_n))

    ax_arr[0].set_xlabel("Contour Length (# Fragments)")
    ax_arr[0].set_ylabel("Gain")
    ax_arr[0].grid()
    ax_arr[0].legend()

    ax_arr[1].set_xlabel("Spacing (RCD)")
    ax_arr[1].set_ylabel("Gain")
    ax_arr[1].grid()
    ax_arr[1].legend()

    f.suptitle(label)


def get_iou_per_len(result_dict):
    # return result_dict['c_len_iou_vs_len_validation']
    return result_dict['c_len_iou_vs_len_test']


def get_population_avg_iou_results_per_len(result_dict_list):
    """ Population IoU per Length """

    combined_iou_results = []

    for idx, result in enumerate(result_dict_list):
        combined_iou_results.append(get_iou_per_len(result))

    combined_iou_results = np.array(combined_iou_results)

    return np.mean(combined_iou_results, axis=0)


def get_model_average_ious(result_dict_list):
    """ Population overall of overall Training and Validation IoU scores"""
    combined_train_iou = []
    combined_val_iou = []
    combined_test_iou = []

    for idx, result in enumerate(result_dict_list):
        combined_train_iou.append(result['train_acc'])
        combined_val_iou.append(result['validation_acc'])
        combined_test_iou.append(get_iou_per_len(result))

    combined_train_iou = np.array(combined_train_iou)
    combined_val_iou = np.array(combined_val_iou)

    combined_test_iou = np.array(combined_test_iou)
    # Avg. across all lengths. Make is similar to Validation.
    combined_test_iou = np.mean(combined_test_iou, axis=1)

    return np.mean(combined_train_iou), np.std(combined_train_iou), \
        np.mean(combined_val_iou), np.std(combined_val_iou), \
        np.mean(combined_test_iou), np.std(combined_test_iou)


def get_network_results(results_dict_list, label=None):
    """ Get population overages across multiple runs  and store them in a results dictionary"""

    if label is not None:
        print("Getting results for {} ...\n{}".format(label, '*' * 80))

    # Experiment Results
    pop_c_len_means, pop_c_len_stds, pop_c_len_n, pop_space_means, pop_space_stds, pop_space_n = \
        get_population_averages(results_dict_list, verbose=1)
    print("Mean c_len gains {},\nMean space gains {}".format(pop_c_len_means, pop_space_means))

    # Model IoU Overall Training and per Contour Length
    pop_c_len_iou = get_population_avg_iou_results_per_len(results_dict_list)
    overall_iou_arr = get_model_average_ious(results_dict_list)
    print("Mean IoUs: Train {:0.4f} +- {:0.4f}, val {:0.4f} +- {:0.4f}, "
          "test {:0.4f} +- {:0.4f}".format(
            overall_iou_arr[0], overall_iou_arr[1], overall_iou_arr[2],
            overall_iou_arr[3], overall_iou_arr[4], overall_iou_arr[5]))

    # Get all OUTPUT vs clen and space curves for all individual neurons
    all_clen_ci_block_outputs, all_space_ci_block_outputs = \
        get_all_cont_int_layer_outputs(results_dict_list)

    processed_results = {
        'pop_c_len_means': pop_c_len_means,
        'pop_c_len_stds': pop_c_len_stds,
        'pop_c_len_n': pop_c_len_n,
        'pop_space_means': pop_space_means,
        'pop_space_stds': pop_space_stds,
        'pop_space_n': pop_space_n,
        'pop_c_len_iou': pop_c_len_iou,
        'overall_iou_arr': overall_iou_arr,  # Tuple see above.
        'all_clen_ci_block_outputs': all_clen_ci_block_outputs,
        'all_space_ci_block_outputs': all_space_ci_block_outputs,
    }

    return processed_results


def get_all_cont_int_layer_outputs(results_dict_list):
    """
    return an array of CI Layer OUTPUTS vs. len and gain vs spacing
    of all individual runs in a single array.

    :param results_dict_list:
    :return:
    """

    combined_c_len_results = []
    combined_space_results = []

    for idx, result in enumerate(results_dict_list):
        noise_resp_c_len = result['c_len_noise_resp']
        c_len_gains = result['c_len_mean_gains']

        c_len_outs = c_len_gains * noise_resp_c_len[:, np.newaxis]
        combined_c_len_results.extend(c_len_outs)

        noise_resp_space = result['spacing_noise_resp']
        space_gains = result['spacing_mean_gains']

        space_outs = space_gains * noise_resp_space[:, np.newaxis]
        combined_space_results.extend(space_outs)

    combined_c_len_results = np.array(combined_c_len_results)
    combined_space_results = np.array(combined_space_results)

    # Zero all INVALID Entries
    combined_c_len_results[combined_c_len_results >= (INVALID_RESULTS * INVALID_RESULTS)] = 0
    combined_space_results[combined_space_results >= (INVALID_RESULTS * INVALID_RESULTS)] = 0

    return combined_c_len_results, combined_space_results


def get_gradients_of_linear_fits(x, outputs_arr):
    gradients = []

    for ch_idx in range(len(outputs_arr)):
        ch_outputs = outputs_arr[ch_idx, ]
        m_out, b_out = np.polyfit(x, ch_outputs, deg=1)

        gradients.append(m_out)

    return np.array(gradients)


# =================================================================================================
if __name__ == "__main__":
    plt.ion()
    np.set_printoptions(precision=3, linewidth=120, suppress=True, threshold=np.inf)
    plot_neuro_results = True

    c_len_arr = np.array([1, 3, 5, 7, 9])  # Units of contour fragments
    # Units of relative co-linear distance (RCD)
    spacing_arr = np.array([1.00, 1.14, 1.29, 1.43, 1.57, 1.71, 1.86, 2.00])

    network_a = [
        model_run_1,
        model_run_2,
        model_run_3,
        model_run_4,
        model_run_5,
    ]
    net_a_name = 'Model'

    network_b = [
        control_run_1,
        control_run_2,
        control_run_3,
        control_run_4,
        control_run_5,
    ]
    net_b_name = 'Control'

    # -----------------------------------------------------------------------------------
    # Process Results
    net_a_results = get_network_results(network_a, net_a_name)
    plot_individual_run_curves(network_a, label=net_a_name)

    net_b_results = get_network_results(network_b, net_b_name)
    plot_individual_run_curves(network_b, label=net_b_name)

    # -----------------------------------------------------------------------------------
    # Combined Plot
    # -----------------------------------------------------------------------------------
    fig = plt.figure(constrained_layout=True, figsize=(13, 5))
    gs = fig.add_gridspec(2, 12)

    # [A] Behavioral IoU vs contour length
    # -------------------------------------------------------------------------
    ax1 = fig.add_subplot(gs[0, 0:4])
    ax1.plot(c_len_arr, net_a_results['pop_c_len_iou'], label=net_a_name, color='b', marker='x')
    ax1.plot(c_len_arr, net_b_results['pop_c_len_iou'], label=net_b_name, color='r', marker='o')
    ax1.text(1, 0.1, 'A', fontsize=30)
    ax1.set_yticks([0, 0.5, 1])
    ax1.set_ylabel('IoU')
    ax1.set_xticks(c_len_arr)
    ax1.set_xlabel("Length (fragments)")
    ax1.legend(loc='lower right')

    # [B] Gain vs contour length
    # -------------------------------------------------------------------------
    ax2 = fig.add_subplot(gs[0, 4:8])

    if net_a_results['pop_c_len_n'] > 0:
        ax2.plot(
            c_len_arr, net_a_results['pop_c_len_means'],
            # label='Model (N={})'.format(model_pop_c_len_n),
            color='b', marker='x'
        )
        ax2.fill_between(
            c_len_arr,
            net_a_results['pop_c_len_means'] - net_a_results['pop_c_len_stds'],
            net_a_results['pop_c_len_means'] + net_a_results['pop_c_len_stds'],
            alpha=0.2, color='b')

    if net_b_results['pop_c_len_n'] > 0:
        ax2.plot(
            c_len_arr, net_b_results['pop_c_len_means'],
            # label='Model (N={})'.format(model_pop_c_len_n),
            color='r', marker='o'
        )
        ax2.fill_between(
            c_len_arr,
            net_b_results['pop_c_len_means'] - net_b_results['pop_c_len_stds'],
            net_b_results['pop_c_len_means'] + net_b_results['pop_c_len_stds'],
            alpha=0.2, color='r')

    if plot_neuro_results:
        ax2.plot(
            monkey_ma['c_len'], neuro_c_len_results,
            color='black', marker='s', markersize=5, label='Measured')

    ax2.text(1, 5, 'B', fontsize=30)
    ax2.set_xticks(c_len_arr)
    ax2.set_xlabel("Length (fragments)")
    ax2.set_ylabel("Gain")
    ax2.set_ylim(bottom=-0.2)
    ax2.legend()

    # [C] Gain Vs Fragment Spacing
    # -------------------------------------------------------------------------
    ax3 = fig.add_subplot(gs[0, 8:12], sharey=ax2)

    if net_a_results['pop_space_n'] > 0:
        ax3.plot(
            spacing_arr, net_a_results['pop_space_means'],
            label='{} (N={})'.format(net_a_name, net_a_results['pop_space_n']),
            color='b', marker='x'
        )
        ax3.fill_between(
            spacing_arr,
            net_a_results['pop_space_means'] - net_a_results['pop_space_stds'],
            net_a_results['pop_space_means'] + net_a_results['pop_space_stds'],
            alpha=0.2, color='b')

    if net_b_results['pop_space_n'] > 0:
        ax3.plot(
            spacing_arr, net_b_results['pop_space_means'],
            label='{} (N={})'.format(net_b_name, net_b_results['pop_space_n']),
            color='r', marker='o'
        )
        ax3.fill_between(
            spacing_arr,
            net_b_results['pop_space_means'] - net_b_results['pop_space_stds'],
            net_b_results['pop_space_means'] + net_b_results['pop_space_stds'],
            alpha=0.2, color='r')

    if plot_neuro_results:
        ax3.plot(monkey_ma['rcd'], neuro_space_results, color='black', marker='s',
                 markersize=5, label='measured')

    ax3.text(1, 4, 'C', fontsize=30)
    ax3.set_xlabel("Spacing (RCD)")
    # ax3.set_ylabel("Gain")
    # ax3.set_xlim([0.99, 2.01])
    # ax3.legend()

    # [4] histogram CI Outputs vs Length - Model
    # ----------------------------------------------------------------------------
    c_len_bin_max = 1.5
    c_len_bin_min = -0.2
    c_len_bins = np.arange(c_len_bin_min, c_len_bin_max + 0.1, 0.1)

    ax4 = fig.add_subplot(gs[1, 0:3])

    if len(net_a_results['all_clen_ci_block_outputs']) > 0:
        net_a_c_len_grads = get_gradients_of_linear_fits(c_len_arr, net_a_results['all_clen_ci_block_outputs'])

        ax4.hist(
            net_a_c_len_grads.clip(min=c_len_bin_min, max=c_len_bin_max),  # Include all data points
            label=net_a_name, color='blue', bins=c_len_bins, edgecolor='black', linewidth=1.2)

    ax4.text(c_len_bin_min - 0.2, 60, 'D', fontsize=30)
    ax4.set_ylabel("Freq")
    ax4.set_xlabel("gradients - length")
    ax4.legend()
    ax4.set_xlim([c_len_bin_min - 0.2, c_len_bin_max + 0.3])

    # [5] histogram Gain vs Spacing - Model
    # --------------------------------
    spacing_bin_max = 5
    spacing_bin_min = -10
    spacing_bins = np.arange(spacing_bin_min, spacing_bin_max + 1, 1)

    ax6 = fig.add_subplot(gs[1, 3:6])

    if len(net_a_results['all_clen_ci_block_outputs']) > 0:
        net_a_spacing_grads = get_gradients_of_linear_fits(spacing_arr, net_a_results['all_space_ci_block_outputs'])

        ax6.hist(
            net_a_spacing_grads.clip(min=spacing_bin_min, max=spacing_bin_max),  # Include all data points
            label="Contour Int. (N={})".format(len(net_a_results['all_space_ci_block_outputs'])),
            color='blue', bins=spacing_bins, edgecolor='black', linewidth=1.2)

    ax6.text(spacing_bin_min, 85, 'E', fontsize=30)
    # ax6.set_ylabel("Freq")
    ax6.set_xlabel("gradients - spacing")
    # ax6.legend()

    # [6] histogram Gain vs Length - Control
    # --------------------------------
    ax5 = fig.add_subplot(gs[1, 6:9], sharex=ax4)

    if len(net_b_results['all_clen_ci_block_outputs']) > 0:
        net_b_c_len_grads = get_gradients_of_linear_fits(c_len_arr, net_b_results['all_clen_ci_block_outputs'])

        ax5.hist(
            net_b_c_len_grads.clip(min=c_len_bin_min, max=c_len_bin_max),  # Include all data points
            label="Control", color='red', bins=c_len_bins, edgecolor='black', linewidth=1.2)

    ax5.text(c_len_bin_min - 0.1, 32, 'F', fontsize=30)
    # ax5.set_ylabel("Freq")
    ax5.legend()
    ax5.set_xlabel("gradients - length")

    # histogram Gain vs Spacing - Control
    # --------------------------------
    ax7 = fig.add_subplot(gs[1, 9:12])

    if len(net_b_results['all_space_ci_block_outputs']) > 0:
        net_b_spacing_grads = get_gradients_of_linear_fits(spacing_arr, net_b_results['all_space_ci_block_outputs'])

        z = ax7.hist(
            net_b_spacing_grads.clip(min=spacing_bin_min, max=spacing_bin_max),  # Include all data points
            label="Control (N={})".format(len(net_b_results['all_space_ci_block_outputs'])), color='red',
            bins=spacing_bins, edgecolor='black', linewidth=1.2)

    ax7.text(spacing_bin_min, 34, 'G', fontsize=30)
    # ax7.set_ylabel("Freq")
    # ax7.legend()
    ax7.set_xlabel("gradients - spacing")

    # ---------------------------------------------------------------------------------------------
    # End
    # ---------------------------------------------------------------------------------------------
    import pdb
    pdb.set_trace()
